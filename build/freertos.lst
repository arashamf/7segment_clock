ARM GAS  /tmp/ccPpHXvv.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.align	2
  19              	.LC2:
  20 000c 5461736B 		.ascii	"TaskSetupTimeonBoard\000"
  20      53657475 
  20      7054696D 
  20      656F6E42 
  20      6F617264 
  21 0021 000000   		.align	2
  22              	.LC4:
  23 0024 5461736B 		.ascii	"TaskMessagingDS3231\000"
  23      4D657373 
  23      6167696E 
  23      67445333 
  23      32333100 
  24              		.align	2
  25              	.LC6:
  26 0038 5461736B 		.ascii	"TaskParseUARTmsg\000"
  26      50617273 
  26      65554152 
  26      546D7367 
  26      00
  27              		.text
  28              	.Ltext0:
  29              		.cfi_sections	.debug_frame
  30              		.section	.text.ProgTimerI2C_timeoutCallback,"ax",%progbits
  31              		.align	1
  32              		.global	ProgTimerI2C_timeoutCallback
  33              		.syntax unified
  34              		.thumb
  35              		.thumb_func
  37              	ProgTimerI2C_timeoutCallback:
  38              	.LVL0:
  39              	.LFB829:
  40              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
ARM GAS  /tmp/ccPpHXvv.s 			page 2


   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "rtc.h"
  29:Core/Src/freertos.c **** #include "typedef.h"
  30:Core/Src/freertos.c **** #include "usart.h"
  31:Core/Src/freertos.c **** #include "LED_display.h"
  32:Core/Src/freertos.c **** #include "time_protocol.h"
  33:Core/Src/freertos.c **** #include <stdio.h>
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  53:Core/Src/freertos.c **** osTimerId osProgTimerI2C_timeout;
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** osThreadId MessagingDS3231TaskHandle;
  56:Core/Src/freertos.c **** osThreadId SetupTimeonBoardTaskHandle;
  57:Core/Src/freertos.c **** osThreadId ParseUARTmsgTaskHandle;
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** osMutexId I2CmutexHandle; //–º—å—é—Ç–µ–∫—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–º–∞–Ω–¥ —è—á–
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** uint8_t timeout_flag = OFF;
ARM GAS  /tmp/ccPpHXvv.s 			page 3


  62:Core/Src/freertos.c **** __IO uint32_t UNIXtimeDS3231 = 0;
  63:Core/Src/freertos.c **** /* USER CODE END Variables */
  64:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  68:Core/Src/freertos.c **** void ProgTimerI2C_timeoutCallback (void const *argument);
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** void SetupTimeonBoard(void const * argument);
  71:Core/Src/freertos.c **** void LaunchMessagingDS3231 (void const * argument);
  72:Core/Src/freertos.c **** void ParseUARTmsg  (void const * argument);
  73:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  76:Core/Src/freertos.c **** 
  77:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  80:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  81:Core/Src/freertos.c **** 
  82:Core/Src/freertos.c **** /* GetTimerTaskMemory prototype (linked to static allocation support) */
  83:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  86:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  87:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  90:Core/Src/freertos.c **** {
  91:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  92:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  93:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  94:Core/Src/freertos.c ****   /* place for user code */
  95:Core/Src/freertos.c **** }
  96:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c **** /* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
  99:Core/Src/freertos.c **** static StaticTask_t xTimerTaskTCBBuffer;
 100:Core/Src/freertos.c **** static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
 103:Core/Src/freertos.c **** {
 104:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 105:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 106:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 107:Core/Src/freertos.c ****   /* place for user code */
 108:Core/Src/freertos.c **** }
 109:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c **** /**
 112:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 113:Core/Src/freertos.c ****   * @param  None
 114:Core/Src/freertos.c ****   * @retval None
 115:Core/Src/freertos.c ****   */
 116:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 117:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 118:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccPpHXvv.s 			page 4


 119:Core/Src/freertos.c ****   /* USER CODE END Init */
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 122:Core/Src/freertos.c ****   osMutexDef (I2CmutexHandle); 
 123:Core/Src/freertos.c **** 	I2CmutexHandle = osMutexCreate(osMutex (I2CmutexHandle));
 124:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 125:Core/Src/freertos.c **** 
 126:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 127:Core/Src/freertos.c ****   /* add semaphores, ... */
 128:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 129:Core/Src/freertos.c **** 
 130:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 131:Core/Src/freertos.c ****   osTimerDef (TimerI2C_timeout, ProgTimerI2C_timeoutCallback);
 132:Core/Src/freertos.c **** 	osProgTimerI2C_timeout = osTimerCreate(osTimer (TimerI2C_timeout), osTimerOnce, NULL);
 133:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 134:Core/Src/freertos.c **** 
 135:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 136:Core/Src/freertos.c ****   /* add queues, ... */
 137:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 138:Core/Src/freertos.c **** 
 139:Core/Src/freertos.c ****   /* Create the thread(s) */
 140:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 141:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityIdle, 0, 128);
 142:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 143:Core/Src/freertos.c **** 
 144:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 145:Core/Src/freertos.c ****   
 146:Core/Src/freertos.c ****   osThreadDef(TaskSetupTimeonBoard, SetupTimeonBoard, osPriorityNormal , 0, 128);
 147:Core/Src/freertos.c ****   SetupTimeonBoardTaskHandle = osThreadCreate(osThread(TaskSetupTimeonBoard), NULL);
 148:Core/Src/freertos.c **** 
 149:Core/Src/freertos.c ****   osThreadDef(TaskMessagingDS3231, LaunchMessagingDS3231, osPriorityNormal , 0, 128);
 150:Core/Src/freertos.c ****   MessagingDS3231TaskHandle = osThreadCreate(osThread(TaskMessagingDS3231), NULL);
 151:Core/Src/freertos.c **** 
 152:Core/Src/freertos.c ****   osThreadDef(TaskParseUARTmsg, ParseUARTmsg, osPriorityNormal , 0, 128);
 153:Core/Src/freertos.c ****   ParseUARTmsgTaskHandle = osThreadCreate(osThread(TaskParseUARTmsg), NULL);
 154:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 155:Core/Src/freertos.c **** 
 156:Core/Src/freertos.c **** }
 157:Core/Src/freertos.c **** 
 158:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 159:Core/Src/freertos.c **** /**
 160:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 161:Core/Src/freertos.c ****   * @param  argument: Not used
 162:Core/Src/freertos.c ****   * @retval None
 163:Core/Src/freertos.c ****   */
 164:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 165:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 166:Core/Src/freertos.c **** {
 167:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 168:Core/Src/freertos.c ****   /* Infinite loop */
 169:Core/Src/freertos.c ****   for(;;)
 170:Core/Src/freertos.c ****   {
 171:Core/Src/freertos.c ****     osDelay(100);
 172:Core/Src/freertos.c ****   }
 173:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 174:Core/Src/freertos.c **** }
 175:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccPpHXvv.s 			page 5


 176:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 177:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 178:Core/Src/freertos.c **** //---------------------------------------------------------------------------//
 179:Core/Src/freertos.c **** void LaunchMessagingDS3231 (void const * argument)
 180:Core/Src/freertos.c **** {
 181:Core/Src/freertos.c ****   uint32_t tickcount = osKernelSysTick();
 182:Core/Src/freertos.c **** 
 183:Core/Src/freertos.c ****   for(;;)
 184:Core/Src/freertos.c ****   {
 185:Core/Src/freertos.c ****     if (osMutexWait (I2CmutexHandle, 20) == osOK)
 186:Core/Src/freertos.c **** 		{	
 187:Core/Src/freertos.c ****         timeout_flag = OFF;
 188:Core/Src/freertos.c ****         osTimerStart (osProgTimerI2C_timeout, I2C_DELAY);
 189:Core/Src/freertos.c ****         UNIXtimeDS3231 = GetUnixTime_from_DS3231();
 190:Core/Src/freertos.c ****         osMutexRelease (I2CmutexHandle);
 191:Core/Src/freertos.c ****         osDelayUntil (&tickcount, 1000);
 192:Core/Src/freertos.c ****     }
 193:Core/Src/freertos.c ****   }
 194:Core/Src/freertos.c **** }
 195:Core/Src/freertos.c **** 
 196:Core/Src/freertos.c **** //---------------------------------------------------------------------------//
 197:Core/Src/freertos.c **** void SetupTimeonBoard (void const * argument)
 198:Core/Src/freertos.c **** {
 199:Core/Src/freertos.c ****   for(;;)
 200:Core/Src/freertos.c ****   {
 201:Core/Src/freertos.c ****     if (UNIXtimeDS3231 > 0)
 202:Core/Src/freertos.c ****     { 
 203:Core/Src/freertos.c ****       LED_data_output ((char *)return_HandleTimeBuff(), NUMB_DIGITS_BOARD);
 204:Core/Src/freertos.c ****     }  
 205:Core/Src/freertos.c ****     osDelay (3);
 206:Core/Src/freertos.c ****   }  
 207:Core/Src/freertos.c **** }
 208:Core/Src/freertos.c **** 
 209:Core/Src/freertos.c **** //---------------------------------------------------------------------------//
 210:Core/Src/freertos.c **** void ParseUARTmsg (void const * argument)
 211:Core/Src/freertos.c **** {
 212:Core/Src/freertos.c ****   __IO uint32_t TimeUART = 0;
 213:Core/Src/freertos.c ****   static uint8_t flagGetMsg = NO_MSG;
 214:Core/Src/freertos.c **** 
 215:Core/Src/freertos.c ****   for(;;)
 216:Core/Src/freertos.c ****   {
 217:Core/Src/freertos.c ****     if (flagGetMsg == NO_MSG)
 218:Core/Src/freertos.c ****     {
 219:Core/Src/freertos.c ****       if (check_ring_buffer () == GET_MSG) //–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª—å—Ü–µ–≤–æ–≥–æ –±—É—Ñ—Ñ–µ—Ä–∞
 220:Core/Src/freertos.c ****       {
 221:Core/Src/freertos.c ****         if ((TimeUART = return_UNIXtimeNTP()) > 0) //–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç UNIX-–≤—Ä–µ–º—è, –ø–æ–ª—É
 222:Core/Src/freertos.c ****         {
 223:Core/Src/freertos.c ****           //–µ—Å–ª–∏ UNIX-–≤—Ä–µ–º—è –æ—Ç ntp-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Ä–∞–≤–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç DS
 224:Core/Src/freertos.c ****           if ((UNIXtimeDS3231 != TimeUART) && ((TimeUART-UNIXtimeDS3231)>1)) 
 225:Core/Src/freertos.c ****           {
 226:Core/Src/freertos.c **** 
 227:Core/Src/freertos.c ****             #ifdef __USE_DBG
 228:Core/Src/freertos.c **** 	 	        //  snprintf (DBG_buffer,  BUFFER_SIZE, "DS3231=%ld,NTP=%ld\r\n", UNIXtimeDS3231, TimeUA
 229:Core/Src/freertos.c ****       	    //  DBG_PutString(DBG_buffer);
 230:Core/Src/freertos.c **** 	          #endif
 231:Core/Src/freertos.c ****             flagGetMsg = GET_MSG; //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω
 232:Core/Src/freertos.c ****           }
ARM GAS  /tmp/ccPpHXvv.s 			page 6


 233:Core/Src/freertos.c ****         }
 234:Core/Src/freertos.c ****       }
 235:Core/Src/freertos.c ****       osDelay (3);
 236:Core/Src/freertos.c ****     }
 237:Core/Src/freertos.c ****     else
 238:Core/Src/freertos.c ****     {
 239:Core/Src/freertos.c ****       if (osMutexWait (I2CmutexHandle, 20) == osOK)
 240:Core/Src/freertos.c **** 		  {	
 241:Core/Src/freertos.c ****         flagGetMsg = NO_MSG;
 242:Core/Src/freertos.c ****         timeout_flag = OFF; //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ —Ç–∞–π–º–∞—É—Ç–∞ I2C
 243:Core/Src/freertos.c ****         osTimerStart (osProgTimerI2C_timeout, I2C_DELAY); //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ —Ç–∞–π–º–∞—
 244:Core/Src/freertos.c ****         PrepareSendTimedata_to_DS3231(TimeUART); //–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–
 245:Core/Src/freertos.c ****         osMutexRelease (I2CmutexHandle); //–æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –º—å—é—Ç–µ–∫—Å–∞
 246:Core/Src/freertos.c ****         osDelay (1000);
 247:Core/Src/freertos.c ****       }
 248:Core/Src/freertos.c ****     }
 249:Core/Src/freertos.c ****   }
 250:Core/Src/freertos.c **** }
 251:Core/Src/freertos.c **** 
 252:Core/Src/freertos.c **** //---------------------------------------------------------------------------//
 253:Core/Src/freertos.c **** void ProgTimerI2C_timeoutCallback (void const *argument)
 254:Core/Src/freertos.c **** {
  41              		.loc 1 254 1 view -0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 0, uses_anonymous_args = 0
  45              		@ link register save eliminated.
 255:Core/Src/freertos.c ****   timeout_flag = ON;
  46              		.loc 1 255 3 view .LVU1
  47              		.loc 1 255 16 is_stmt 0 view .LVU2
  48 0000 014B     		ldr	r3, .L2
  49 0002 0122     		movs	r2, #1
  50 0004 1A70     		strb	r2, [r3]
 256:Core/Src/freertos.c **** }
  51              		.loc 1 256 1 view .LVU3
  52 0006 7047     		bx	lr
  53              	.L3:
  54              		.align	2
  55              	.L2:
  56 0008 00000000 		.word	.LANCHOR0
  57              		.cfi_endproc
  58              	.LFE829:
  60              		.section	.text.StartDefaultTask,"ax",%progbits
  61              		.align	1
  62              		.global	StartDefaultTask
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	StartDefaultTask:
  68              	.LFB825:
 166:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
  69              		.loc 1 166 1 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL1:
ARM GAS  /tmp/ccPpHXvv.s 			page 7


 166:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
  75              		.loc 1 166 1 is_stmt 0 view .LVU5
  76 0000 08B5     		push	{r3, lr}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
  81              	.LVL2:
  82              	.L5:
 169:Core/Src/freertos.c ****   {
  83              		.loc 1 169 3 is_stmt 1 discriminator 1 view .LVU6
 171:Core/Src/freertos.c ****   }
  84              		.loc 1 171 5 discriminator 1 view .LVU7
  85 0002 6420     		movs	r0, #100
  86 0004 FFF7FEFF 		bl	osDelay
  87              	.LVL3:
 169:Core/Src/freertos.c ****   {
  88              		.loc 1 169 8 discriminator 1 view .LVU8
  89 0008 FBE7     		b	.L5
  90              		.cfi_endproc
  91              	.LFE825:
  93              		.section	.text.LaunchMessagingDS3231,"ax",%progbits
  94              		.align	1
  95              		.global	LaunchMessagingDS3231
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	LaunchMessagingDS3231:
 101              	.LVL4:
 102              	.LFB826:
 180:Core/Src/freertos.c ****   uint32_t tickcount = osKernelSysTick();
 103              		.loc 1 180 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 180:Core/Src/freertos.c ****   uint32_t tickcount = osKernelSysTick();
 108              		.loc 1 180 1 is_stmt 0 view .LVU10
 109 0000 00B5     		push	{lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 4
 112              		.cfi_offset 14, -4
 113 0002 83B0     		sub	sp, sp, #12
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 16
 181:Core/Src/freertos.c **** 
 116              		.loc 1 181 3 is_stmt 1 view .LVU11
 181:Core/Src/freertos.c **** 
 117              		.loc 1 181 24 is_stmt 0 view .LVU12
 118 0004 FFF7FEFF 		bl	osKernelSysTick
 119              	.LVL5:
 181:Core/Src/freertos.c **** 
 120              		.loc 1 181 12 view .LVU13
 121 0008 0190     		str	r0, [sp, #4]
 122              	.L8:
 183:Core/Src/freertos.c ****   {
 123              		.loc 1 183 3 is_stmt 1 view .LVU14
ARM GAS  /tmp/ccPpHXvv.s 			page 8


 185:Core/Src/freertos.c **** 		{	
 124              		.loc 1 185 5 view .LVU15
 185:Core/Src/freertos.c **** 		{	
 125              		.loc 1 185 9 is_stmt 0 view .LVU16
 126 000a 1421     		movs	r1, #20
 127 000c 0D4B     		ldr	r3, .L11
 128 000e 1868     		ldr	r0, [r3]
 129 0010 FFF7FEFF 		bl	osMutexWait
 130              	.LVL6:
 185:Core/Src/freertos.c **** 		{	
 131              		.loc 1 185 8 view .LVU17
 132 0014 0028     		cmp	r0, #0
 133 0016 F8D1     		bne	.L8
 187:Core/Src/freertos.c ****         osTimerStart (osProgTimerI2C_timeout, I2C_DELAY);
 134              		.loc 1 187 9 is_stmt 1 view .LVU18
 187:Core/Src/freertos.c ****         osTimerStart (osProgTimerI2C_timeout, I2C_DELAY);
 135              		.loc 1 187 22 is_stmt 0 view .LVU19
 136 0018 0B4B     		ldr	r3, .L11+4
 137 001a 0022     		movs	r2, #0
 138 001c 1A70     		strb	r2, [r3]
 188:Core/Src/freertos.c ****         UNIXtimeDS3231 = GetUnixTime_from_DS3231();
 139              		.loc 1 188 9 is_stmt 1 view .LVU20
 140 001e 6421     		movs	r1, #100
 141 0020 0A4B     		ldr	r3, .L11+8
 142 0022 1868     		ldr	r0, [r3]
 143 0024 FFF7FEFF 		bl	osTimerStart
 144              	.LVL7:
 189:Core/Src/freertos.c ****         osMutexRelease (I2CmutexHandle);
 145              		.loc 1 189 9 view .LVU21
 189:Core/Src/freertos.c ****         osMutexRelease (I2CmutexHandle);
 146              		.loc 1 189 26 is_stmt 0 view .LVU22
 147 0028 FFF7FEFF 		bl	GetUnixTime_from_DS3231
 148              	.LVL8:
 189:Core/Src/freertos.c ****         osMutexRelease (I2CmutexHandle);
 149              		.loc 1 189 24 view .LVU23
 150 002c 084B     		ldr	r3, .L11+12
 151 002e 1860     		str	r0, [r3]
 190:Core/Src/freertos.c ****         osDelayUntil (&tickcount, 1000);
 152              		.loc 1 190 9 is_stmt 1 view .LVU24
 153 0030 044B     		ldr	r3, .L11
 154 0032 1868     		ldr	r0, [r3]
 155 0034 FFF7FEFF 		bl	osMutexRelease
 156              	.LVL9:
 191:Core/Src/freertos.c ****     }
 157              		.loc 1 191 9 view .LVU25
 158 0038 4FF47A71 		mov	r1, #1000
 159 003c 01A8     		add	r0, sp, #4
 160 003e FFF7FEFF 		bl	osDelayUntil
 161              	.LVL10:
 162 0042 E2E7     		b	.L8
 163              	.L12:
 164              		.align	2
 165              	.L11:
 166 0044 00000000 		.word	.LANCHOR1
 167 0048 00000000 		.word	.LANCHOR0
 168 004c 00000000 		.word	.LANCHOR2
 169 0050 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/ccPpHXvv.s 			page 9


 170              		.cfi_endproc
 171              	.LFE826:
 173              		.section	.text.SetupTimeonBoard,"ax",%progbits
 174              		.align	1
 175              		.global	SetupTimeonBoard
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	SetupTimeonBoard:
 181              	.LFB827:
 198:Core/Src/freertos.c ****   for(;;)
 182              		.loc 1 198 1 view -0
 183              		.cfi_startproc
 184              		@ Volatile: function does not return.
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              	.LVL11:
 198:Core/Src/freertos.c ****   for(;;)
 188              		.loc 1 198 1 is_stmt 0 view .LVU27
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 194 0002 07E0     		b	.L15
 195              	.LVL12:
 196              	.L17:
 203:Core/Src/freertos.c ****     }  
 197              		.loc 1 203 7 is_stmt 1 view .LVU28
 198 0004 FFF7FEFF 		bl	return_HandleTimeBuff
 199              	.LVL13:
 200 0008 0621     		movs	r1, #6
 201 000a FFF7FEFF 		bl	LED_data_output
 202              	.LVL14:
 203              	.L14:
 205:Core/Src/freertos.c ****   }  
 204              		.loc 1 205 5 view .LVU29
 205 000e 0320     		movs	r0, #3
 206 0010 FFF7FEFF 		bl	osDelay
 207              	.LVL15:
 199:Core/Src/freertos.c ****   {
 208              		.loc 1 199 8 view .LVU30
 209              	.L15:
 199:Core/Src/freertos.c ****   {
 210              		.loc 1 199 3 view .LVU31
 201:Core/Src/freertos.c ****     { 
 211              		.loc 1 201 5 view .LVU32
 201:Core/Src/freertos.c ****     { 
 212              		.loc 1 201 24 is_stmt 0 view .LVU33
 213 0014 024B     		ldr	r3, .L18
 214 0016 1B68     		ldr	r3, [r3]
 201:Core/Src/freertos.c ****     { 
 215              		.loc 1 201 8 view .LVU34
 216 0018 002B     		cmp	r3, #0
 217 001a F3D1     		bne	.L17
 218 001c F7E7     		b	.L14
 219              	.L19:
ARM GAS  /tmp/ccPpHXvv.s 			page 10


 220 001e 00BF     		.align	2
 221              	.L18:
 222 0020 00000000 		.word	.LANCHOR3
 223              		.cfi_endproc
 224              	.LFE827:
 226              		.section	.text.ParseUARTmsg,"ax",%progbits
 227              		.align	1
 228              		.global	ParseUARTmsg
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	ParseUARTmsg:
 234              	.LVL16:
 235              	.LFB828:
 211:Core/Src/freertos.c ****   __IO uint32_t TimeUART = 0;
 236              		.loc 1 211 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ Volatile: function does not return.
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 211:Core/Src/freertos.c ****   __IO uint32_t TimeUART = 0;
 241              		.loc 1 211 1 is_stmt 0 view .LVU36
 242 0000 00B5     		push	{lr}
 243              	.LCFI4:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 14, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 16
 212:Core/Src/freertos.c ****   static uint8_t flagGetMsg = NO_MSG;
 249              		.loc 1 212 3 is_stmt 1 view .LVU37
 212:Core/Src/freertos.c ****   static uint8_t flagGetMsg = NO_MSG;
 250              		.loc 1 212 17 is_stmt 0 view .LVU38
 251 0004 0023     		movs	r3, #0
 252 0006 0193     		str	r3, [sp, #4]
 253 0008 02E0     		b	.L21
 254              	.LVL17:
 255              	.L23:
 235:Core/Src/freertos.c ****     }
 256              		.loc 1 235 7 is_stmt 1 view .LVU39
 257 000a 0320     		movs	r0, #3
 258 000c FFF7FEFF 		bl	osDelay
 259              	.LVL18:
 260              	.L21:
 213:Core/Src/freertos.c **** 
 261              		.loc 1 213 3 view .LVU40
 215:Core/Src/freertos.c ****   {
 262              		.loc 1 215 3 view .LVU41
 217:Core/Src/freertos.c ****     {
 263              		.loc 1 217 5 view .LVU42
 217:Core/Src/freertos.c ****     {
 264              		.loc 1 217 20 is_stmt 0 view .LVU43
 265 0010 1B4B     		ldr	r3, .L26
 266 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 217:Core/Src/freertos.c ****     {
 267              		.loc 1 217 8 view .LVU44
 268 0014 BBB9     		cbnz	r3, .L22
ARM GAS  /tmp/ccPpHXvv.s 			page 11


 219:Core/Src/freertos.c ****       {
 269              		.loc 1 219 7 is_stmt 1 view .LVU45
 219:Core/Src/freertos.c ****       {
 270              		.loc 1 219 11 is_stmt 0 view .LVU46
 271 0016 FFF7FEFF 		bl	check_ring_buffer
 272              	.LVL19:
 219:Core/Src/freertos.c ****       {
 273              		.loc 1 219 10 view .LVU47
 274 001a 0128     		cmp	r0, #1
 275 001c F5D1     		bne	.L23
 221:Core/Src/freertos.c ****         {
 276              		.loc 1 221 9 is_stmt 1 view .LVU48
 221:Core/Src/freertos.c ****         {
 277              		.loc 1 221 25 is_stmt 0 view .LVU49
 278 001e FFF7FEFF 		bl	return_UNIXtimeNTP
 279              	.LVL20:
 221:Core/Src/freertos.c ****         {
 280              		.loc 1 221 23 view .LVU50
 281 0022 0190     		str	r0, [sp, #4]
 221:Core/Src/freertos.c ****         {
 282              		.loc 1 221 12 view .LVU51
 283 0024 0028     		cmp	r0, #0
 284 0026 F0D0     		beq	.L23
 224:Core/Src/freertos.c ****           {
 285              		.loc 1 224 11 is_stmt 1 view .LVU52
 224:Core/Src/freertos.c ****           {
 286              		.loc 1 224 31 is_stmt 0 view .LVU53
 287 0028 164B     		ldr	r3, .L26+4
 288 002a 1A68     		ldr	r2, [r3]
 289 002c 019B     		ldr	r3, [sp, #4]
 224:Core/Src/freertos.c ****           {
 290              		.loc 1 224 14 view .LVU54
 291 002e 9A42     		cmp	r2, r3
 292 0030 EBD0     		beq	.L23
 224:Core/Src/freertos.c ****           {
 293              		.loc 1 224 57 discriminator 1 view .LVU55
 294 0032 019B     		ldr	r3, [sp, #4]
 295 0034 134A     		ldr	r2, .L26+4
 296 0036 1268     		ldr	r2, [r2]
 297 0038 9B1A     		subs	r3, r3, r2
 224:Core/Src/freertos.c ****           {
 298              		.loc 1 224 44 discriminator 1 view .LVU56
 299 003a 012B     		cmp	r3, #1
 300 003c E5D9     		bls	.L23
 231:Core/Src/freertos.c ****           }
 301              		.loc 1 231 13 is_stmt 1 view .LVU57
 231:Core/Src/freertos.c ****           }
 302              		.loc 1 231 24 is_stmt 0 view .LVU58
 303 003e 104B     		ldr	r3, .L26
 304 0040 0122     		movs	r2, #1
 305 0042 1A70     		strb	r2, [r3]
 306 0044 E1E7     		b	.L23
 307              	.L22:
 239:Core/Src/freertos.c **** 		  {	
 308              		.loc 1 239 7 is_stmt 1 view .LVU59
 239:Core/Src/freertos.c **** 		  {	
 309              		.loc 1 239 11 is_stmt 0 view .LVU60
ARM GAS  /tmp/ccPpHXvv.s 			page 12


 310 0046 1421     		movs	r1, #20
 311 0048 0F4B     		ldr	r3, .L26+8
 312 004a 1868     		ldr	r0, [r3]
 313 004c FFF7FEFF 		bl	osMutexWait
 314              	.LVL21:
 239:Core/Src/freertos.c **** 		  {	
 315              		.loc 1 239 10 view .LVU61
 316 0050 0028     		cmp	r0, #0
 317 0052 DDD1     		bne	.L21
 241:Core/Src/freertos.c ****         timeout_flag = OFF; //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ —Ç–∞–π–º–∞—É—Ç–∞ I2C
 318              		.loc 1 241 9 is_stmt 1 view .LVU62
 241:Core/Src/freertos.c ****         timeout_flag = OFF; //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ —Ç–∞–π–º–∞—É—Ç–∞ I2C
 319              		.loc 1 241 20 is_stmt 0 view .LVU63
 320 0054 0023     		movs	r3, #0
 321 0056 0A4A     		ldr	r2, .L26
 322 0058 1370     		strb	r3, [r2]
 242:Core/Src/freertos.c ****         osTimerStart (osProgTimerI2C_timeout, I2C_DELAY); //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ —Ç–∞–π–º–∞—
 323              		.loc 1 242 9 is_stmt 1 view .LVU64
 242:Core/Src/freertos.c ****         osTimerStart (osProgTimerI2C_timeout, I2C_DELAY); //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ —Ç–∞–π–º–∞—
 324              		.loc 1 242 22 is_stmt 0 view .LVU65
 325 005a 0C4A     		ldr	r2, .L26+12
 326 005c 1370     		strb	r3, [r2]
 243:Core/Src/freertos.c ****         PrepareSendTimedata_to_DS3231(TimeUART); //–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–
 327              		.loc 1 243 9 is_stmt 1 view .LVU66
 328 005e 6421     		movs	r1, #100
 329 0060 0B4B     		ldr	r3, .L26+16
 330 0062 1868     		ldr	r0, [r3]
 331 0064 FFF7FEFF 		bl	osTimerStart
 332              	.LVL22:
 244:Core/Src/freertos.c ****         osMutexRelease (I2CmutexHandle); //–æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –º—å—é—Ç–µ–∫—Å–∞
 333              		.loc 1 244 9 view .LVU67
 334 0068 0198     		ldr	r0, [sp, #4]
 335 006a FFF7FEFF 		bl	PrepareSendTimedata_to_DS3231
 336              	.LVL23:
 245:Core/Src/freertos.c ****         osDelay (1000);
 337              		.loc 1 245 9 view .LVU68
 338 006e 064B     		ldr	r3, .L26+8
 339 0070 1868     		ldr	r0, [r3]
 340 0072 FFF7FEFF 		bl	osMutexRelease
 341              	.LVL24:
 246:Core/Src/freertos.c ****       }
 342              		.loc 1 246 9 view .LVU69
 343 0076 4FF47A70 		mov	r0, #1000
 344 007a FFF7FEFF 		bl	osDelay
 345              	.LVL25:
 346 007e C7E7     		b	.L21
 347              	.L27:
 348              		.align	2
 349              	.L26:
 350 0080 00000000 		.word	.LANCHOR4
 351 0084 00000000 		.word	.LANCHOR3
 352 0088 00000000 		.word	.LANCHOR1
 353 008c 00000000 		.word	.LANCHOR0
 354 0090 00000000 		.word	.LANCHOR2
 355              		.cfi_endproc
 356              	.LFE828:
 358              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
ARM GAS  /tmp/ccPpHXvv.s 			page 13


 359              		.align	1
 360              		.global	vApplicationGetIdleTaskMemory
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	vApplicationGetIdleTaskMemory:
 366              	.LVL26:
 367              	.LFB822:
  90:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 368              		.loc 1 90 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 373              		.loc 1 91 3 view .LVU71
  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 374              		.loc 1 91 25 is_stmt 0 view .LVU72
 375 0000 034B     		ldr	r3, .L29
 376 0002 0360     		str	r3, [r0]
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 377              		.loc 1 92 3 is_stmt 1 view .LVU73
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 378              		.loc 1 92 27 is_stmt 0 view .LVU74
 379 0004 034B     		ldr	r3, .L29+4
 380 0006 0B60     		str	r3, [r1]
  93:Core/Src/freertos.c ****   /* place for user code */
 381              		.loc 1 93 3 is_stmt 1 view .LVU75
  93:Core/Src/freertos.c ****   /* place for user code */
 382              		.loc 1 93 25 is_stmt 0 view .LVU76
 383 0008 8023     		movs	r3, #128
 384 000a 1360     		str	r3, [r2]
  95:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 385              		.loc 1 95 1 view .LVU77
 386 000c 7047     		bx	lr
 387              	.L30:
 388 000e 00BF     		.align	2
 389              	.L29:
 390 0010 00000000 		.word	.LANCHOR5
 391 0014 00000000 		.word	.LANCHOR6
 392              		.cfi_endproc
 393              	.LFE822:
 395              		.section	.text.vApplicationGetTimerTaskMemory,"ax",%progbits
 396              		.align	1
 397              		.global	vApplicationGetTimerTaskMemory
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	vApplicationGetTimerTaskMemory:
 403              	.LVL27:
 404              	.LFB823:
 103:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 405              		.loc 1 103 1 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		@ link register save eliminated.
ARM GAS  /tmp/ccPpHXvv.s 			page 14


 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 410              		.loc 1 104 3 view .LVU79
 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 411              		.loc 1 104 26 is_stmt 0 view .LVU80
 412 0000 034B     		ldr	r3, .L32
 413 0002 0360     		str	r3, [r0]
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 414              		.loc 1 105 3 is_stmt 1 view .LVU81
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 415              		.loc 1 105 28 is_stmt 0 view .LVU82
 416 0004 034B     		ldr	r3, .L32+4
 417 0006 0B60     		str	r3, [r1]
 106:Core/Src/freertos.c ****   /* place for user code */
 418              		.loc 1 106 3 is_stmt 1 view .LVU83
 106:Core/Src/freertos.c ****   /* place for user code */
 419              		.loc 1 106 26 is_stmt 0 view .LVU84
 420 0008 4FF48073 		mov	r3, #256
 421 000c 1360     		str	r3, [r2]
 108:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 422              		.loc 1 108 1 view .LVU85
 423 000e 7047     		bx	lr
 424              	.L33:
 425              		.align	2
 426              	.L32:
 427 0010 00000000 		.word	.LANCHOR7
 428 0014 00000000 		.word	.LANCHOR8
 429              		.cfi_endproc
 430              	.LFE823:
 432              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 433              		.align	1
 434              		.global	MX_FREERTOS_Init
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 439              	MX_FREERTOS_Init:
 440              	.LFB824:
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 441              		.loc 1 116 29 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 128
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 30B5     		push	{r4, r5, lr}
 446              	.LCFI6:
 447              		.cfi_def_cfa_offset 12
 448              		.cfi_offset 4, -12
 449              		.cfi_offset 5, -8
 450              		.cfi_offset 14, -4
 451 0002 A1B0     		sub	sp, sp, #132
 452              	.LCFI7:
 453              		.cfi_def_cfa_offset 144
 122:Core/Src/freertos.c **** 	I2CmutexHandle = osMutexCreate(osMutex (I2CmutexHandle));
 454              		.loc 1 122 3 view .LVU87
 455 0004 0025     		movs	r5, #0
 456 0006 1E95     		str	r5, [sp, #120]
 457 0008 1F95     		str	r5, [sp, #124]
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 458              		.loc 1 123 2 view .LVU88
ARM GAS  /tmp/ccPpHXvv.s 			page 15


 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 459              		.loc 1 123 19 is_stmt 0 view .LVU89
 460 000a 1EA8     		add	r0, sp, #120
 461 000c FFF7FEFF 		bl	osMutexCreate
 462              	.LVL28:
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 463              		.loc 1 123 17 view .LVU90
 464 0010 2A4B     		ldr	r3, .L36
 465 0012 1860     		str	r0, [r3]
 131:Core/Src/freertos.c **** 	osProgTimerI2C_timeout = osTimerCreate(osTimer (TimerI2C_timeout), osTimerOnce, NULL);
 466              		.loc 1 131 3 is_stmt 1 view .LVU91
 467 0014 2A4B     		ldr	r3, .L36+4
 468 0016 1C93     		str	r3, [sp, #112]
 469 0018 1D95     		str	r5, [sp, #116]
 132:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 470              		.loc 1 132 2 view .LVU92
 132:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 471              		.loc 1 132 27 is_stmt 0 view .LVU93
 472 001a 2A46     		mov	r2, r5
 473 001c 2946     		mov	r1, r5
 474 001e 1CA8     		add	r0, sp, #112
 475 0020 FFF7FEFF 		bl	osTimerCreate
 476              	.LVL29:
 132:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 477              		.loc 1 132 25 view .LVU94
 478 0024 274B     		ldr	r3, .L36+8
 479 0026 1860     		str	r0, [r3]
 141:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 480              		.loc 1 141 3 is_stmt 1 view .LVU95
 481 0028 274C     		ldr	r4, .L36+12
 482 002a 0DF1540C 		add	ip, sp, #84
 483 002e A646     		mov	lr, r4
 484 0030 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 485 0034 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 486 0038 9EE80700 		ldm	lr, {r0, r1, r2}
 487 003c 8CE80700 		stm	ip, {r0, r1, r2}
 142:Core/Src/freertos.c **** 
 488              		.loc 1 142 3 view .LVU96
 142:Core/Src/freertos.c **** 
 489              		.loc 1 142 23 is_stmt 0 view .LVU97
 490 0040 2946     		mov	r1, r5
 491 0042 15A8     		add	r0, sp, #84
 492 0044 FFF7FEFF 		bl	osThreadCreate
 493              	.LVL30:
 142:Core/Src/freertos.c **** 
 494              		.loc 1 142 21 view .LVU98
 495 0048 204B     		ldr	r3, .L36+16
 496 004a 1860     		str	r0, [r3]
 146:Core/Src/freertos.c ****   SetupTimeonBoardTaskHandle = osThreadCreate(osThread(TaskSetupTimeonBoard), NULL);
 497              		.loc 1 146 3 is_stmt 1 view .LVU99
 498 004c 0DF1380C 		add	ip, sp, #56
 499 0050 04F11C0E 		add	lr, r4, #28
 500 0054 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 501 0058 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 502 005c 9EE80700 		ldm	lr, {r0, r1, r2}
 503 0060 8CE80700 		stm	ip, {r0, r1, r2}
 147:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccPpHXvv.s 			page 16


 504              		.loc 1 147 3 view .LVU100
 147:Core/Src/freertos.c **** 
 505              		.loc 1 147 32 is_stmt 0 view .LVU101
 506 0064 2946     		mov	r1, r5
 507 0066 0EA8     		add	r0, sp, #56
 508 0068 FFF7FEFF 		bl	osThreadCreate
 509              	.LVL31:
 147:Core/Src/freertos.c **** 
 510              		.loc 1 147 30 view .LVU102
 511 006c 184B     		ldr	r3, .L36+20
 512 006e 1860     		str	r0, [r3]
 149:Core/Src/freertos.c ****   MessagingDS3231TaskHandle = osThreadCreate(osThread(TaskMessagingDS3231), NULL);
 513              		.loc 1 149 3 is_stmt 1 view .LVU103
 514 0070 0DF11C0C 		add	ip, sp, #28
 515 0074 04F1380E 		add	lr, r4, #56
 516 0078 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 517 007c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 518 0080 9EE80700 		ldm	lr, {r0, r1, r2}
 519 0084 8CE80700 		stm	ip, {r0, r1, r2}
 150:Core/Src/freertos.c **** 
 520              		.loc 1 150 3 view .LVU104
 150:Core/Src/freertos.c **** 
 521              		.loc 1 150 31 is_stmt 0 view .LVU105
 522 0088 2946     		mov	r1, r5
 523 008a 07A8     		add	r0, sp, #28
 524 008c FFF7FEFF 		bl	osThreadCreate
 525              	.LVL32:
 150:Core/Src/freertos.c **** 
 526              		.loc 1 150 29 view .LVU106
 527 0090 104B     		ldr	r3, .L36+24
 528 0092 1860     		str	r0, [r3]
 152:Core/Src/freertos.c ****   ParseUARTmsgTaskHandle = osThreadCreate(osThread(TaskParseUARTmsg), NULL);
 529              		.loc 1 152 3 is_stmt 1 view .LVU107
 530 0094 EE46     		mov	lr, sp
 531 0096 04F1540C 		add	ip, r4, #84
 532 009a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 533 009e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 534 00a2 9CE80700 		ldm	ip, {r0, r1, r2}
 535 00a6 8EE80700 		stm	lr, {r0, r1, r2}
 153:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 536              		.loc 1 153 3 view .LVU108
 153:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 537              		.loc 1 153 28 is_stmt 0 view .LVU109
 538 00aa 2946     		mov	r1, r5
 539 00ac 6846     		mov	r0, sp
 540 00ae FFF7FEFF 		bl	osThreadCreate
 541              	.LVL33:
 153:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 542              		.loc 1 153 26 view .LVU110
 543 00b2 094B     		ldr	r3, .L36+28
 544 00b4 1860     		str	r0, [r3]
 156:Core/Src/freertos.c **** 
 545              		.loc 1 156 1 view .LVU111
 546 00b6 21B0     		add	sp, sp, #132
 547              	.LCFI8:
 548              		.cfi_def_cfa_offset 12
 549              		@ sp needed
ARM GAS  /tmp/ccPpHXvv.s 			page 17


 550 00b8 30BD     		pop	{r4, r5, pc}
 551              	.L37:
 552 00ba 00BF     		.align	2
 553              	.L36:
 554 00bc 00000000 		.word	.LANCHOR1
 555 00c0 00000000 		.word	ProgTimerI2C_timeoutCallback
 556 00c4 00000000 		.word	.LANCHOR2
 557 00c8 00000000 		.word	.LANCHOR9
 558 00cc 00000000 		.word	.LANCHOR10
 559 00d0 00000000 		.word	.LANCHOR11
 560 00d4 00000000 		.word	.LANCHOR12
 561 00d8 00000000 		.word	.LANCHOR13
 562              		.cfi_endproc
 563              	.LFE824:
 565              		.section	.text.return_flag_timeout,"ax",%progbits
 566              		.align	1
 567              		.global	return_flag_timeout
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	return_flag_timeout:
 573              	.LFB830:
 257:Core/Src/freertos.c **** 
 258:Core/Src/freertos.c **** //---------------------------------------------------------------------------//
 259:Core/Src/freertos.c **** uint8_t return_flag_timeout (void)
 260:Core/Src/freertos.c **** {
 574              		.loc 1 260 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 261:Core/Src/freertos.c ****   return timeout_flag;
 579              		.loc 1 261 3 view .LVU113
 262:Core/Src/freertos.c **** }
 580              		.loc 1 262 1 is_stmt 0 view .LVU114
 581 0000 014B     		ldr	r3, .L39
 582 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 583 0004 7047     		bx	lr
 584              	.L40:
 585 0006 00BF     		.align	2
 586              	.L39:
 587 0008 00000000 		.word	.LANCHOR0
 588              		.cfi_endproc
 589              	.LFE830:
 591              		.global	defaultTaskHandle
 592              		.global	UNIXtimeDS3231
 593              		.global	timeout_flag
 594              		.global	I2CmutexHandle
 595              		.global	ParseUARTmsgTaskHandle
 596              		.global	SetupTimeonBoardTaskHandle
 597              		.global	MessagingDS3231TaskHandle
 598              		.global	osProgTimerI2C_timeout
 599              		.section	.rodata
 600              		.align	2
 601              		.set	.LANCHOR9,. + 0
 602              	.LC8:
 603 0000 00000000 		.word	.LC0
ARM GAS  /tmp/ccPpHXvv.s 			page 18


 604 0004 00000000 		.word	StartDefaultTask
 605 0008 FDFF     		.short	-3
 606 000a 0000     		.space	2
 607 000c 00000000 		.word	0
 608 0010 80000000 		.word	128
 609 0014 00000000 		.word	0
 610 0018 00000000 		.word	0
 611              	.LC9:
 612 001c 0C000000 		.word	.LC2
 613 0020 00000000 		.word	SetupTimeonBoard
 614 0024 0000     		.short	0
 615 0026 0000     		.space	2
 616 0028 00000000 		.word	0
 617 002c 80000000 		.word	128
 618 0030 00000000 		.word	0
 619 0034 00000000 		.word	0
 620              	.LC10:
 621 0038 24000000 		.word	.LC4
 622 003c 00000000 		.word	LaunchMessagingDS3231
 623 0040 0000     		.short	0
 624 0042 0000     		.space	2
 625 0044 00000000 		.word	0
 626 0048 80000000 		.word	128
 627 004c 00000000 		.word	0
 628 0050 00000000 		.word	0
 629              	.LC11:
 630 0054 38000000 		.word	.LC6
 631 0058 00000000 		.word	ParseUARTmsg
 632 005c 0000     		.short	0
 633 005e 0000     		.space	2
 634 0060 00000000 		.word	0
 635 0064 80000000 		.word	128
 636 0068 00000000 		.word	0
 637 006c 00000000 		.word	0
 638              		.section	.bss.I2CmutexHandle,"aw",%nobits
 639              		.align	2
 640              		.set	.LANCHOR1,. + 0
 643              	I2CmutexHandle:
 644 0000 00000000 		.space	4
 645              		.section	.bss.MessagingDS3231TaskHandle,"aw",%nobits
 646              		.align	2
 647              		.set	.LANCHOR12,. + 0
 650              	MessagingDS3231TaskHandle:
 651 0000 00000000 		.space	4
 652              		.section	.bss.ParseUARTmsgTaskHandle,"aw",%nobits
 653              		.align	2
 654              		.set	.LANCHOR13,. + 0
 657              	ParseUARTmsgTaskHandle:
 658 0000 00000000 		.space	4
 659              		.section	.bss.SetupTimeonBoardTaskHandle,"aw",%nobits
 660              		.align	2
 661              		.set	.LANCHOR11,. + 0
 664              	SetupTimeonBoardTaskHandle:
 665 0000 00000000 		.space	4
 666              		.section	.bss.UNIXtimeDS3231,"aw",%nobits
 667              		.align	2
 668              		.set	.LANCHOR3,. + 0
ARM GAS  /tmp/ccPpHXvv.s 			page 19


 671              	UNIXtimeDS3231:
 672 0000 00000000 		.space	4
 673              		.section	.bss.defaultTaskHandle,"aw",%nobits
 674              		.align	2
 675              		.set	.LANCHOR10,. + 0
 678              	defaultTaskHandle:
 679 0000 00000000 		.space	4
 680              		.section	.bss.flagGetMsg.0,"aw",%nobits
 681              		.set	.LANCHOR4,. + 0
 684              	flagGetMsg.0:
 685 0000 00       		.space	1
 686              		.section	.bss.osProgTimerI2C_timeout,"aw",%nobits
 687              		.align	2
 688              		.set	.LANCHOR2,. + 0
 691              	osProgTimerI2C_timeout:
 692 0000 00000000 		.space	4
 693              		.section	.bss.timeout_flag,"aw",%nobits
 694              		.set	.LANCHOR0,. + 0
 697              	timeout_flag:
 698 0000 00       		.space	1
 699              		.section	.bss.xIdleStack,"aw",%nobits
 700              		.align	2
 701              		.set	.LANCHOR6,. + 0
 704              	xIdleStack:
 705 0000 00000000 		.space	512
 705      00000000 
 705      00000000 
 705      00000000 
 705      00000000 
 706              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 707              		.align	2
 708              		.set	.LANCHOR5,. + 0
 711              	xIdleTaskTCBBuffer:
 712 0000 00000000 		.space	84
 712      00000000 
 712      00000000 
 712      00000000 
 712      00000000 
 713              		.section	.bss.xTimerStack,"aw",%nobits
 714              		.align	2
 715              		.set	.LANCHOR8,. + 0
 718              	xTimerStack:
 719 0000 00000000 		.space	1024
 719      00000000 
 719      00000000 
 719      00000000 
 719      00000000 
 720              		.section	.bss.xTimerTaskTCBBuffer,"aw",%nobits
 721              		.align	2
 722              		.set	.LANCHOR7,. + 0
 725              	xTimerTaskTCBBuffer:
 726 0000 00000000 		.space	84
 726      00000000 
 726      00000000 
 726      00000000 
 726      00000000 
 727              		.text
ARM GAS  /tmp/ccPpHXvv.s 			page 20


 728              	.Letext0:
 729              		.file 2 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/m
 730              		.file 3 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
 731              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 732              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 733              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 734              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_dma.h"
 735              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h"
 736              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 737              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 738              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 739              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 740              		.file 13 "IO_drivers/time_protocol.h"
 741              		.file 14 "IO_drivers/rtc.h"
 742              		.file 15 "IO_drivers/LED_display.h"
ARM GAS  /tmp/ccPpHXvv.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccPpHXvv.s:15     .rodata.str1.4:0000000000000000 $d
     /tmp/ccPpHXvv.s:31     .text.ProgTimerI2C_timeoutCallback:0000000000000000 $t
     /tmp/ccPpHXvv.s:37     .text.ProgTimerI2C_timeoutCallback:0000000000000000 ProgTimerI2C_timeoutCallback
     /tmp/ccPpHXvv.s:56     .text.ProgTimerI2C_timeoutCallback:0000000000000008 $d
     /tmp/ccPpHXvv.s:61     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccPpHXvv.s:67     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccPpHXvv.s:94     .text.LaunchMessagingDS3231:0000000000000000 $t
     /tmp/ccPpHXvv.s:100    .text.LaunchMessagingDS3231:0000000000000000 LaunchMessagingDS3231
     /tmp/ccPpHXvv.s:166    .text.LaunchMessagingDS3231:0000000000000044 $d
     /tmp/ccPpHXvv.s:174    .text.SetupTimeonBoard:0000000000000000 $t
     /tmp/ccPpHXvv.s:180    .text.SetupTimeonBoard:0000000000000000 SetupTimeonBoard
     /tmp/ccPpHXvv.s:222    .text.SetupTimeonBoard:0000000000000020 $d
     /tmp/ccPpHXvv.s:227    .text.ParseUARTmsg:0000000000000000 $t
     /tmp/ccPpHXvv.s:233    .text.ParseUARTmsg:0000000000000000 ParseUARTmsg
     /tmp/ccPpHXvv.s:350    .text.ParseUARTmsg:0000000000000080 $d
     /tmp/ccPpHXvv.s:359    .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccPpHXvv.s:365    .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccPpHXvv.s:390    .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccPpHXvv.s:396    .text.vApplicationGetTimerTaskMemory:0000000000000000 $t
     /tmp/ccPpHXvv.s:402    .text.vApplicationGetTimerTaskMemory:0000000000000000 vApplicationGetTimerTaskMemory
     /tmp/ccPpHXvv.s:427    .text.vApplicationGetTimerTaskMemory:0000000000000010 $d
     /tmp/ccPpHXvv.s:433    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccPpHXvv.s:439    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccPpHXvv.s:554    .text.MX_FREERTOS_Init:00000000000000bc $d
     /tmp/ccPpHXvv.s:566    .text.return_flag_timeout:0000000000000000 $t
     /tmp/ccPpHXvv.s:572    .text.return_flag_timeout:0000000000000000 return_flag_timeout
     /tmp/ccPpHXvv.s:587    .text.return_flag_timeout:0000000000000008 $d
     /tmp/ccPpHXvv.s:678    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccPpHXvv.s:671    .bss.UNIXtimeDS3231:0000000000000000 UNIXtimeDS3231
     /tmp/ccPpHXvv.s:697    .bss.timeout_flag:0000000000000000 timeout_flag
     /tmp/ccPpHXvv.s:643    .bss.I2CmutexHandle:0000000000000000 I2CmutexHandle
     /tmp/ccPpHXvv.s:657    .bss.ParseUARTmsgTaskHandle:0000000000000000 ParseUARTmsgTaskHandle
     /tmp/ccPpHXvv.s:664    .bss.SetupTimeonBoardTaskHandle:0000000000000000 SetupTimeonBoardTaskHandle
     /tmp/ccPpHXvv.s:650    .bss.MessagingDS3231TaskHandle:0000000000000000 MessagingDS3231TaskHandle
     /tmp/ccPpHXvv.s:691    .bss.osProgTimerI2C_timeout:0000000000000000 osProgTimerI2C_timeout
     /tmp/ccPpHXvv.s:600    .rodata:0000000000000000 $d
     /tmp/ccPpHXvv.s:639    .bss.I2CmutexHandle:0000000000000000 $d
     /tmp/ccPpHXvv.s:646    .bss.MessagingDS3231TaskHandle:0000000000000000 $d
     /tmp/ccPpHXvv.s:653    .bss.ParseUARTmsgTaskHandle:0000000000000000 $d
     /tmp/ccPpHXvv.s:660    .bss.SetupTimeonBoardTaskHandle:0000000000000000 $d
     /tmp/ccPpHXvv.s:667    .bss.UNIXtimeDS3231:0000000000000000 $d
     /tmp/ccPpHXvv.s:674    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccPpHXvv.s:684    .bss.flagGetMsg.0:0000000000000000 flagGetMsg.0
     /tmp/ccPpHXvv.s:685    .bss.flagGetMsg.0:0000000000000000 $d
     /tmp/ccPpHXvv.s:687    .bss.osProgTimerI2C_timeout:0000000000000000 $d
     /tmp/ccPpHXvv.s:698    .bss.timeout_flag:0000000000000000 $d
     /tmp/ccPpHXvv.s:700    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccPpHXvv.s:704    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccPpHXvv.s:707    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccPpHXvv.s:711    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer
     /tmp/ccPpHXvv.s:714    .bss.xTimerStack:0000000000000000 $d
     /tmp/ccPpHXvv.s:718    .bss.xTimerStack:0000000000000000 xTimerStack
     /tmp/ccPpHXvv.s:721    .bss.xTimerTaskTCBBuffer:0000000000000000 $d
     /tmp/ccPpHXvv.s:725    .bss.xTimerTaskTCBBuffer:0000000000000000 xTimerTaskTCBBuffer

ARM GAS  /tmp/ccPpHXvv.s 			page 22


UNDEFINED SYMBOLS
osDelay
osKernelSysTick
osMutexWait
osTimerStart
GetUnixTime_from_DS3231
osMutexRelease
osDelayUntil
return_HandleTimeBuff
LED_data_output
check_ring_buffer
return_UNIXtimeNTP
PrepareSendTimedata_to_DS3231
osMutexCreate
osTimerCreate
osThreadCreate
