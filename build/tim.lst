ARM GAS  /tmp/ccgn3NGF.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.xTimer_Task,"ax",%progbits
  18              		.align	1
  19              		.global	xTimer_Task
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	xTimer_Task:
  25              	.LVL0:
  26              	.LFB826:
  27              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** // Defines ---------------------------------------------------------------------//
  25:Core/Src/tim.c **** #define 	SysTimer 					TIM6
  26:Core/Src/tim.c **** #define 	SysTimer_APB1_BIT 			LL_APB1_GRP1_PERIPH_TIM6
  27:Core/Src/tim.c **** #define  	SysTimer_IRQn               TIM6_IRQn
  28:Core/Src/tim.c **** #define		SysTimer_IRQHandler			TIM6_IRQHandler
  29:Core/Src/tim.c **** 
  30:Core/Src/tim.c **** #define 	TimerMsDelay 				TIM10
  31:Core/Src/tim.c **** #define 	TimerMsDelay_APB2_BIT 		LL_APB2_GRP1_PERIPH_TIM10 
ARM GAS  /tmp/ccgn3NGF.s 			page 2


  32:Core/Src/tim.c **** #define  	TimerMsDelay_IRQn           TIM10_IRQn
  33:Core/Src/tim.c **** #define		TimerMsDelay_IRQHandler		TIM10_IRQHandler
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c **** #define 	TIM_DELAY_us 				TIM7
  36:Core/Src/tim.c **** #define 	PERIODIC 					1
  37:Core/Src/tim.c **** #define 	ONCE 						0
  38:Core/Src/tim.c **** 
  39:Core/Src/tim.c **** // Variables --------------------------------------------------------------------//
  40:Core/Src/tim.c **** static portTickType xTimeNow; //—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—é –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ
  41:Core/Src/tim.c **** static SysTick_CALLBACK SysTick_CallbackFunction = 0; //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª
  42:Core/Src/tim.c **** static __IO uint64_t TicksCounter = 0; //—Å—á—ë—Ç—á–∏–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–∏–∫–æ–≤
  43:Core/Src/tim.c **** static xTIMER xTimerList[MAX_xTIMERS]; //–º–∞—Å—Å–∏–≤ —Å—Ç—Ä—É–∫—Ç—É—Ä –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö —Ç–∞–
  44:Core/Src/tim.c **** static xTimerHandle xSysTimer;
  45:Core/Src/tim.c **** uint8_t flag_end_delay = 0;
  46:Core/Src/tim.c **** 
  47:Core/Src/tim.c **** // Functions --------------------------------------------------------------------//
  48:Core/Src/tim.c **** #ifdef __cplusplus
  49:Core/Src/tim.c **** extern "C" {
  50:Core/Src/tim.c **** #endif
  51:Core/Src/tim.c **** static void TimerMs_init (void);
  52:Core/Src/tim.c **** static void SysTimer_init (void);
  53:Core/Src/tim.c **** static void vSysTimerCallback(xTimerHandle xTimer); 
  54:Core/Src/tim.c **** #ifdef __cplusplus
  55:Core/Src/tim.c **** }
  56:Core/Src/tim.c **** #endif
  57:Core/Src/tim.c **** /* USER CODE END 0 */
  58:Core/Src/tim.c **** 
  59:Core/Src/tim.c **** /* TIM7 init function */
  60:Core/Src/tim.c **** void MX_TIM7_Init(void)
  61:Core/Src/tim.c **** {
  62:Core/Src/tim.c **** 
  63:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_Init 0 */
  64:Core/Src/tim.c **** 
  65:Core/Src/tim.c ****   /* USER CODE END TIM7_Init 0 */
  66:Core/Src/tim.c **** 
  67:Core/Src/tim.c ****   LL_TIM_InitTypeDef TIM_InitStruct = {0};
  68:Core/Src/tim.c **** 
  69:Core/Src/tim.c ****   /* Peripheral clock enable */
  70:Core/Src/tim.c ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM7);
  71:Core/Src/tim.c **** 
  72:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_Init 1 */
  73:Core/Src/tim.c **** 
  74:Core/Src/tim.c ****   /* USER CODE END TIM7_Init 1 */
  75:Core/Src/tim.c ****   TIM_InitStruct.Prescaler = 31;
  76:Core/Src/tim.c ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
  77:Core/Src/tim.c ****   TIM_InitStruct.Autoreload = 1000;
  78:Core/Src/tim.c ****   LL_TIM_Init(TIM7, &TIM_InitStruct);
  79:Core/Src/tim.c ****   LL_TIM_DisableARRPreload(TIM7);
  80:Core/Src/tim.c ****   LL_TIM_SetTriggerOutput(TIM7, LL_TIM_TRGO_RESET);
  81:Core/Src/tim.c ****   LL_TIM_DisableMasterSlaveMode(TIM7);
  82:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_Init 2 */
  83:Core/Src/tim.c **** 
  84:Core/Src/tim.c ****   /* USER CODE END TIM7_Init 2 */
  85:Core/Src/tim.c **** 
  86:Core/Src/tim.c **** }
  87:Core/Src/tim.c **** 
  88:Core/Src/tim.c **** /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccgn3NGF.s 			page 3


  89:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
  90:Core/Src/tim.c **** void delay_us(uint16_t delay)
  91:Core/Src/tim.c **** {
  92:Core/Src/tim.c ****   	LL_TIM_SetAutoReload(TIM_DELAY_us, delay); //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –º–∫—Å
  93:Core/Src/tim.c **** 	LL_TIM_ClearFlag_UPDATE(TIM_DELAY_us); //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
  94:Core/Src/tim.c **** 	LL_TIM_SetCounter(TIM_DELAY_us, 0); //—Å–±—Ä–æ—Å —Å—á—ë—Ç–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
  95:Core/Src/tim.c **** 	LL_TIM_EnableCounter(TIM_DELAY_us); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
  96:Core/Src/tim.c **** 	while (LL_TIM_IsActiveFlag_UPDATE(TIM_DELAY_us) == 0) {} //–æ–∂–∏–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–
  97:Core/Src/tim.c **** 	LL_TIM_DisableCounter(TIM_DELAY_us); //–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞		
  98:Core/Src/tim.c **** }
  99:Core/Src/tim.c **** 
 100:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 101:Core/Src/tim.c **** static void TimerMs_init (void)
 102:Core/Src/tim.c **** {
 103:Core/Src/tim.c **** 	LL_TIM_InitTypeDef TIM_InitStruct = {0};
 104:Core/Src/tim.c **** 	
 105:Core/Src/tim.c ****   	LL_APB2_GRP1_EnableClock(TimerMsDelay_APB2_BIT);
 106:Core/Src/tim.c ****   	TIM_InitStruct.Prescaler = 32000-1;
 107:Core/Src/tim.c ****   	TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 108:Core/Src/tim.c ****   	TIM_InitStruct.Autoreload = 1000-1;
 109:Core/Src/tim.c ****   	LL_TIM_Init(TimerMsDelay, &TIM_InitStruct);
 110:Core/Src/tim.c ****   	LL_TIM_DisableARRPreload(TimerMsDelay);
 111:Core/Src/tim.c ****   	LL_TIM_SetTriggerOutput(TimerMsDelay, LL_TIM_TRGO_RESET);
 112:Core/Src/tim.c ****   	LL_TIM_DisableMasterSlaveMode(TimerMsDelay);
 113:Core/Src/tim.c **** 
 114:Core/Src/tim.c **** 	LL_TIM_ClearFlag_UPDATE(TimerMsDelay); //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
 115:Core/Src/tim.c **** 	LL_TIM_EnableIT_UPDATE(TimerMsDelay); //—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –æ—Ç —Ç–∞–π–º–µ—
 116:Core/Src/tim.c **** 	LL_TIM_SetCounter(TimerMsDelay, 0); //—Å–±—Ä–æ—Å —Å—á—ë—Ç–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
 117:Core/Src/tim.c **** 
 118:Core/Src/tim.c ****   	NVIC_SetPriority  (TimerMsDelay_IRQn , NVIC_EncodePriority(NVIC_GetPriorityGrouping(),2, 0));
 119:Core/Src/tim.c ****   	NVIC_EnableIRQ(TimerMsDelay_IRQn ); //–≤–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ—Ç —Ç–∞–π–º–µ—Ä–
 120:Core/Src/tim.c ****   	LL_TIM_EnableCounter(TimerMsDelay); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞	
 121:Core/Src/tim.c **** }
 122:Core/Src/tim.c **** 
 123:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 124:Core/Src/tim.c **** void TimerMsDelay_IRQHandler (void)	
 125:Core/Src/tim.c **** {
 126:Core/Src/tim.c **** 	if (LL_TIM_IsActiveFlag_UPDATE(TimerMsDelay) == SET)
 127:Core/Src/tim.c **** 	{	
 128:Core/Src/tim.c **** 		LL_TIM_ClearFlag_UPDATE (TimerMsDelay); 
 129:Core/Src/tim.c **** 		LL_TIM_DisableCounter(TimerMsDelay); 
 130:Core/Src/tim.c **** 		flag_end_delay = RESET;
 131:Core/Src/tim.c **** 	}
 132:Core/Src/tim.c **** }
 133:Core/Src/tim.c **** 
 134:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 135:Core/Src/tim.c **** void delay_ms (uint16_t delay)
 136:Core/Src/tim.c **** {
 137:Core/Src/tim.c **** 	LL_TIM_SetAutoReload(TimerMsDelay, delay); 
 138:Core/Src/tim.c **** 	LL_TIM_SetCounter(TimerMsDelay, 0); 
 139:Core/Src/tim.c **** 	LL_TIM_ClearFlag_UPDATE(TimerMsDelay);
 140:Core/Src/tim.c **** 	LL_TIM_EnableCounter(TimerMsDelay); 
 141:Core/Src/tim.c ****   	flag_end_delay = 1;
 142:Core/Src/tim.c **** }
 143:Core/Src/tim.c **** 
 144:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 145:Core/Src/tim.c **** static void SysTimer_init (void)
ARM GAS  /tmp/ccgn3NGF.s 			page 4


 146:Core/Src/tim.c **** {
 147:Core/Src/tim.c **** 	LL_TIM_InitTypeDef TIM_InitStruct = {0};
 148:Core/Src/tim.c **** 	
 149:Core/Src/tim.c ****   	LL_APB1_GRP1_EnableClock(SysTimer_APB1_BIT);
 150:Core/Src/tim.c ****   	TIM_InitStruct.Prescaler = 31;
 151:Core/Src/tim.c ****   	TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 152:Core/Src/tim.c ****   	TIM_InitStruct.Autoreload = 1000-1;
 153:Core/Src/tim.c ****   	LL_TIM_Init(SysTimer, &TIM_InitStruct);
 154:Core/Src/tim.c ****   	LL_TIM_DisableARRPreload(SysTimer);
 155:Core/Src/tim.c ****   	LL_TIM_SetTriggerOutput(SysTimer, LL_TIM_TRGO_RESET);
 156:Core/Src/tim.c ****   	LL_TIM_DisableMasterSlaveMode(SysTimer);
 157:Core/Src/tim.c **** 
 158:Core/Src/tim.c **** 	LL_TIM_ClearFlag_UPDATE(SysTimer); //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
 159:Core/Src/tim.c **** 	LL_TIM_EnableIT_UPDATE(SysTimer); //—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –æ—Ç —Ç–∞–π–º–µ—Ä–∞
 160:Core/Src/tim.c **** 	LL_TIM_SetCounter(SysTimer, 0); //—Å–±—Ä–æ—Å —Å—á—ë—Ç–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
 161:Core/Src/tim.c **** 
 162:Core/Src/tim.c ****   	NVIC_SetPriority  (SysTimer_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
 163:Core/Src/tim.c ****   	NVIC_EnableIRQ(SysTimer_IRQn); //–≤–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ—Ç —Ç–∞–π–º–µ—Ä–∞
 164:Core/Src/tim.c ****   	LL_TIM_EnableCounter(SysTimer); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞	
 165:Core/Src/tim.c **** 
 166:Core/Src/tim.c **** }
 167:Core/Src/tim.c **** 
 168:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 169:Core/Src/tim.c **** void SysTimer_IRQHandler(void)
 170:Core/Src/tim.c **** {
 171:Core/Src/tim.c **** 	if (LL_TIM_IsActiveFlag_UPDATE(SysTimer) == SET)
 172:Core/Src/tim.c **** 	{	
 173:Core/Src/tim.c **** 	  	LL_TIM_ClearFlag_UPDATE (SysTimer); //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
 174:Core/Src/tim.c ****     	TicksCounter++; 
 175:Core/Src/tim.c ****     	LL_TIM_EnableCounter(SysTimer); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞	
 176:Core/Src/tim.c **** 	  	if ( SysTick_CallbackFunction != 0 ) //–µ—Å–ª–∏ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∫–æ–ª–ª–±—ç–∫ xTimer_T
 177:Core/Src/tim.c **** 	  	{ SysTick_CallbackFunction(TicksCounter); } //–≤—ã–∑–æ–≤ –∫–æ–ª–ª–±—ç–∫–∞
 178:Core/Src/tim.c **** 	}
 179:Core/Src/tim.c **** }
 180:Core/Src/tim.c **** 
 181:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 182:Core/Src/tim.c **** void timers_ini (void)
 183:Core/Src/tim.c **** {
 184:Core/Src/tim.c **** 	TimerMs_init();
 185:Core/Src/tim.c ****   	SysTimer_init(); 		//–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TIM6 –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ xTimer
 186:Core/Src/tim.c ****   	SysTick_CallbackFunction = xTimer_Task; //–ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—é –∑–Ω–∞—á–µ–Ω–∏
 187:Core/Src/tim.c ****   	xTimeNow = Get_SysTick; //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Ñ-—é –ø–æ–ª—É—á–µ–
 188:Core/Src/tim.c ****   	xSysTimer = xTimer_Create(1000, PERIODIC, &vSysTimerCallback, ENABLE);
 189:Core/Src/tim.c **** }
 190:Core/Src/tim.c **** 
 191:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 192:Core/Src/tim.c **** xTimerHandle xTimer_Create(uint32_t xTimerPeriodInTicks, FunctionalState AutoReload, 
 193:Core/Src/tim.c **** tmrTIMER_CALLBACK CallbackFunction, FunctionalState NewState)
 194:Core/Src/tim.c **** {
 195:Core/Src/tim.c **** 	xTimerHandle NewTimer = 0; //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
 196:Core/Src/tim.c **** 	
 197:Core/Src/tim.c **** 	for (uint16_t count = 0; count < MAX_xTIMERS; count++) //–ø–æ–∏—Å–∫ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–
 198:Core/Src/tim.c **** 	{
 199:Core/Src/tim.c **** 		if (xTimerList[count].CallbackFunction == 0) 		//–µ—Å–ª–∏ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—é –∫–æ–ª–ª–
 200:Core/Src/tim.c **** 		{
 201:Core/Src/tim.c **** 			xTimerList[count].periodic = xTimerPeriodInTicks;		//–≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –º—Å
 202:Core/Src/tim.c **** 			xTimerList[count].AutoReload = AutoReload;				//–ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–ª–∏ –
ARM GAS  /tmp/ccgn3NGF.s 			page 5


 203:Core/Src/tim.c **** 			xTimerList[count].CallbackFunction = CallbackFunction;	//—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—é –∫–æ–ª–ª–
 204:Core/Src/tim.c **** 			
 205:Core/Src/tim.c **** 			if (NewState != DISABLE) //–µ—Å–ª–∏ –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ  ENABLE
 206:Core/Src/tim.c **** 			{
 207:Core/Src/tim.c **** 				xTimerList[count].expiry = xTimeNow() + xTimerPeriodInTicks; //–≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–
 208:Core/Src/tim.c **** 				xTimerList[count].State = __ACTIVE; //—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω
 209:Core/Src/tim.c **** 			} 
 210:Core/Src/tim.c **** 			else 
 211:Core/Src/tim.c **** 			{	xTimerList[count].State = __IDLE;	}	//–µ—Å–ª–∏ –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ  
 212:Core/Src/tim.c **** 			NewTimer = (xTimerHandle)(count+1); //–≤–æ–∑–≤—Ä–∞—Ç –Ω–æ–º–µ—Ä–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä
 213:Core/Src/tim.c **** 			break;
 214:Core/Src/tim.c ****     }
 215:Core/Src/tim.c ****   }
 216:Core/Src/tim.c **** 	return NewTimer;
 217:Core/Src/tim.c **** }
 218:Core/Src/tim.c **** 
 219:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 220:Core/Src/tim.c **** void xTimer_SetPeriod(xTimerHandle xTimer, uint32_t xTimerPeriodInTicks) 
 221:Core/Src/tim.c **** {
 222:Core/Src/tim.c **** 	if ( xTimer != 0 )  
 223:Core/Src/tim.c **** 	{	xTimerList[(uint32_t)xTimer-1].periodic = xTimerPeriodInTicks;	} //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥
 224:Core/Src/tim.c **** }
 225:Core/Src/tim.c **** 
 226:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 227:Core/Src/tim.c **** void xTimer_Reload(xTimerHandle xTimer) 
 228:Core/Src/tim.c **** {
 229:Core/Src/tim.c **** 	if ( xTimer != 0 ) 
 230:Core/Src/tim.c **** 	{
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].expiry = xTimeNow() + xTimerList[(uint32_t)xTimer-1].periodic; //—
 232:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 233:Core/Src/tim.c **** 	}
 234:Core/Src/tim.c **** }
 235:Core/Src/tim.c **** 
 236:Core/Src/tim.c **** //------------------------------------------------------------------------------------//
 237:Core/Src/tim.c **** void xTimer_Delete(xTimerHandle xTimer)
 238:Core/Src/tim.c **** {
 239:Core/Src/tim.c **** 	if ( xTimer != 0 ) 
 240:Core/Src/tim.c **** 	{
 241:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].CallbackFunction = 0;
 242:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __IDLE;
 243:Core/Src/tim.c **** 		xTimer = 0;
 244:Core/Src/tim.c **** 	}		
 245:Core/Src/tim.c **** }
 246:Core/Src/tim.c **** 
 247:Core/Src/tim.c **** //--------------------------------—Ñ-—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ xTimer--------------------------------
 248:Core/Src/tim.c **** void xTimer_Task(uint32_t portTick)
 249:Core/Src/tim.c **** {
  28              		.loc 1 249 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 249 1 is_stmt 0 view .LVU1
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
ARM GAS  /tmp/ccgn3NGF.s 			page 6


  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 0546     		mov	r5, r0
 250:Core/Src/tim.c **** 	uint16_t i;
  41              		.loc 1 250 2 is_stmt 1 view .LVU2
 251:Core/Src/tim.c **** 	
 252:Core/Src/tim.c **** 	for (i = 0; i < MAX_xTIMERS; i++) 
  42              		.loc 1 252 2 view .LVU3
  43              	.LVL1:
  44              		.loc 1 252 9 is_stmt 0 view .LVU4
  45 0004 0024     		movs	r4, #0
  46              		.loc 1 252 2 view .LVU5
  47 0006 0CE0     		b	.L2
  48              	.LVL2:
  49              	.L4:
 253:Core/Src/tim.c ****   	{
 254:Core/Src/tim.c **** 		switch (xTimerList[i].State) 
 255:Core/Src/tim.c **** 		{
 256:Core/Src/tim.c **** 			case __ACTIVE: //–µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω
 257:Core/Src/tim.c **** 				if ( portTick >= xTimerList[i].expiry ) //–µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è
 258:Core/Src/tim.c **** 				{				
 259:Core/Src/tim.c **** 					if ( xTimerList[i].AutoReload != DISABLE ) //–µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π
 260:Core/Src/tim.c **** 					{	xTimerList[i].expiry = portTick + xTimerList[i].periodic;	} //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–
 261:Core/Src/tim.c **** 					else 
 262:Core/Src/tim.c **** 					{	xTimerList[i].State = __IDLE;	}	//—Å—Ç–∞—Ç—É—Å —Ç–∞–π–º–µ—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω		
  50              		.loc 1 262 8 is_stmt 1 view .LVU6
  51              		.loc 1 262 28 is_stmt 0 view .LVU7
  52 0008 134B     		ldr	r3, .L9
  53 000a 03EB0413 		add	r3, r3, r4, lsl #4
  54 000e 0022     		movs	r2, #0
  55 0010 1A72     		strb	r2, [r3, #8]
  56              	.L5:
 263:Core/Src/tim.c **** 					xTimerList[i].CallbackFunction((xTimerHandle)(i+1)); //–≤—ã–∑–æ–≤ –∫–æ–ª–ª–±—ç–∫–∞
  57              		.loc 1 263 6 is_stmt 1 view .LVU8
  58              		.loc 1 263 19 is_stmt 0 view .LVU9
  59 0012 114B     		ldr	r3, .L9
  60 0014 03EB0013 		add	r3, r3, r0, lsl #4
  61 0018 DB68     		ldr	r3, [r3, #12]
  62              		.loc 1 263 6 view .LVU10
  63 001a 0130     		adds	r0, r0, #1
  64 001c 9847     		blx	r3
  65              	.LVL3:
  66              	.L3:
 252:Core/Src/tim.c ****   	{
  67              		.loc 1 252 31 is_stmt 1 discriminator 2 view .LVU11
 252:Core/Src/tim.c ****   	{
  68              		.loc 1 252 32 is_stmt 0 discriminator 2 view .LVU12
  69 001e 0134     		adds	r4, r4, #1
  70              	.LVL4:
 252:Core/Src/tim.c ****   	{
  71              		.loc 1 252 32 discriminator 2 view .LVU13
  72 0020 A4B2     		uxth	r4, r4
  73              	.LVL5:
  74              	.L2:
 252:Core/Src/tim.c ****   	{
  75              		.loc 1 252 14 is_stmt 1 discriminator 1 view .LVU14
 252:Core/Src/tim.c ****   	{
ARM GAS  /tmp/ccgn3NGF.s 			page 7


  76              		.loc 1 252 2 is_stmt 0 discriminator 1 view .LVU15
  77 0022 012C     		cmp	r4, #1
  78 0024 17D8     		bhi	.L8
 254:Core/Src/tim.c **** 		{
  79              		.loc 1 254 3 is_stmt 1 view .LVU16
 254:Core/Src/tim.c **** 		{
  80              		.loc 1 254 24 is_stmt 0 view .LVU17
  81 0026 2046     		mov	r0, r4
  82 0028 0B4B     		ldr	r3, .L9
  83 002a 03EB0413 		add	r3, r3, r4, lsl #4
  84 002e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 254:Core/Src/tim.c **** 		{
  85              		.loc 1 254 3 view .LVU18
  86 0030 012B     		cmp	r3, #1
  87 0032 F4D1     		bne	.L3
 257:Core/Src/tim.c **** 				{				
  88              		.loc 1 257 5 is_stmt 1 view .LVU19
 257:Core/Src/tim.c **** 				{				
  89              		.loc 1 257 35 is_stmt 0 view .LVU20
  90 0034 2301     		lsls	r3, r4, #4
  91 0036 084A     		ldr	r2, .L9
  92 0038 D358     		ldr	r3, [r2, r3]
 257:Core/Src/tim.c **** 				{				
  93              		.loc 1 257 8 view .LVU21
  94 003a AB42     		cmp	r3, r5
  95 003c EFD8     		bhi	.L3
 259:Core/Src/tim.c **** 					{	xTimerList[i].expiry = portTick + xTimerList[i].periodic;	} //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–
  96              		.loc 1 259 6 is_stmt 1 view .LVU22
 259:Core/Src/tim.c **** 					{	xTimerList[i].expiry = portTick + xTimerList[i].periodic;	} //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–
  97              		.loc 1 259 24 is_stmt 0 view .LVU23
  98 003e 02EB0413 		add	r3, r2, r4, lsl #4
  99 0042 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 259:Core/Src/tim.c **** 					{	xTimerList[i].expiry = portTick + xTimerList[i].periodic;	} //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–
 100              		.loc 1 259 9 view .LVU24
 101 0044 002B     		cmp	r3, #0
 102 0046 DFD0     		beq	.L4
 260:Core/Src/tim.c **** 					else 
 103              		.loc 1 260 8 is_stmt 1 view .LVU25
 260:Core/Src/tim.c **** 					else 
 104              		.loc 1 260 55 is_stmt 0 view .LVU26
 105 0048 2101     		lsls	r1, r4, #4
 106 004a 02EB0413 		add	r3, r2, r4, lsl #4
 107 004e 5B68     		ldr	r3, [r3, #4]
 260:Core/Src/tim.c **** 					else 
 108              		.loc 1 260 40 view .LVU27
 109 0050 2B44     		add	r3, r3, r5
 260:Core/Src/tim.c **** 					else 
 110              		.loc 1 260 29 view .LVU28
 111 0052 5350     		str	r3, [r2, r1]
 112 0054 DDE7     		b	.L5
 113              	.L8:
 264:Core/Src/tim.c **** 				}					
 265:Core/Src/tim.c **** 				break;
 266:Core/Src/tim.c **** 				
 267:Core/Src/tim.c **** 			default:
 268:Core/Src/tim.c **** 				break;
 269:Core/Src/tim.c **** 		}
ARM GAS  /tmp/ccgn3NGF.s 			page 8


 270:Core/Src/tim.c **** 	}	
 271:Core/Src/tim.c **** }
 114              		.loc 1 271 1 view .LVU29
 115 0056 38BD     		pop	{r3, r4, r5, pc}
 116              	.LVL6:
 117              	.L10:
 118              		.loc 1 271 1 view .LVU30
 119              		.align	2
 120              	.L9:
 121 0058 00000000 		.word	.LANCHOR0
 122              		.cfi_endproc
 123              	.LFE826:
 125              		.section	.text.Get_SysTick,"ax",%progbits
 126              		.align	1
 127              		.global	Get_SysTick
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	Get_SysTick:
 133              	.LFB829:
 272:Core/Src/tim.c **** 
 273:Core/Src/tim.c **** //-----------------------------------------------------------------------------------//
 274:Core/Src/tim.c **** static void vSysTimerCallback(xTimerHandle xTimer) 
 275:Core/Src/tim.c **** {
 276:Core/Src/tim.c ****   SysTimerCallback ();
 277:Core/Src/tim.c **** }
 278:Core/Src/tim.c **** 
 279:Core/Src/tim.c **** //-----------------------------------------------------------------------------------//
 280:Core/Src/tim.c **** void xSysTimer_Reload (uint16_t delay_ms)
 281:Core/Src/tim.c **** {
 282:Core/Src/tim.c **** 	xTimer_SetPeriod(xSysTimer, delay_ms);
 283:Core/Src/tim.c **** 	xTimer_Reload(xSysTimer);	
 284:Core/Src/tim.c **** }
 285:Core/Src/tim.c **** 
 286:Core/Src/tim.c **** // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ SysTick---------------------------------------------------
 287:Core/Src/tim.c **** uint64_t Get_SysTick(void)
 288:Core/Src/tim.c **** { 
 134              		.loc 1 288 1 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 289:Core/Src/tim.c ****   return TicksCounter;  
 139              		.loc 1 289 3 view .LVU32
 290:Core/Src/tim.c **** }
 140              		.loc 1 290 1 is_stmt 0 view .LVU33
 141 0000 014B     		ldr	r3, .L12
 142 0002 D3E90001 		ldrd	r0, [r3]
 143 0006 7047     		bx	lr
 144              	.L13:
 145              		.align	2
 146              	.L12:
 147 0008 00000000 		.word	.LANCHOR1
 148              		.cfi_endproc
 149              	.LFE829:
 151              		.section	.text.TimerMs_init,"ax",%progbits
 152              		.align	1
ARM GAS  /tmp/ccgn3NGF.s 			page 9


 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	TimerMs_init:
 158              	.LFB816:
 102:Core/Src/tim.c **** 	LL_TIM_InitTypeDef TIM_InitStruct = {0};
 159              		.loc 1 102 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 24
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163 0000 30B5     		push	{r4, r5, lr}
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 12
 166              		.cfi_offset 4, -12
 167              		.cfi_offset 5, -8
 168              		.cfi_offset 14, -4
 169 0002 87B0     		sub	sp, sp, #28
 170              	.LCFI2:
 171              		.cfi_def_cfa_offset 40
 103:Core/Src/tim.c **** 	
 172              		.loc 1 103 2 view .LVU35
 103:Core/Src/tim.c **** 	
 173              		.loc 1 103 21 is_stmt 0 view .LVU36
 174 0004 0025     		movs	r5, #0
 175 0006 0295     		str	r5, [sp, #8]
 176 0008 0395     		str	r5, [sp, #12]
 177 000a 0495     		str	r5, [sp, #16]
 178 000c 0595     		str	r5, [sp, #20]
 105:Core/Src/tim.c ****   	TIM_InitStruct.Prescaler = 32000-1;
 179              		.loc 1 105 4 is_stmt 1 view .LVU37
 180              	.LVL7:
 181              	.LBB110:
 182              	.LBI110:
 183              		.file 2 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h"
   1:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @file    stm32l1xx_ll_bus.h
   4:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
   7:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****     [..]
  11:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  17:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****     [..]
  18:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  22:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   ******************************************************************************
ARM GAS  /tmp/ccgn3NGF.s 			page 10


  24:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @attention
  25:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
  26:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * Copyright (c) 2017 STMicroelectronics.
  27:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * All rights reserved.
  28:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
  29:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  30:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * the root directory of this software component.
  31:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  32:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   ******************************************************************************
  33:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
  34:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  35:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  36:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #ifndef __STM32L1xx_LL_BUS_H
  37:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define __STM32L1xx_LL_BUS_H
  38:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  39:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #ifdef __cplusplus
  40:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** extern "C" {
  41:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif
  42:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  43:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #include "stm32l1xx.h"
  45:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  46:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @addtogroup STM32L1xx_LL_Driver
  47:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
  48:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
  49:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  50:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(RCC)
  51:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  52:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  53:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
  54:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
  55:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  56:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  57:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  58:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  59:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  61:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  63:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  64:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  65:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  66:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
  67:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
  68:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
  69:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  70:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
  71:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
  72:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  73:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  74:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
  75:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
  76:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
  77:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(GPIOE)
  78:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
  79:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif/*GPIOE*/
  80:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOH          RCC_AHBENR_GPIOHEN
ARM GAS  /tmp/ccgn3NGF.s 			page 11


  81:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(GPIOF)
  82:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
  83:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif/*GPIOF*/
  84:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(GPIOG)
  85:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOG          RCC_AHBENR_GPIOGEN
  86:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif/*GPIOG*/
  87:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBLPENR_SRAMLPEN
  88:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  89:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  90:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  91:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(DMA2)
  92:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  93:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif/*DMA2*/
  94:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(AES)
  95:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_AESEN
  96:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif/*AES*/
  97:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(FSMC_Bank1)
  98:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FSMC           RCC_AHBENR_FSMCEN
  99:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif/*FSMC_Bank1*/
 100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @}
 102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
 106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
 108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR_TIM4EN
 111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(TIM5)
 112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR_TIM5EN
 113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif /*TIM5*/
 114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(LCD)
 117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN
 118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif /*LCD*/
 119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(SPI3)
 122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR_SPI3EN
 123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif /*SPI3*/
 124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(UART4)
 127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR_UART4EN
 128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif /*UART4*/
 129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(UART5)
 130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR_UART5EN
 131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif /*UART5*/
 132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_COMP           RCC_APB1ENR_COMPEN
ARM GAS  /tmp/ccgn3NGF.s 			page 12


 138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(OPAMP)
 139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Note: Peripherals COMP and OPAMP share the same clock domain */
 140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_OPAMP          LL_APB1_GRP1_PERIPH_COMP
 141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif
 142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @}
 144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
 148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM9           RCC_APB2ENR_TIM9EN
 152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM10          RCC_APB2ENR_TIM10EN
 153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM11          RCC_APB2ENR_TIM11EN
 154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #if defined(SDIO)
 156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDIO           RCC_APB2ENR_SDIOEN
 157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #endif /*SDIO*/
 158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @}
 162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @}
 166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
 173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
 177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
 184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOHEN       LL_AHB1_GRP1_EnableClock\n
 187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOGEN       LL_AHB1_GRP1_EnableClock\n
 189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_EnableClock\n
 194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_EnableClock
ARM GAS  /tmp/ccgn3NGF.s 			page 13


 195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF (*)
 203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG (*)
 204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
 226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOHEN       LL_AHB1_GRP1_IsEnabledClock\n
 231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOGEN       LL_AHB1_GRP1_IsEnabledClock\n
 233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_IsEnabledClock\n
 238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_IsEnabledClock
 239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF (*)
 247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG (*)
 248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
ARM GAS  /tmp/ccgn3NGF.s 			page 14


 252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOHEN       LL_AHB1_GRP1_DisableClock\n
 271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
 272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       GPIOGEN       LL_AHB1_GRP1_DisableClock\n
 273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_DisableClock\n
 278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_DisableClock
 279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF (*)
 287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG (*)
 288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
ARM GAS  /tmp/ccgn3NGF.s 			page 15


 309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOHRST      LL_AHB1_GRP1_ForceReset\n
 311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOGRST      LL_AHB1_GRP1_ForceReset\n
 313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      FLITFRST      LL_AHB1_GRP1_ForceReset\n
 315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      DMA1RST       LL_AHB1_GRP1_ForceReset\n
 316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      DMA2RST       LL_AHB1_GRP1_ForceReset\n
 317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ForceReset\n
 318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      FSMCRST       LL_AHB1_GRP1_ForceReset
 319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF (*)
 328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG (*)
 329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOHRST      LL_AHB1_GRP1_ReleaseReset\n
 352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      GPIOGRST      LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      FLITFRST      LL_AHB1_GRP1_ReleaseReset\n
 356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ReleaseReset\n
 359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBRSTR      FSMCRST       LL_AHB1_GRP1_ReleaseReset
 360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
ARM GAS  /tmp/ccgn3NGF.s 			page 16


 366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF (*)
 369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG (*)
 370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll AHBLPENR     GPIOALPEN     LL_AHB1_GRP1_EnableClockSleep\n
 388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOBLPEN     LL_AHB1_GRP1_EnableClockSleep\n
 389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOCLPEN     LL_AHB1_GRP1_EnableClockSleep\n
 390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIODLPEN     LL_AHB1_GRP1_EnableClockSleep\n
 391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOELPEN     LL_AHB1_GRP1_EnableClockSleep\n
 392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOHLPEN     LL_AHB1_GRP1_EnableClockSleep\n
 393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOFLPEN     LL_AHB1_GRP1_EnableClockSleep\n
 394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOGLPEN     LL_AHB1_GRP1_EnableClockSleep\n
 395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     CRCLPEN       LL_AHB1_GRP1_EnableClockSleep\n
 396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     FLITFLPEN     LL_AHB1_GRP1_EnableClockSleep\n
 397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     SRAMLPEN      LL_AHB1_GRP1_EnableClockSleep\n
 398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     DMA1LPEN      LL_AHB1_GRP1_EnableClockSleep\n
 399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     DMA2LPEN      LL_AHB1_GRP1_EnableClockSleep\n
 400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     AESLPEN       LL_AHB1_GRP1_EnableClockSleep\n
 401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     FSMCLPEN      LL_AHB1_GRP1_EnableClockSleep
 402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF (*)
 410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG (*)
 411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
ARM GAS  /tmp/ccgn3NGF.s 			page 17


 423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->AHBLPENR, Periphs);
 426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBLPENR, Periphs);
 428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll AHBLPENR     GPIOALPEN     LL_AHB1_GRP1_DisableClockSleep\n
 434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOBLPEN     LL_AHB1_GRP1_DisableClockSleep\n
 435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOCLPEN     LL_AHB1_GRP1_DisableClockSleep\n
 436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIODLPEN     LL_AHB1_GRP1_DisableClockSleep\n
 437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOELPEN     LL_AHB1_GRP1_DisableClockSleep\n
 438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOHLPEN     LL_AHB1_GRP1_DisableClockSleep\n
 439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOFLPEN     LL_AHB1_GRP1_DisableClockSleep\n
 440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     GPIOGLPEN     LL_AHB1_GRP1_DisableClockSleep\n
 441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     CRCLPEN       LL_AHB1_GRP1_DisableClockSleep\n
 442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     FLITFLPEN     LL_AHB1_GRP1_DisableClockSleep\n
 443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     SRAMLPEN      LL_AHB1_GRP1_DisableClockSleep\n
 444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     DMA1LPEN      LL_AHB1_GRP1_DisableClockSleep\n
 445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     DMA2LPEN      LL_AHB1_GRP1_DisableClockSleep\n
 446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     AESLPEN       LL_AHB1_GRP1_DisableClockSleep\n
 447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         AHBLPENR     FSMCLPEN      LL_AHB1_GRP1_DisableClockSleep
 448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF (*)
 456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG (*)
 457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBLPENR, Periphs);
 471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @}
 475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
 479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 18


 480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_EnableClock\n
 486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_EnableClock\n
 487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      LCDEN         LL_APB1_GRP1_EnableClock\n
 490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_EnableClock\n
 493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_EnableClock\n
 496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_EnableClock\n
 497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      COMPEN        LL_APB1_GRP1_EnableClock
 503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
 523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_COMP
 524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP (*)
 525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
ARM GAS  /tmp/ccgn3NGF.s 			page 19


 537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
 543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
 544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
 550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_IsEnabledClock\n
 553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_IsEnabledClock\n
 554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      COMPEN        LL_APB1_GRP1_IsEnabledClock
 560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
 580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_COMP
 581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP (*)
 582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
ARM GAS  /tmp/ccgn3NGF.s 			page 20


 594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_DisableClock\n
 596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_DisableClock\n
 597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      LCDEN         LL_APB1_GRP1_DisableClock\n
 600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock\n
 601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_DisableClock\n
 603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_DisableClock\n
 606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_DisableClock\n
 607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1ENR      COMPEN        LL_APB1_GRP1_DisableClock
 613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
 633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_COMP
 634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP (*)
 635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ForceReset\n
 649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ForceReset\n
 650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
ARM GAS  /tmp/ccgn3NGF.s 			page 21


 651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     LCDRST        LL_APB1_GRP1_ForceReset\n
 653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset\n
 654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ForceReset\n
 656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ForceReset\n
 659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ForceReset\n
 660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     COMPRST       LL_APB1_GRP1_ForceReset
 666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
 687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_COMP
 688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP (*)
 689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ReleaseReset\n
 703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ReleaseReset\n
 704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     LCDRST        LL_APB1_GRP1_ReleaseReset\n
 707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
ARM GAS  /tmp/ccgn3NGF.s 			page 22


 708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ReleaseReset\n
 710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ReleaseReset\n
 713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ReleaseReset\n
 714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1RSTR     COMPRST       LL_APB1_GRP1_ReleaseReset
 720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
 741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_COMP
 742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP (*)
 743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB1LPENR    TIM2LPEN      LL_APB1_GRP1_EnableClockSleep\n
 755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM3LPEN      LL_APB1_GRP1_EnableClockSleep\n
 756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM4LPEN      LL_APB1_GRP1_EnableClockSleep\n
 757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM5LPEN      LL_APB1_GRP1_EnableClockSleep\n
 758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM6LPEN      LL_APB1_GRP1_EnableClockSleep\n
 759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM7LPEN      LL_APB1_GRP1_EnableClockSleep\n
 760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    LCDLPEN       LL_APB1_GRP1_EnableClockSleep\n
 761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    WWDGLPEN      LL_APB1_GRP1_EnableClockSleep\n
 762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    SPI2LPEN      LL_APB1_GRP1_EnableClockSleep\n
 763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    SPI3LPEN      LL_APB1_GRP1_EnableClockSleep\n
 764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    USART2LPEN    LL_APB1_GRP1_EnableClockSleep\n
ARM GAS  /tmp/ccgn3NGF.s 			page 23


 765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    USART3LPEN    LL_APB1_GRP1_EnableClockSleep\n
 766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    UART4LPEN     LL_APB1_GRP1_EnableClockSleep\n
 767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    UART5LPEN     LL_APB1_GRP1_EnableClockSleep\n
 768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    I2C1LPEN      LL_APB1_GRP1_EnableClockSleep\n
 769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    I2C2LPEN      LL_APB1_GRP1_EnableClockSleep\n
 770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    USBLPEN       LL_APB1_GRP1_EnableClockSleep\n
 771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    PWRLPEN       LL_APB1_GRP1_EnableClockSleep\n
 772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    DACLPEN       LL_APB1_GRP1_EnableClockSleep\n
 773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    COMPLPEN      LL_APB1_GRP1_EnableClockSleep
 774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
 794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_COMP
 795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP (*)
 796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->APB1LPENR, Periphs);
 804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1LPENR, Periphs);
 806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
 811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB1LPENR    TIM2LPEN      LL_APB1_GRP1_DisableClockSleep\n
 812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM3LPEN      LL_APB1_GRP1_DisableClockSleep\n
 813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM4LPEN      LL_APB1_GRP1_DisableClockSleep\n
 814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM5LPEN      LL_APB1_GRP1_DisableClockSleep\n
 815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM6LPEN      LL_APB1_GRP1_DisableClockSleep\n
 816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    TIM7LPEN      LL_APB1_GRP1_DisableClockSleep\n
 817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    LCDLPEN       LL_APB1_GRP1_DisableClockSleep\n
 818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    WWDGLPEN      LL_APB1_GRP1_DisableClockSleep\n
 819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    SPI2LPEN      LL_APB1_GRP1_DisableClockSleep\n
 820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    SPI3LPEN      LL_APB1_GRP1_DisableClockSleep\n
 821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    USART2LPEN    LL_APB1_GRP1_DisableClockSleep\n
ARM GAS  /tmp/ccgn3NGF.s 			page 24


 822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    USART3LPEN    LL_APB1_GRP1_DisableClockSleep\n
 823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    UART4LPEN     LL_APB1_GRP1_DisableClockSleep\n
 824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    UART5LPEN     LL_APB1_GRP1_DisableClockSleep\n
 825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    I2C1LPEN      LL_APB1_GRP1_DisableClockSleep\n
 826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    I2C2LPEN      LL_APB1_GRP1_DisableClockSleep\n
 827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    USBLPEN       LL_APB1_GRP1_DisableClockSleep\n
 828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    PWRLPEN       LL_APB1_GRP1_DisableClockSleep\n
 829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    DACLPEN       LL_APB1_GRP1_DisableClockSleep\n
 830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB1LPENR    COMPLPEN      LL_APB1_GRP1_DisableClockSleep
 831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
 851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_COMP
 852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP (*)
 853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1LPENR, Periphs);
 860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @}
 864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @{
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   */
 869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** 
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** /**
 871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB2ENR      TIM9EN        LL_APB2_GRP1_EnableClock\n
 874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB2ENR      TIM10EN       LL_APB2_GRP1_EnableClock\n
 875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB2ENR      TIM11EN       LL_APB2_GRP1_EnableClock\n
 876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB2_GRP1_EnableClock\n
 877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB2ENR      SDIOEN        LL_APB2_GRP1_EnableClock\n
 878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
ARM GAS  /tmp/ccgn3NGF.s 			page 25


 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock
 880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM9
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM10
 884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM11
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SDIO (*)
 887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   * @retval None
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** */
 893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 184              		.loc 2 893 22 view .LVU38
 185              	.LBB111:
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 186              		.loc 2 895 3 view .LVU39
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 187              		.loc 2 896 3 view .LVU40
 188 000e 284B     		ldr	r3, .L18
 189 0010 1A6A     		ldr	r2, [r3, #32]
 190 0012 42F00802 		orr	r2, r2, #8
 191 0016 1A62     		str	r2, [r3, #32]
 897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 192              		.loc 2 898 3 view .LVU41
 193              		.loc 2 898 12 is_stmt 0 view .LVU42
 194 0018 1B6A     		ldr	r3, [r3, #32]
 195 001a 03F00803 		and	r3, r3, #8
 196              		.loc 2 898 10 view .LVU43
 197 001e 0193     		str	r3, [sp, #4]
 899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 198              		.loc 2 899 3 is_stmt 1 view .LVU44
 199 0020 019B     		ldr	r3, [sp, #4]
 200              	.LVL8:
 201              		.loc 2 899 3 is_stmt 0 view .LVU45
 202              	.LBE111:
 203              	.LBE110:
 106:Core/Src/tim.c ****   	TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 204              		.loc 1 106 4 is_stmt 1 view .LVU46
 106:Core/Src/tim.c ****   	TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 205              		.loc 1 106 29 is_stmt 0 view .LVU47
 206 0022 47F6FF43 		movw	r3, #31999
 207 0026 ADF80830 		strh	r3, [sp, #8]	@ movhi
 107:Core/Src/tim.c ****   	TIM_InitStruct.Autoreload = 1000-1;
 208              		.loc 1 107 4 is_stmt 1 view .LVU48
 108:Core/Src/tim.c ****   	LL_TIM_Init(TimerMsDelay, &TIM_InitStruct);
 209              		.loc 1 108 4 view .LVU49
 108:Core/Src/tim.c ****   	LL_TIM_Init(TimerMsDelay, &TIM_InitStruct);
 210              		.loc 1 108 30 is_stmt 0 view .LVU50
 211 002a 40F2E733 		movw	r3, #999
 212 002e 0493     		str	r3, [sp, #16]
 109:Core/Src/tim.c ****   	LL_TIM_DisableARRPreload(TimerMsDelay);
 213              		.loc 1 109 4 is_stmt 1 view .LVU51
ARM GAS  /tmp/ccgn3NGF.s 			page 26


 214 0030 204C     		ldr	r4, .L18+4
 215 0032 02A9     		add	r1, sp, #8
 216 0034 2046     		mov	r0, r4
 217 0036 FFF7FEFF 		bl	LL_TIM_Init
 218              	.LVL9:
 110:Core/Src/tim.c ****   	LL_TIM_SetTriggerOutput(TimerMsDelay, LL_TIM_TRGO_RESET);
 219              		.loc 1 110 4 view .LVU52
 220              	.LBB112:
 221              	.LBI112:
 222              		.file 3 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h"
   1:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @file    stm32l1xx_ll_tim.h
   4:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @attention
   8:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
   9:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * All rights reserved.
  11:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
  12:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * in the root directory of this software component.
  14:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
  16:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
  17:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  18:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  19:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #ifndef __STM32L1xx_LL_TIM_H
  21:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __STM32L1xx_LL_TIM_H
  22:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  23:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #ifdef __cplusplus
  24:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** extern "C" {
  25:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif
  26:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  27:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #include "stm32l1xx.h"
  29:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  30:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @addtogroup STM32L1xx_LL_Driver
  31:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  32:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  33:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  34:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defined (TIM9) || defin
  35:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  36:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  37:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  38:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  39:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  40:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  43:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  44:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  45:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  46:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  47:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
ARM GAS  /tmp/ccgn3NGF.s 			page 27


  48:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 1: NA */
  49:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  50:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 3: NA */
  51:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  52:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 5: NA */
  53:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x04U    /* 6: TIMx_CH4  */
  54:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  55:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  56:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  57:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  58:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  59:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: - NA */
  60:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  61:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: - NA */
  62:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  63:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: - NA */
  64:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U             /* 6: OC4M, OC4FE, OC4PE */
  65:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  66:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  67:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  68:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  69:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  70:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: - NA */
  71:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  72:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: - NA */
  73:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  74:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: - NA */
  75:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U             /* 6: CC4S, IC4PSC, IC4F */
  76:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  77:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  78:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  79:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  80:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: CC1P */
  81:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: NA */
  82:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   4U,            /* 2: CC2P */
  83:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: NA */
  84:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 4: CC3P */
  85:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: NA */
  86:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   12U            /* 6: CC4P */
  87:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  88:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  89:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
  90:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
  91:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  92:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  93:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
  94:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
  95:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  96:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  97:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  98:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  99:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIMx_OR_RMP_SHIFT  16U
 100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIMx_OR_RMP_MASK   0x0000FFFFU
 101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM_OR_RMP_MASK    ((TIM_OR_TI1RMP | TIM_OR_ETR_RMP | TIM_OR_TI1_RMP_RI) << TIMx_OR_RMP_SHI
 102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM9_OR_RMP_MASK   ((TIM_OR_TI1RMP | TIM9_OR_ITR1_RMP) << TIMx_OR_RMP_SHIFT)
 103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM2_OR_RMP_MASK   (TIM2_OR_ITR1_RMP << TIMx_OR_RMP_SHIFT)
 104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM3_OR_RMP_MASK   (TIM3_OR_ITR2_RMP << TIMx_OR_RMP_SHIFT)
ARM GAS  /tmp/ccgn3NGF.s 			page 28


 105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval none
 123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U : 6U)
 128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    @ref LL_TIM_SetPrescaler().*/
 150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    @ref LL_TIM_SetCounterMode().*/
 156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    be a number between 0x0000 and 0xFFFFFFFF.
ARM GAS  /tmp/ccgn3NGF.s 			page 29


 162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    @ref LL_TIM_SetAutoReload().*/
 165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    @ref LL_TIM_SetClockDivision().*/
 171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetMode().*/
 183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                LL_TIM_OC_SetCompareCHx (x=1..6).*/
 195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPolarity().*/
 217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
ARM GAS  /tmp/ccgn3NGF.s 			page 30


 219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetActiveInput().*/
 223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPrescaler().*/
 229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetFilter().*/
 235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_SetEncoderMode().*/
 248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 31


 276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
ARM GAS  /tmp/ccgn3NGF.s 			page 32


 333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter stops counting at 
 355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter is not stopped at 
 356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_0        /*!< The counter counts up and 
 366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_1        /*!<The counter counts up and d
 367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 33


 390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 34


 447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 35


 504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
ARM GAS  /tmp/ccgn3NGF.s 			page 36


 561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
 616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 37


 618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
 619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
 620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
 621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
 622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
 623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
 624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
 625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
 627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
 628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
 629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
 631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
 632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
 633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
 634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR            (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
 635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
 640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
 643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
 644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
 645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
 646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
 647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
 648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
 649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
 651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
 652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
 653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
 655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
 656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
 657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
 658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
 659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
 660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_TI1_RMP  TIM10 input 1 remapping capability
 665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_GPIO   TIM_OR_RMP_MASK                                         /*!< TI
 668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_LSI    (TIM_OR_TI1RMP_0 | TIM_OR_RMP_MASK)                     /*!< TI
 669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_LSE    (TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)                     /*!< TI
 670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_RTC    (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)   /*!< TI
 671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 38


 675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_ETR_RMP  TIM10 ETR remap
 676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_ETR_RMP_LSE      TIM_OR_RMP_MASK                                         /*!< 
 679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_ETR_RMP_TIM9_TGO (TIM_OR_ETR_RMP | TIM_OR_RMP_MASK)                      /*!< 
 680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_TI1_RMP_RI TIM10 Input 1 remap for Routing Interface (RI)
 685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP          TIM_OR_RMP_MASK                                         /*!< 
 688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_RI       (TIM_OR_TI1_RMP_RI | TIM_OR_RMP_MASK)                   /*!< 
 689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP  TIM11 input 1 remapping capability
 694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO       TIM_OR_RMP_MASK                                       /*!< 
 697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_MSI        (TIM_OR_TI1RMP_0 | TIM_OR_RMP_MASK)                   /*!< 
 698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_HSE_RTC    (TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)                   /*!< 
 699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO1      (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK) /*!< 
 700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_ETR_RMP  TIM11 ETR remap
 705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_ETR_RMP_LSE      TIM_OR_RMP_MASK                                         /*!< 
 708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_ETR_RMP_TIM9_TGO (TIM_OR_ETR_RMP | TIM_OR_RMP_MASK)                      /*!< 
 709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP_RI TIM11 Input 1 remap for Routing Interface (RI)
 714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP          TIM_OR_RMP_MASK                                         /*!< 
 717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_RI       (TIM_OR_TI1_RMP_RI | TIM_OR_RMP_MASK)                   /*!< 
 718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM9_TI1_RMP TIM9 Input 1 remap
 723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO     TIM9_OR_RMP_MASK                                          /*!<
 726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_LSE      (TIM_OR_TI1RMP_0 | TIM9_OR_RMP_MASK)                      /*!<
 727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO1    (TIM_OR_TI1RMP_1 | TIM9_OR_RMP_MASK)                      /*!<
 728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO2    (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM9_OR_RMP_MASK)    /*!<
 729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 39


 732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM9_ITR1_RMP  TIM9 ITR1 remap
 734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_ITR1_RMP_TIM3_TGO   TIM9_OR_RMP_MASK                                     /*!< T
 737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_ITR1_RMP_TOUCH_IO   (TIM9_OR_ITR1_RMP | TIM9_OR_RMP_MASK)                /*!< T
 738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ITR1_RMP  TIM2 internal trigger 1 remap
 743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM2_TIR1_RMP_TIM10_OC    TIM9_OR_RMP_MASK                                     /*!< 
 746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM2_TIR1_RMP_TIM5_TGO    (TIM2_OR_ITR1_RMP | TIM9_OR_RMP_MASK)                /*!< 
 747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_ITR2_RMP  TIM3 internal trigger 2 remap
 752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM3_TIR2_RMP_TIM11_OC    TIM9_OR_RMP_MASK                                     /*!< 
 755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM3_TIR2_RMP_TIM5_TGO    (TIM3_OR_ITR2_RMP | TIM9_OR_RMP_MASK)                /*!< 
 756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCREF_CLR_INT OCREF clear input selection
 762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_OCREF_CLR     0x00000000U         /*!< OCREF_CLR_INT is connected to t
 765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_ETR           TIM_SMCR_OCCS       /*!< OCREF_CLR_INT is connected to E
 766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
 776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
 777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
 781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Write a value in TIM register.
 785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __REG__ Register to be written
 787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
 788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccgn3NGF.s 			page 40


 789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
 791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Read a value in TIM register.
 794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __REG__ Register to be read
 796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Register value
 797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
 805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
 806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
 808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
 809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
 811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)((((__TIMCLK__) + (__CNTCLK__)/2U)/(__CNTCLK__)) - 1U
 812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
 815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
 816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
 819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
 822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
 823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
 826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         active/inactive delay.
 827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
 828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
 832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
 834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
 835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
 836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration
 839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         (when the timer operates in one pulse mode).
 840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
 841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
 845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
ARM GAS  /tmp/ccgn3NGF.s 			page 41


 846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
 848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
 849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
 850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
 853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
 854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
 855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
 856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
 857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
 858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
 859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
 860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
 862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
 863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
 871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
 875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable timer counter.
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
 880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
 884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable timer counter.
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
 891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
 895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
 901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
 902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/ccgn3NGF.s 			page 42


 903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
 904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(const TIM_TypeDef *TIMx)
 906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
 908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable update event generation.
 912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
 913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
 917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
 919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable update event generation.
 923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
 924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
 928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
 930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
 934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
 935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
 937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(const TIM_TypeDef *TIMx)
 939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
 941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set update event source
 945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
 946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
 947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Counter overflow/underflow
 948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Setting the UG bit
 949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Update generation through the slave mode controller
 950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
 951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
 952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
 953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
 955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
 956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
 957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
ARM GAS  /tmp/ccgn3NGF.s 			page 43


 960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
 962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual event update source
 966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
 967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
 969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
 970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
 971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(const TIM_TypeDef *TIMx)
 973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
 975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
 979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
 980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
 982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
 983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
 984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
 987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
 989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
 993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
 994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
 996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
 997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
 998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(const TIM_TypeDef *TIMx)
1000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       by a timer instance.
1009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
ARM GAS  /tmp/ccgn3NGF.s 			page 44


1017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual counter mode.
1030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       by a timer instance.
1033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(const TIM_TypeDef *TIMx)
1044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t counter_mode;
1046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CMS));
1048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   if (counter_mode == 0U)
1050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   {
1051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****     counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   }
1053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return counter_mode;
1055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 45


1074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
 223              		.loc 3 1074 22 view .LVU53
 224              	.LBB113:
1075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
 225              		.loc 3 1076 3 view .LVU54
 226 003a 2368     		ldr	r3, [r4]
 227 003c 23F08003 		bic	r3, r3, #128
 228 0040 2360     		str	r3, [r4]
 229              	.LVL10:
 230              		.loc 3 1076 3 is_stmt 0 view .LVU55
 231              	.LBE113:
 232              	.LBE112:
 111:Core/Src/tim.c ****   	LL_TIM_DisableMasterSlaveMode(TimerMsDelay);
 233              		.loc 1 111 4 is_stmt 1 view .LVU56
 234              	.LBB114:
 235              	.LBI114:
1077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(const TIM_TypeDef *TIMx)
1086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         (when supported) and the digital filters.
1093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       instance.
1096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         generators (when supported) and the digital filters.
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       instance.
1115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/ccgn3NGF.s 			page 46


1117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(const TIM_TypeDef *TIMx)
1123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the counter value.
1129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the counter value.
1143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(const TIM_TypeDef *TIMx)
1150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(const TIM_TypeDef *TIMx)
1163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the prescaler value.
1169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
ARM GAS  /tmp/ccgn3NGF.s 			page 47


1174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the prescaler value.
1185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(const TIM_TypeDef *TIMx)
1190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Auto-reload value
1217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(const TIM_TypeDef *TIMx)
1219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  /tmp/ccgn3NGF.s 			page 48


1231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(const TIM_TypeDef *TIMx)
1253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel
1263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel
1282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
ARM GAS  /tmp/ccgn3NGF.s 			page 49


1288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel
1301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(const TIM_TypeDef *TIMx, uint32_t Channels)
1310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure an output channel.
1323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
ARM GAS  /tmp/ccgn3NGF.s 			page 50


1345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode
1357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]), Mode << SHIFT
1379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode
1387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
ARM GAS  /tmp/ccgn3NGF.s 			page 51


1402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(const TIM_TypeDef *TIMx, uint32_t Channel)
1404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIFT
1408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity
1416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity
1439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(const TIM_TypeDef *TIMx, uint32_t Channel)
1450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
1453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
1457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
1458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
ARM GAS  /tmp/ccgn3NGF.s 			page 52


1459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
1460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
1461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast
1462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
1480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
1481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
1482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
1483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast
1484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
1502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
1503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
1504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
1505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
1506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(const TIM_TypeDef *TIMx, uint32_t Channel)
1515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
ARM GAS  /tmp/ccgn3NGF.s 			page 53


1516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
1519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
1524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
1525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
1526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
1527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload
1528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
1545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
1546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
1547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
1548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload
1549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
1566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
1567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
1568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
1569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
1570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
ARM GAS  /tmp/ccgn3NGF.s 			page 54


1573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(const TIM_TypeDef *TIMx, uint32_t Channel)
1579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
1583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
1588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
1592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
1593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
1594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear
1595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
1612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
1615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
1616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
1617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear
1618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
ARM GAS  /tmp/ccgn3NGF.s 			page 55


1630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
1635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
1636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
1640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
1641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
1642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
1643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(const TIM_TypeDef *TIMx, uint32_t Channel)
1652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
1656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
1661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
1665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
1666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
1667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
1672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
1674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
1678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
1682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
1683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
1684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccgn3NGF.s 			page 56


1687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
1689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
1691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
1695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
1699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel is supported by a timer instance.
1700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
1701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
1706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
1708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
1712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
1716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
1717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
1718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
1723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
1725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
1729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
1733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
1734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
1735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(const TIM_TypeDef *TIMx)
1739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
1741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  /tmp/ccgn3NGF.s 			page 57


1744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
1745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
1749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
1750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
1751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(const TIM_TypeDef *TIMx)
1755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
1757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
1761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
1765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
1766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
1767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(const TIM_TypeDef *TIMx)
1771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
1773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
1777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
1781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
1782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
1783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(const TIM_TypeDef *TIMx)
1787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
1789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
1796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure input channel.
1800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
ARM GAS  /tmp/ccgn3NGF.s 			page 58


1801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
1802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
1803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
1804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
1805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
1806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
1807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
1808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
1809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
1810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
1811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
1812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
1813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
1814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
1815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
1816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
1817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
1818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
1819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
1820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
1828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
1829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
1830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
1831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
1834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
1838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))       
1839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              << SHIFT_TAB_ICxx[iChannel]);
1840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
1841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
1842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the active input.
1846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
1847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
1848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
1849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
1850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
1857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
ARM GAS  /tmp/ccgn3NGF.s 			page 59


1858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
1859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
1860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
1863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
1867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current active input.
1871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
1872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
1873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
1874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
1875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
1883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
1884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
1885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(const TIM_TypeDef *TIMx, uint32_t Channel)
1887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
1891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
1895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
1896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
1897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
1898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
1899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
1906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
1913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
ARM GAS  /tmp/ccgn3NGF.s 			page 60


1915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
1917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
1921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
1922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
1923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
1924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
1925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(const TIM_TypeDef *TIMx, uint32_t Channel)
1938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
1942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the input filter duration.
1946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
1947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
1948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
1949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
1950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
1957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
1958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
1959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
1960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
1961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
1962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
1963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
1964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
1965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
1966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
1967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
1968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
1969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
1970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
1971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
ARM GAS  /tmp/ccgn3NGF.s 			page 61


1972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
1973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
1976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
1980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the input filter duration.
1984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
1985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
1986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
1987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
1988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
1996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
1997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
1998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
1999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(const TIM_TypeDef *TIMx, uint32_t Channel)
2013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
2023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
ARM GAS  /tmp/ccgn3NGF.s 			page 62


2029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
2058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(const TIM_TypeDef *TIMx, uint32_t Channel)
2070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
ARM GAS  /tmp/ccgn3NGF.s 			page 63


2086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
2091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
2104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * a timer instance provides an XOR input.
2106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(const TIM_TypeDef *TIMx)
2111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
2113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(const TIM_TypeDef *TIMx)
2127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(const TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccgn3NGF.s 			page 64


2143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(const TIM_TypeDef *TIMx)
2159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(const TIM_TypeDef *TIMx)
2175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 65


2200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
2205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(const TIM_TypeDef *TIMx)
2222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
2224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
2230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
2238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
2240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
2241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
2242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
2243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
2246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
2248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
2252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
2253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
2254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
2255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
ARM GAS  /tmp/ccgn3NGF.s 			page 66


2257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
2258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
2259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
2260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
2263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
2265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
2272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
2276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
2277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
2278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
2279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
2281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
2282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
2283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
2284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
2285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
2286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
2287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
2288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
2289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
 236              		.loc 3 2291 22 view .LVU57
 237              	.LBB115:
2292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 238              		.loc 3 2293 3 view .LVU58
 239 0042 6368     		ldr	r3, [r4, #4]
 240 0044 23F07003 		bic	r3, r3, #112
 241 0048 6360     		str	r3, [r4, #4]
 242              	.LVL11:
 243              		.loc 3 2293 3 is_stmt 0 view .LVU59
 244              	.LBE115:
 245              	.LBE114:
 112:Core/Src/tim.c **** 
 246              		.loc 1 112 4 is_stmt 1 view .LVU60
 247              	.LBB116:
 248              	.LBI116:
2294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
2298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
ARM GAS  /tmp/ccgn3NGF.s 			page 67


2300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
2301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
2303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
2304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
2305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
2306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
2307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
2310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
2312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
2316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
2319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
2321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
2322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
2323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
2324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
2325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
2326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
2327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
2328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
2329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
2332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
2334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
2338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
2341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
2345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
2351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
2354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 68


2357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
 249              		.loc 3 2357 22 view .LVU61
 250              	.LBB117:
2358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 251              		.loc 3 2359 3 view .LVU62
 252 004a A368     		ldr	r3, [r4, #8]
 253 004c 23F08003 		bic	r3, r3, #128
 254 0050 A360     		str	r3, [r4, #8]
 255              	.LVL12:
 256              		.loc 3 2359 3 is_stmt 0 view .LVU63
 257              	.LBE117:
 258              	.LBE116:
 114:Core/Src/tim.c **** 	LL_TIM_EnableIT_UPDATE(TimerMsDelay); //—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –æ—Ç —Ç–∞–π–º–µ—
 259              		.loc 1 114 2 is_stmt 1 view .LVU64
 260              	.LBB118:
 261              	.LBI118:
2360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
2364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
2366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
2367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(const TIM_TypeDef *TIMx)
2371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
2373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
2377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
2378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
2379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
2380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
2381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
2382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
2384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
2385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
2386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
2387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
2388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
2389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
2390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
2391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
2392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
2393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
2394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
2395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
2396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
2397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
2398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
2399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
ARM GAS  /tmp/ccgn3NGF.s 			page 69


2400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
2401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
2402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
2403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
2404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
2405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
2406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
2407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
2408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
2411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                       uint32_t ETRFilter)
2412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
2414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
2421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
2425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
2426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
2427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
2428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
2429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
2431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
2432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
2433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
2434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
2435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
2436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
2437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
2438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
2439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
2440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
2441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
2442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
2443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
2444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
2445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
2446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
2447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR
2448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
2449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
2450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
2451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
2452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
2453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
2454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
2455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
2456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
ARM GAS  /tmp/ccgn3NGF.s 			page 70


2457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
2458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
2459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
2460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
2461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
2462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
2463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
2464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
2465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
2466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
2467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
2470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
2472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
2479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
2483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
2484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a some timer inputs can be remapped.
2485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll  TIM2_OR     ITR1_RMP      LL_TIM_SetRemap\n
2486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM3_OR     ITR2_RMP      LL_TIM_SetRemap\n
2487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9_OR     TI1_RMP       LL_TIM_SetRemap\n
2488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9_OR     ITR1_RMP      LL_TIM_SetRemap\n
2489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    TI1_RMP       LL_TIM_SetRemap\n
2490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    ETR_RMP       LL_TIM_SetRemap\n
2491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    TI1_RMP_RI    LL_TIM_SetRemap\n
2492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    TI1_RMP       LL_TIM_SetRemap\n
2493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    ETR_RMP       LL_TIM_SetRemap\n
2494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    TI1_RMP_RI    LL_TIM_SetRemap
2495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Remap Remap params depends on the TIMx. Description available only
2497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
2498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         Otherwise see Reference Manual description of OR registers.
2499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
2501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM2: any combination of ITR1_RMP where
2503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR1_RMP can be one of the following values
2505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TIR1_RMP_TIM10_OC  (**)
2506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TIR1_RMP_TIM5_TGO  (**)
2507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM3: any combination of ITR2_RMP where
2509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR2_RMP can be one of the following values
2511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TIR2_RMP_TIM11_OC  (**)
2512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TIR2_RMP_TIM5_TGO  (**)
2513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
ARM GAS  /tmp/ccgn3NGF.s 			page 71


2514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9: any combination of TI1_RMP, ITR1_RMP where
2515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_TI1_RMP_LSE
2518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_TI1_RMP_GPIO
2519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR1_RMP can be one of the following values
2521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_ITR1_RMP_TIM3_TGO  (*)
2522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_ITR1_RMP_TOUCH_IO  (*)
2523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10: any combination of TI1_RMP, ETR_RMP, TI1_RMP_RI   where
2526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_GPIO
2529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_LSI
2530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_LSE
2531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_RTC
2532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
2534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_ETR_RMP_TIM9_TGO  (*)
2535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP_RI can be one of the following values
2537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_RI        (*)
2538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11: any combination of TI1_RMP, ETR_RMP, TI1_RMP_RI   where
2541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_MSI
2544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_HSE_RTC
2545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP
2546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
2548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_ETR_RMP_TIM9_TGO  (*)
2549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP_RI can be one of the following values
2551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_RI        (*)
2552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *           (*) value not available in all devices categories
2554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *           (**) register not available in all devices categories
2555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Option registers are available only for cat.3, cat.4 and cat.5  devices
2557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
2560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->OR, (Remap >> TIMx_OR_RMP_SHIFT), (Remap & TIMx_OR_RMP_MASK));
2562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_OCREF_Clear OCREF_Clear_Management
2569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  /tmp/ccgn3NGF.s 			page 72


2571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the OCREF clear input source
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The OCxREF signal of a given channel can be cleared when a high level is applied on the O
2574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes.
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note the ETR signal can be connected to the output of a comparator to be used for current hand
2576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR          OCCS                LL_TIM_SetOCRefClearInputSource
2577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  OCRefClearInputSource This parameter can be one of the following values:
2579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_OCREF_CLR
2580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_ETR
2581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOCRefClearInputSource(TIM_TypeDef *TIMx, uint32_t OCRefClearInputSou
2584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_OCCS, OCRefClearInputSource);
2586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
2592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
2596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
2597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
 262              		.loc 3 2600 22 view .LVU65
 263              	.LBB119:
2601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 264              		.loc 3 2602 3 view .LVU66
 265 0052 6FF00103 		mvn	r3, #1
 266 0056 2361     		str	r3, [r4, #16]
 267              	.LVL13:
 268              		.loc 3 2602 3 is_stmt 0 view .LVU67
 269              	.LBE119:
 270              	.LBE118:
 115:Core/Src/tim.c **** 	LL_TIM_SetCounter(TimerMsDelay, 0); //—Å–±—Ä–æ—Å —Å—á—ë—Ç–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
 271              		.loc 1 115 2 is_stmt 1 view .LVU68
 272              	.LBB120:
 273              	.LBI120:
2603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
2607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
2608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(const TIM_TypeDef *TIMx)
2612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
2614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
ARM GAS  /tmp/ccgn3NGF.s 			page 73


2615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 interrupt flag (CC1F).
2618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_ClearFlag_CC1
2619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1(TIM_TypeDef *TIMx)
2623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
2625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 interrupt flag (CC1F) is set (Capture/Compare 1 inte
2629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_IsActiveFlag_CC1
2630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1(const TIM_TypeDef *TIMx)
2634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF)) ? 1UL : 0UL);
2636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 interrupt flag (CC2F).
2640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_ClearFlag_CC2
2641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2(TIM_TypeDef *TIMx)
2645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2IF));
2647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 interrupt flag (CC2F) is set (Capture/Compare 2 inte
2651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_IsActiveFlag_CC2
2652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2(const TIM_TypeDef *TIMx)
2656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2IF) == (TIM_SR_CC2IF)) ? 1UL : 0UL);
2658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 interrupt flag (CC3F).
2662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_ClearFlag_CC3
2663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3(TIM_TypeDef *TIMx)
2667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3IF));
2669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  /tmp/ccgn3NGF.s 			page 74


2672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 interrupt flag (CC3F) is set (Capture/Compare 3 inte
2673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_IsActiveFlag_CC3
2674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3(const TIM_TypeDef *TIMx)
2678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3IF) == (TIM_SR_CC3IF)) ? 1UL : 0UL);
2680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 interrupt flag (CC4F).
2684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_ClearFlag_CC4
2685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4(TIM_TypeDef *TIMx)
2689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4IF));
2691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 interrupt flag (CC4F) is set (Capture/Compare 4 inte
2695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_IsActiveFlag_CC4
2696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4(const TIM_TypeDef *TIMx)
2700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4IF) == (TIM_SR_CC4IF)) ? 1UL : 0UL);
2702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the trigger interrupt flag (TIF).
2706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_ClearFlag_TRIG
2707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TRIG(TIM_TypeDef *TIMx)
2711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TIF));
2713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether trigger interrupt flag (TIF) is set (trigger interrupt is pending).
2717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_IsActiveFlag_TRIG
2718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TRIG(const TIM_TypeDef *TIMx)
2722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_TIF) == (TIM_SR_TIF)) ? 1UL : 0UL);
2724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 over-capture interrupt flag (CC1OF).
2728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_ClearFlag_CC1OVR
ARM GAS  /tmp/ccgn3NGF.s 			page 75


2729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1OVR(TIM_TypeDef *TIMx)
2733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1OF));
2735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 over-capture interrupt flag (CC1OF) is set
2739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         (Capture/Compare 1 interrupt is pending).
2740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_IsActiveFlag_CC1OVR
2741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1OVR(const TIM_TypeDef *TIMx)
2745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1OF) == (TIM_SR_CC1OF)) ? 1UL : 0UL);
2747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 over-capture interrupt flag (CC2OF).
2751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_ClearFlag_CC2OVR
2752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2OVR(TIM_TypeDef *TIMx)
2756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2OF));
2758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 over-capture interrupt flag (CC2OF) is set
2762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         (Capture/Compare 2 over-capture interrupt is pending).
2763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_IsActiveFlag_CC2OVR
2764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2OVR(const TIM_TypeDef *TIMx)
2768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2OF) == (TIM_SR_CC2OF)) ? 1UL : 0UL);
2770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 over-capture interrupt flag (CC3OF).
2774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_ClearFlag_CC3OVR
2775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3OVR(TIM_TypeDef *TIMx)
2779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3OF));
2781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 over-capture interrupt flag (CC3OF) is set
2785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         (Capture/Compare 3 over-capture interrupt is pending).
ARM GAS  /tmp/ccgn3NGF.s 			page 76


2786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_IsActiveFlag_CC3OVR
2787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3OVR(const TIM_TypeDef *TIMx)
2791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3OF) == (TIM_SR_CC3OF)) ? 1UL : 0UL);
2793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 over-capture interrupt flag (CC4OF).
2797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_ClearFlag_CC4OVR
2798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4OVR(TIM_TypeDef *TIMx)
2802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4OF));
2804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 over-capture interrupt flag (CC4OF) is set
2808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         (Capture/Compare 4 over-capture interrupt is pending).
2809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_IsActiveFlag_CC4OVR
2810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4OVR(const TIM_TypeDef *TIMx)
2814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4OF) == (TIM_SR_CC4OF)) ? 1UL : 0UL);
2816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_IT_Management IT-Management
2823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable update interrupt (UIE).
2827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_EnableIT_UPDATE
2828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
 274              		.loc 3 2831 22 view .LVU69
 275              	.LBB121:
2832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 276              		.loc 3 2833 3 view .LVU70
 277 0058 E368     		ldr	r3, [r4, #12]
 278 005a 43F00103 		orr	r3, r3, #1
 279 005e E360     		str	r3, [r4, #12]
 280              	.LVL14:
 281              		.loc 3 2833 3 is_stmt 0 view .LVU71
 282              	.LBE121:
ARM GAS  /tmp/ccgn3NGF.s 			page 77


 283              	.LBE120:
 116:Core/Src/tim.c **** 
 284              		.loc 1 116 2 is_stmt 1 view .LVU72
 285              	.LBB122:
 286              	.LBI122:
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 287              		.loc 3 1136 22 view .LVU73
 288              	.LBB123:
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 289              		.loc 3 1138 3 view .LVU74
 290 0060 6562     		str	r5, [r4, #36]
 291              	.LVL15:
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 292              		.loc 3 1138 3 is_stmt 0 view .LVU75
 293              	.LBE123:
 294              	.LBE122:
 118:Core/Src/tim.c ****   	NVIC_EnableIRQ(TimerMsDelay_IRQn ); //–≤–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ—Ç —Ç–∞–π–º–µ—Ä–
 295              		.loc 1 118 4 is_stmt 1 view .LVU76
 296              	.LBB124:
 297              	.LBI124:
 298              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /*
   8:Drivers/CMSIS/Include/core_cm3.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm3.h ****  *
  10:Drivers/CMSIS/Include/core_cm3.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm3.h ****  *
  12:Drivers/CMSIS/Include/core_cm3.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm3.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm3.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm3.h ****  *
  16:Drivers/CMSIS/Include/core_cm3.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm3.h ****  *
  18:Drivers/CMSIS/Include/core_cm3.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm3.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm3.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm3.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm3.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm3.h ****  */
  24:Drivers/CMSIS/Include/core_cm3.h **** 
  25:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm3.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm3.h **** #endif
  30:Drivers/CMSIS/Include/core_cm3.h **** 
  31:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm3.h **** 
  36:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
ARM GAS  /tmp/ccgn3NGF.s 			page 78


  37:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm3.h **** #endif
  39:Drivers/CMSIS/Include/core_cm3.h **** 
  40:Drivers/CMSIS/Include/core_cm3.h **** /**
  41:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm3.h **** 
  47:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm3.h ****  */
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h **** 
  55:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm3.h **** /**
  59:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  60:Drivers/CMSIS/Include/core_cm3.h ****   @{
  61:Drivers/CMSIS/Include/core_cm3.h ****  */
  62:Drivers/CMSIS/Include/core_cm3.h **** 
  63:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  66:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm3.h **** 
  71:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (3U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm3.h **** */
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm3.h **** 
  78:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm3.h **** 
  83:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm3.h **** 
  88:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm3.h **** 
  93:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
ARM GAS  /tmp/ccgn3NGF.s 			page 79


  94:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm3.h **** 
  98:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm3.h **** 
 103:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm3.h **** 
 108:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm3.h **** 
 113:Drivers/CMSIS/Include/core_cm3.h **** #endif
 114:Drivers/CMSIS/Include/core_cm3.h **** 
 115:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** 
 118:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm3.h **** }
 120:Drivers/CMSIS/Include/core_cm3.h **** #endif
 121:Drivers/CMSIS/Include/core_cm3.h **** 
 122:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm3.h **** 
 124:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm3.h **** 
 129:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm3.h **** #endif
 132:Drivers/CMSIS/Include/core_cm3.h **** 
 133:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 136:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 137:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm3.h **** 
 140:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 141:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 142:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm3.h **** 
 145:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 146:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          3U
 147:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm3.h **** 
 150:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
ARM GAS  /tmp/ccgn3NGF.s 			page 80


 151:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 152:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 153:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm3.h **** #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 157:Drivers/CMSIS/Include/core_cm3.h **** /**
 158:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 159:Drivers/CMSIS/Include/core_cm3.h **** 
 160:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 161:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 162:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 163:Drivers/CMSIS/Include/core_cm3.h **** */
 164:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 165:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 166:Drivers/CMSIS/Include/core_cm3.h **** #else
 167:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 170:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 173:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 174:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 175:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 178:Drivers/CMSIS/Include/core_cm3.h **** 
 179:Drivers/CMSIS/Include/core_cm3.h **** 
 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 182:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 183:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 184:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 185:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 186:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 187:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 188:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 189:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 190:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 191:Drivers/CMSIS/Include/core_cm3.h **** /**
 192:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 193:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 194:Drivers/CMSIS/Include/core_cm3.h **** */
 195:Drivers/CMSIS/Include/core_cm3.h **** 
 196:Drivers/CMSIS/Include/core_cm3.h **** /**
 197:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 198:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 199:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 200:Drivers/CMSIS/Include/core_cm3.h ****   @{
 201:Drivers/CMSIS/Include/core_cm3.h ****  */
 202:Drivers/CMSIS/Include/core_cm3.h **** 
 203:Drivers/CMSIS/Include/core_cm3.h **** /**
 204:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 205:Drivers/CMSIS/Include/core_cm3.h ****  */
 206:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 207:Drivers/CMSIS/Include/core_cm3.h **** {
ARM GAS  /tmp/ccgn3NGF.s 			page 81


 208:Drivers/CMSIS/Include/core_cm3.h ****   struct
 209:Drivers/CMSIS/Include/core_cm3.h ****   {
 210:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 211:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 212:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 213:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 214:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 215:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 216:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 217:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 218:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 222:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm3.h **** 
 224:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 225:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 228:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 229:Drivers/CMSIS/Include/core_cm3.h **** 
 230:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 231:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 232:Drivers/CMSIS/Include/core_cm3.h **** 
 233:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 234:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 235:Drivers/CMSIS/Include/core_cm3.h **** 
 236:Drivers/CMSIS/Include/core_cm3.h **** 
 237:Drivers/CMSIS/Include/core_cm3.h **** /**
 238:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:Drivers/CMSIS/Include/core_cm3.h ****  */
 240:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 241:Drivers/CMSIS/Include/core_cm3.h **** {
 242:Drivers/CMSIS/Include/core_cm3.h ****   struct
 243:Drivers/CMSIS/Include/core_cm3.h ****   {
 244:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 247:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 249:Drivers/CMSIS/Include/core_cm3.h **** 
 250:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 251:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:Drivers/CMSIS/Include/core_cm3.h **** 
 254:Drivers/CMSIS/Include/core_cm3.h **** 
 255:Drivers/CMSIS/Include/core_cm3.h **** /**
 256:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:Drivers/CMSIS/Include/core_cm3.h ****  */
 258:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm3.h **** {
 260:Drivers/CMSIS/Include/core_cm3.h ****   struct
 261:Drivers/CMSIS/Include/core_cm3.h ****   {
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 264:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
ARM GAS  /tmp/ccgn3NGF.s 			page 82


 265:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:8;               /*!< bit: 16..23  Reserved */
 266:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 267:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 268:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 269:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 270:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 271:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 272:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 273:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 274:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 275:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 276:Drivers/CMSIS/Include/core_cm3.h **** 
 277:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 278:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 285:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 286:Drivers/CMSIS/Include/core_cm3.h **** 
 287:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 288:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 289:Drivers/CMSIS/Include/core_cm3.h **** 
 290:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 291:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 292:Drivers/CMSIS/Include/core_cm3.h **** 
 293:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 294:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 295:Drivers/CMSIS/Include/core_cm3.h **** 
 296:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 297:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 298:Drivers/CMSIS/Include/core_cm3.h **** 
 299:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 303:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 304:Drivers/CMSIS/Include/core_cm3.h **** 
 305:Drivers/CMSIS/Include/core_cm3.h **** 
 306:Drivers/CMSIS/Include/core_cm3.h **** /**
 307:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 308:Drivers/CMSIS/Include/core_cm3.h ****  */
 309:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 310:Drivers/CMSIS/Include/core_cm3.h **** {
 311:Drivers/CMSIS/Include/core_cm3.h ****   struct
 312:Drivers/CMSIS/Include/core_cm3.h ****   {
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 316:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 317:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 318:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 319:Drivers/CMSIS/Include/core_cm3.h **** 
 320:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 321:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
ARM GAS  /tmp/ccgn3NGF.s 			page 83


 322:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 323:Drivers/CMSIS/Include/core_cm3.h **** 
 324:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 325:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 328:Drivers/CMSIS/Include/core_cm3.h **** 
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** /**
 331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 334:Drivers/CMSIS/Include/core_cm3.h ****   @{
 335:Drivers/CMSIS/Include/core_cm3.h ****  */
 336:Drivers/CMSIS/Include/core_cm3.h **** 
 337:Drivers/CMSIS/Include/core_cm3.h **** /**
 338:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 339:Drivers/CMSIS/Include/core_cm3.h ****  */
 340:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 341:Drivers/CMSIS/Include/core_cm3.h **** {
 342:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 343:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 344:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 345:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 346:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 347:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 348:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 349:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 350:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 351:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 352:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 353:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 354:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 355:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 356:Drivers/CMSIS/Include/core_cm3.h **** 
 357:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 358:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 359:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 360:Drivers/CMSIS/Include/core_cm3.h **** 
 361:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** 
 364:Drivers/CMSIS/Include/core_cm3.h **** /**
 365:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 366:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 367:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 368:Drivers/CMSIS/Include/core_cm3.h ****   @{
 369:Drivers/CMSIS/Include/core_cm3.h ****  */
 370:Drivers/CMSIS/Include/core_cm3.h **** 
 371:Drivers/CMSIS/Include/core_cm3.h **** /**
 372:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 373:Drivers/CMSIS/Include/core_cm3.h ****  */
 374:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 375:Drivers/CMSIS/Include/core_cm3.h **** {
 376:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 377:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 378:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
ARM GAS  /tmp/ccgn3NGF.s 			page 84


 379:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 380:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 381:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 382:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 383:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 384:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 388:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 390:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 392:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 395:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 396:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 397:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 398:Drivers/CMSIS/Include/core_cm3.h **** 
 399:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 400:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm3.h **** 
 403:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm3.h **** 
 409:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm3.h **** 
 412:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm3.h **** 
 415:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 416:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 418:Drivers/CMSIS/Include/core_cm3.h **** 
 419:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm3.h **** 
 422:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm3.h **** 
 425:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm3.h **** 
 428:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm3.h **** 
 431:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm3.h **** 
 434:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
ARM GAS  /tmp/ccgn3NGF.s 			page 85


 436:Drivers/CMSIS/Include/core_cm3.h **** 
 437:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm3.h **** 
 440:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm3.h **** 
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 447:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV < 0x0201U)                   /* core r2p1 */
 448:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** 
 451:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #else
 454:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #endif
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm3.h **** 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm3.h **** 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm3.h **** 
 490:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
ARM GAS  /tmp/ccgn3NGF.s 			page 86


 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** 
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** 
 500:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm3.h **** 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm3.h **** 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm3.h **** 
 509:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 510:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** 
 513:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** 
 516:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** 
 519:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** 
 522:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm3.h **** 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm3.h **** 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm3.h **** 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm3.h **** 
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
ARM GAS  /tmp/ccgn3NGF.s 			page 87


 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm3.h **** 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm3.h **** 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm3.h **** 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm3.h **** 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm3.h **** 
 578:Drivers/CMSIS/Include/core_cm3.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 579:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** 
 582:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** 
 585:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** 
 588:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** 
 591:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** 
 594:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm3.h **** 
 597:Drivers/CMSIS/Include/core_cm3.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 598:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** 
 601:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** 
 604:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 88


 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm3.h **** 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm3.h **** 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm3.h **** 
 616:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm3.h **** 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm3.h **** 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm3.h **** 
 626:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 627:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** 
 630:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm3.h **** 
 636:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm3.h **** 
 639:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm3.h **** 
 642:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 643:Drivers/CMSIS/Include/core_cm3.h **** 
 644:Drivers/CMSIS/Include/core_cm3.h **** 
 645:Drivers/CMSIS/Include/core_cm3.h **** /**
 646:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 647:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 648:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 649:Drivers/CMSIS/Include/core_cm3.h ****   @{
 650:Drivers/CMSIS/Include/core_cm3.h ****  */
 651:Drivers/CMSIS/Include/core_cm3.h **** 
 652:Drivers/CMSIS/Include/core_cm3.h **** /**
 653:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 654:Drivers/CMSIS/Include/core_cm3.h ****  */
 655:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 656:Drivers/CMSIS/Include/core_cm3.h **** {
 657:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 658:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 659:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV >= 0x200U)
 660:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 661:Drivers/CMSIS/Include/core_cm3.h **** #else
 662:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 663:Drivers/CMSIS/Include/core_cm3.h **** #endif
ARM GAS  /tmp/ccgn3NGF.s 			page 89


 664:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 665:Drivers/CMSIS/Include/core_cm3.h **** 
 666:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 673:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 674:Drivers/CMSIS/Include/core_cm3.h **** 
 675:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 676:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 677:Drivers/CMSIS/Include/core_cm3.h **** 
 678:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 679:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 680:Drivers/CMSIS/Include/core_cm3.h **** 
 681:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 682:Drivers/CMSIS/Include/core_cm3.h **** 
 683:Drivers/CMSIS/Include/core_cm3.h **** 
 684:Drivers/CMSIS/Include/core_cm3.h **** /**
 685:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 686:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 687:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 688:Drivers/CMSIS/Include/core_cm3.h ****   @{
 689:Drivers/CMSIS/Include/core_cm3.h ****  */
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /**
 692:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 693:Drivers/CMSIS/Include/core_cm3.h ****  */
 694:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 695:Drivers/CMSIS/Include/core_cm3.h **** {
 696:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 697:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 698:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 699:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 700:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 701:Drivers/CMSIS/Include/core_cm3.h **** 
 702:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 703:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 704:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 705:Drivers/CMSIS/Include/core_cm3.h **** 
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 708:Drivers/CMSIS/Include/core_cm3.h **** 
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** 
 715:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
ARM GAS  /tmp/ccgn3NGF.s 			page 90


 721:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 722:Drivers/CMSIS/Include/core_cm3.h **** 
 723:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 724:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 725:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 726:Drivers/CMSIS/Include/core_cm3.h **** 
 727:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 728:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 729:Drivers/CMSIS/Include/core_cm3.h **** 
 730:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 731:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 732:Drivers/CMSIS/Include/core_cm3.h **** 
 733:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 734:Drivers/CMSIS/Include/core_cm3.h **** 
 735:Drivers/CMSIS/Include/core_cm3.h **** 
 736:Drivers/CMSIS/Include/core_cm3.h **** /**
 737:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 738:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 739:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 740:Drivers/CMSIS/Include/core_cm3.h ****   @{
 741:Drivers/CMSIS/Include/core_cm3.h ****  */
 742:Drivers/CMSIS/Include/core_cm3.h **** 
 743:Drivers/CMSIS/Include/core_cm3.h **** /**
 744:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 745:Drivers/CMSIS/Include/core_cm3.h ****  */
 746:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 747:Drivers/CMSIS/Include/core_cm3.h **** {
 748:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 749:Drivers/CMSIS/Include/core_cm3.h ****   {
 750:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 751:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 752:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 753:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 754:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 758:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 760:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 761:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 764:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 765:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 767:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 770:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 771:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 772:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 773:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 774:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 775:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 776:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 777:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
ARM GAS  /tmp/ccgn3NGF.s 			page 91


 778:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 779:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 780:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 785:Drivers/CMSIS/Include/core_cm3.h **** 
 786:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 787:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** 
 790:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** 
 793:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** 
 796:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** 
 799:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** 
 802:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 803:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 804:Drivers/CMSIS/Include/core_cm3.h **** 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 807:Drivers/CMSIS/Include/core_cm3.h **** 
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** 
 814:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 815:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** 
 818:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 825:Drivers/CMSIS/Include/core_cm3.h **** 
 826:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 827:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 828:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 829:Drivers/CMSIS/Include/core_cm3.h **** 
 830:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 831:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 832:Drivers/CMSIS/Include/core_cm3.h **** 
 833:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
ARM GAS  /tmp/ccgn3NGF.s 			page 92


 835:Drivers/CMSIS/Include/core_cm3.h **** 
 836:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 837:Drivers/CMSIS/Include/core_cm3.h **** 
 838:Drivers/CMSIS/Include/core_cm3.h **** 
 839:Drivers/CMSIS/Include/core_cm3.h **** /**
 840:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 841:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 842:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 843:Drivers/CMSIS/Include/core_cm3.h ****   @{
 844:Drivers/CMSIS/Include/core_cm3.h ****  */
 845:Drivers/CMSIS/Include/core_cm3.h **** 
 846:Drivers/CMSIS/Include/core_cm3.h **** /**
 847:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 848:Drivers/CMSIS/Include/core_cm3.h ****  */
 849:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 850:Drivers/CMSIS/Include/core_cm3.h **** {
 851:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 855:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 859:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 862:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 863:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 864:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 865:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 866:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 867:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 868:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 869:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 870:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 871:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 872:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 873:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 874:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 875:Drivers/CMSIS/Include/core_cm3.h **** 
 876:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 877:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** 
 880:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** 
 883:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** 
 886:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** 
 889:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 93


 892:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** 
 895:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** 
 898:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** 
 901:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** 
 904:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** 
 907:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** 
 910:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** 
 913:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** 
 916:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** 
 919:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 920:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 921:Drivers/CMSIS/Include/core_cm3.h **** 
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 923:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 924:Drivers/CMSIS/Include/core_cm3.h **** 
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 930:Drivers/CMSIS/Include/core_cm3.h **** 
 931:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 932:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 934:Drivers/CMSIS/Include/core_cm3.h **** 
 935:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 936:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 938:Drivers/CMSIS/Include/core_cm3.h **** 
 939:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 940:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 942:Drivers/CMSIS/Include/core_cm3.h **** 
 943:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 944:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 946:Drivers/CMSIS/Include/core_cm3.h **** 
 947:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
ARM GAS  /tmp/ccgn3NGF.s 			page 94


 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 953:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 954:Drivers/CMSIS/Include/core_cm3.h **** 
 955:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 956:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** 
 959:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** 
 962:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** 
 965:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** 
 968:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** 
 971:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 972:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 975:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 976:Drivers/CMSIS/Include/core_cm3.h **** 
 977:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 978:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 979:Drivers/CMSIS/Include/core_cm3.h **** 
 980:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 981:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 982:Drivers/CMSIS/Include/core_cm3.h **** 
 983:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 984:Drivers/CMSIS/Include/core_cm3.h **** 
 985:Drivers/CMSIS/Include/core_cm3.h **** 
 986:Drivers/CMSIS/Include/core_cm3.h **** /**
 987:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 988:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 989:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 990:Drivers/CMSIS/Include/core_cm3.h ****   @{
 991:Drivers/CMSIS/Include/core_cm3.h ****  */
 992:Drivers/CMSIS/Include/core_cm3.h **** 
 993:Drivers/CMSIS/Include/core_cm3.h **** /**
 994:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 995:Drivers/CMSIS/Include/core_cm3.h ****  */
 996:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 997:Drivers/CMSIS/Include/core_cm3.h **** {
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1000:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
1001:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1002:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1004:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
1005:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
ARM GAS  /tmp/ccgn3NGF.s 			page 95


1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1011:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1012:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1013:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1014:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1015:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1016:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1017:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1018:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1019:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1020:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1021:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1022:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1023:Drivers/CMSIS/Include/core_cm3.h **** 
1024:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1030:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1031:Drivers/CMSIS/Include/core_cm3.h **** 
1032:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1033:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1034:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1035:Drivers/CMSIS/Include/core_cm3.h **** 
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1037:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1038:Drivers/CMSIS/Include/core_cm3.h **** 
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1040:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1041:Drivers/CMSIS/Include/core_cm3.h **** 
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1054:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1055:Drivers/CMSIS/Include/core_cm3.h **** 
1056:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1057:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** 
1060:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 96


1063:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** 
1066:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1067:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1068:Drivers/CMSIS/Include/core_cm3.h **** 
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1070:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1071:Drivers/CMSIS/Include/core_cm3.h **** 
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1080:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1081:Drivers/CMSIS/Include/core_cm3.h **** 
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1083:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1084:Drivers/CMSIS/Include/core_cm3.h **** 
1085:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** 
1089:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** 
1092:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1093:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:Drivers/CMSIS/Include/core_cm3.h **** 
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1096:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:Drivers/CMSIS/Include/core_cm3.h **** 
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:Drivers/CMSIS/Include/core_cm3.h **** 
1104:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:Drivers/CMSIS/Include/core_cm3.h **** 
1107:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1116:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1117:Drivers/CMSIS/Include/core_cm3.h **** 
1118:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1119:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
ARM GAS  /tmp/ccgn3NGF.s 			page 97


1120:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1121:Drivers/CMSIS/Include/core_cm3.h **** 
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1124:Drivers/CMSIS/Include/core_cm3.h **** 
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1127:Drivers/CMSIS/Include/core_cm3.h **** 
1128:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1129:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1130:Drivers/CMSIS/Include/core_cm3.h **** 
1131:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1132:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1133:Drivers/CMSIS/Include/core_cm3.h **** 
1134:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1135:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1136:Drivers/CMSIS/Include/core_cm3.h **** 
1137:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1138:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1139:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:Drivers/CMSIS/Include/core_cm3.h **** 
1141:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1142:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1143:Drivers/CMSIS/Include/core_cm3.h **** 
1144:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1145:Drivers/CMSIS/Include/core_cm3.h **** 
1146:Drivers/CMSIS/Include/core_cm3.h **** 
1147:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1148:Drivers/CMSIS/Include/core_cm3.h **** /**
1149:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1150:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1151:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1152:Drivers/CMSIS/Include/core_cm3.h ****   @{
1153:Drivers/CMSIS/Include/core_cm3.h ****  */
1154:Drivers/CMSIS/Include/core_cm3.h **** 
1155:Drivers/CMSIS/Include/core_cm3.h **** /**
1156:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1157:Drivers/CMSIS/Include/core_cm3.h ****  */
1158:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1159:Drivers/CMSIS/Include/core_cm3.h **** {
1160:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1161:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1162:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1163:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1164:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1165:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1166:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1167:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1168:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1169:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1170:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1171:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_RALIASES                  4U
1174:Drivers/CMSIS/Include/core_cm3.h **** 
1175:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1176:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
ARM GAS  /tmp/ccgn3NGF.s 			page 98


1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** 
1179:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1180:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1181:Drivers/CMSIS/Include/core_cm3.h **** 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1184:Drivers/CMSIS/Include/core_cm3.h **** 
1185:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1186:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** 
1189:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1190:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1191:Drivers/CMSIS/Include/core_cm3.h **** 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1194:Drivers/CMSIS/Include/core_cm3.h **** 
1195:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1196:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** 
1199:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1212:Drivers/CMSIS/Include/core_cm3.h **** 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1215:Drivers/CMSIS/Include/core_cm3.h **** 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1218:Drivers/CMSIS/Include/core_cm3.h **** 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1221:Drivers/CMSIS/Include/core_cm3.h **** 
1222:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm3.h **** 
1228:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm3.h **** 
1231:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 99


1234:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm3.h **** 
1237:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm3.h **** 
1240:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1241:Drivers/CMSIS/Include/core_cm3.h **** #endif
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** 
1244:Drivers/CMSIS/Include/core_cm3.h **** /**
1245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1247:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1248:Drivers/CMSIS/Include/core_cm3.h ****   @{
1249:Drivers/CMSIS/Include/core_cm3.h ****  */
1250:Drivers/CMSIS/Include/core_cm3.h **** 
1251:Drivers/CMSIS/Include/core_cm3.h **** /**
1252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1253:Drivers/CMSIS/Include/core_cm3.h ****  */
1254:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1255:Drivers/CMSIS/Include/core_cm3.h **** {
1256:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1257:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1258:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1259:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1260:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1265:Drivers/CMSIS/Include/core_cm3.h **** 
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1268:Drivers/CMSIS/Include/core_cm3.h **** 
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1271:Drivers/CMSIS/Include/core_cm3.h **** 
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1274:Drivers/CMSIS/Include/core_cm3.h **** 
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1277:Drivers/CMSIS/Include/core_cm3.h **** 
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1280:Drivers/CMSIS/Include/core_cm3.h **** 
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** 
1290:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
ARM GAS  /tmp/ccgn3NGF.s 			page 100


1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** 
1293:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** 
1296:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** 
1299:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1309:Drivers/CMSIS/Include/core_cm3.h **** 
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1312:Drivers/CMSIS/Include/core_cm3.h **** 
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1315:Drivers/CMSIS/Include/core_cm3.h **** 
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1318:Drivers/CMSIS/Include/core_cm3.h **** 
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1321:Drivers/CMSIS/Include/core_cm3.h **** 
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1324:Drivers/CMSIS/Include/core_cm3.h **** 
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1327:Drivers/CMSIS/Include/core_cm3.h **** 
1328:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1329:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1330:Drivers/CMSIS/Include/core_cm3.h **** 
1331:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1332:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1333:Drivers/CMSIS/Include/core_cm3.h **** 
1334:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1335:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1338:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1339:Drivers/CMSIS/Include/core_cm3.h **** 
1340:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1341:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1342:Drivers/CMSIS/Include/core_cm3.h **** 
1343:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1344:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1345:Drivers/CMSIS/Include/core_cm3.h **** 
1346:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1347:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 101


1348:Drivers/CMSIS/Include/core_cm3.h **** 
1349:Drivers/CMSIS/Include/core_cm3.h **** /**
1350:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1351:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1352:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1353:Drivers/CMSIS/Include/core_cm3.h ****   @{
1354:Drivers/CMSIS/Include/core_cm3.h ****  */
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1358:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1359:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1360:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1361:Drivers/CMSIS/Include/core_cm3.h **** */
1362:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1363:Drivers/CMSIS/Include/core_cm3.h **** 
1364:Drivers/CMSIS/Include/core_cm3.h **** /**
1365:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1366:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1367:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1368:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1369:Drivers/CMSIS/Include/core_cm3.h **** */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1371:Drivers/CMSIS/Include/core_cm3.h **** 
1372:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1373:Drivers/CMSIS/Include/core_cm3.h **** 
1374:Drivers/CMSIS/Include/core_cm3.h **** 
1375:Drivers/CMSIS/Include/core_cm3.h **** /**
1376:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1377:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1378:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1379:Drivers/CMSIS/Include/core_cm3.h ****   @{
1380:Drivers/CMSIS/Include/core_cm3.h ****  */
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Core Hardware */
1383:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1384:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1385:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1386:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1387:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1388:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1389:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1390:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1391:Drivers/CMSIS/Include/core_cm3.h **** 
1392:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1393:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1394:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1395:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1396:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1397:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1398:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1399:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1400:Drivers/CMSIS/Include/core_cm3.h **** 
1401:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1402:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1403:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1404:Drivers/CMSIS/Include/core_cm3.h **** #endif
ARM GAS  /tmp/ccgn3NGF.s 			page 102


1405:Drivers/CMSIS/Include/core_cm3.h **** 
1406:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1407:Drivers/CMSIS/Include/core_cm3.h **** 
1408:Drivers/CMSIS/Include/core_cm3.h **** 
1409:Drivers/CMSIS/Include/core_cm3.h **** 
1410:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1411:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1412:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1413:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1414:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1415:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1416:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1417:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1418:Drivers/CMSIS/Include/core_cm3.h **** /**
1419:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1420:Drivers/CMSIS/Include/core_cm3.h **** */
1421:Drivers/CMSIS/Include/core_cm3.h **** 
1422:Drivers/CMSIS/Include/core_cm3.h **** 
1423:Drivers/CMSIS/Include/core_cm3.h **** 
1424:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1425:Drivers/CMSIS/Include/core_cm3.h **** /**
1426:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1427:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1428:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1429:Drivers/CMSIS/Include/core_cm3.h ****   @{
1430:Drivers/CMSIS/Include/core_cm3.h ****  */
1431:Drivers/CMSIS/Include/core_cm3.h **** 
1432:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_NVIC_VIRTUAL
1433:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1434:Drivers/CMSIS/Include/core_cm3.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1435:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1436:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1437:Drivers/CMSIS/Include/core_cm3.h **** #else
1438:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1439:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1440:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1441:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1442:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1443:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1444:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1445:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1446:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetActive              __NVIC_GetActive
1447:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1448:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1449:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1450:Drivers/CMSIS/Include/core_cm3.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1451:Drivers/CMSIS/Include/core_cm3.h **** 
1452:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1453:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1454:Drivers/CMSIS/Include/core_cm3.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1455:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1456:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1457:Drivers/CMSIS/Include/core_cm3.h **** #else
1458:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetVector              __NVIC_SetVector
1459:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetVector              __NVIC_GetVector
1460:Drivers/CMSIS/Include/core_cm3.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1461:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 103


1462:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_USER_IRQ_OFFSET          16
1463:Drivers/CMSIS/Include/core_cm3.h **** 
1464:Drivers/CMSIS/Include/core_cm3.h **** 
1465:Drivers/CMSIS/Include/core_cm3.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1466:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1467:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1468:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1469:Drivers/CMSIS/Include/core_cm3.h **** 
1470:Drivers/CMSIS/Include/core_cm3.h **** 
1471:Drivers/CMSIS/Include/core_cm3.h **** /**
1472:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1473:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1474:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1475:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1476:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1477:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1478:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1479:Drivers/CMSIS/Include/core_cm3.h ****  */
1480:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1481:Drivers/CMSIS/Include/core_cm3.h **** {
1482:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1483:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1484:Drivers/CMSIS/Include/core_cm3.h **** 
1485:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1486:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1487:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1488:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1489:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key a
1490:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1491:Drivers/CMSIS/Include/core_cm3.h **** }
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** 
1494:Drivers/CMSIS/Include/core_cm3.h **** /**
1495:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1496:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1497:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1498:Drivers/CMSIS/Include/core_cm3.h ****  */
1499:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 299              		.loc 4 1499 26 view .LVU77
 300              	.LBB125:
1500:Drivers/CMSIS/Include/core_cm3.h **** {
1501:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 301              		.loc 4 1501 3 view .LVU78
 302              		.loc 4 1501 26 is_stmt 0 view .LVU79
 303 0062 154B     		ldr	r3, .L18+8
 304 0064 DA68     		ldr	r2, [r3, #12]
 305              		.loc 4 1501 11 view .LVU80
 306 0066 C2F30222 		ubfx	r2, r2, #8, #3
 307              	.LVL16:
 308              		.loc 4 1501 11 view .LVU81
 309              	.LBE125:
 310              	.LBE124:
 311              	.LBB126:
 312              	.LBI126:
1502:Drivers/CMSIS/Include/core_cm3.h **** }
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccgn3NGF.s 			page 104


1505:Drivers/CMSIS/Include/core_cm3.h **** /**
1506:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable Interrupt
1507:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1514:Drivers/CMSIS/Include/core_cm3.h ****   {
1515:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1516:Drivers/CMSIS/Include/core_cm3.h ****   }
1517:Drivers/CMSIS/Include/core_cm3.h **** }
1518:Drivers/CMSIS/Include/core_cm3.h **** 
1519:Drivers/CMSIS/Include/core_cm3.h **** 
1520:Drivers/CMSIS/Include/core_cm3.h **** /**
1521:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Enable status
1522:Drivers/CMSIS/Include/core_cm3.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1523:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1524:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt is not enabled.
1525:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt is enabled.
1526:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1527:Drivers/CMSIS/Include/core_cm3.h ****  */
1528:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1529:Drivers/CMSIS/Include/core_cm3.h **** {
1530:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h ****   else
1535:Drivers/CMSIS/Include/core_cm3.h ****   {
1536:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1537:Drivers/CMSIS/Include/core_cm3.h ****   }
1538:Drivers/CMSIS/Include/core_cm3.h **** }
1539:Drivers/CMSIS/Include/core_cm3.h **** 
1540:Drivers/CMSIS/Include/core_cm3.h **** 
1541:Drivers/CMSIS/Include/core_cm3.h **** /**
1542:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable Interrupt
1543:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1544:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1545:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1546:Drivers/CMSIS/Include/core_cm3.h ****  */
1547:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1548:Drivers/CMSIS/Include/core_cm3.h **** {
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1552:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
1553:Drivers/CMSIS/Include/core_cm3.h ****     __ISB();
1554:Drivers/CMSIS/Include/core_cm3.h ****   }
1555:Drivers/CMSIS/Include/core_cm3.h **** }
1556:Drivers/CMSIS/Include/core_cm3.h **** 
1557:Drivers/CMSIS/Include/core_cm3.h **** 
1558:Drivers/CMSIS/Include/core_cm3.h **** /**
1559:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1560:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1561:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  /tmp/ccgn3NGF.s 			page 105


1562:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1563:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1564:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1565:Drivers/CMSIS/Include/core_cm3.h ****  */
1566:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1567:Drivers/CMSIS/Include/core_cm3.h **** {
1568:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1569:Drivers/CMSIS/Include/core_cm3.h ****   {
1570:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1571:Drivers/CMSIS/Include/core_cm3.h ****   }
1572:Drivers/CMSIS/Include/core_cm3.h ****   else
1573:Drivers/CMSIS/Include/core_cm3.h ****   {
1574:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1575:Drivers/CMSIS/Include/core_cm3.h ****   }
1576:Drivers/CMSIS/Include/core_cm3.h **** }
1577:Drivers/CMSIS/Include/core_cm3.h **** 
1578:Drivers/CMSIS/Include/core_cm3.h **** 
1579:Drivers/CMSIS/Include/core_cm3.h **** /**
1580:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1581:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1582:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1583:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1584:Drivers/CMSIS/Include/core_cm3.h ****  */
1585:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1586:Drivers/CMSIS/Include/core_cm3.h **** {
1587:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1588:Drivers/CMSIS/Include/core_cm3.h ****   {
1589:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1590:Drivers/CMSIS/Include/core_cm3.h ****   }
1591:Drivers/CMSIS/Include/core_cm3.h **** }
1592:Drivers/CMSIS/Include/core_cm3.h **** 
1593:Drivers/CMSIS/Include/core_cm3.h **** 
1594:Drivers/CMSIS/Include/core_cm3.h **** /**
1595:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1596:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1597:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1598:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1599:Drivers/CMSIS/Include/core_cm3.h ****  */
1600:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1601:Drivers/CMSIS/Include/core_cm3.h **** {
1602:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1603:Drivers/CMSIS/Include/core_cm3.h ****   {
1604:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1605:Drivers/CMSIS/Include/core_cm3.h ****   }
1606:Drivers/CMSIS/Include/core_cm3.h **** }
1607:Drivers/CMSIS/Include/core_cm3.h **** 
1608:Drivers/CMSIS/Include/core_cm3.h **** 
1609:Drivers/CMSIS/Include/core_cm3.h **** /**
1610:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1611:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1612:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1613:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1614:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1615:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1616:Drivers/CMSIS/Include/core_cm3.h ****  */
1617:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1618:Drivers/CMSIS/Include/core_cm3.h **** {
ARM GAS  /tmp/ccgn3NGF.s 			page 106


1619:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1620:Drivers/CMSIS/Include/core_cm3.h ****   {
1621:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1622:Drivers/CMSIS/Include/core_cm3.h ****   }
1623:Drivers/CMSIS/Include/core_cm3.h ****   else
1624:Drivers/CMSIS/Include/core_cm3.h ****   {
1625:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1626:Drivers/CMSIS/Include/core_cm3.h ****   }
1627:Drivers/CMSIS/Include/core_cm3.h **** }
1628:Drivers/CMSIS/Include/core_cm3.h **** 
1629:Drivers/CMSIS/Include/core_cm3.h **** 
1630:Drivers/CMSIS/Include/core_cm3.h **** /**
1631:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1632:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1633:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1634:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1635:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1636:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1637:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every processor exception.
1638:Drivers/CMSIS/Include/core_cm3.h ****  */
1639:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1640:Drivers/CMSIS/Include/core_cm3.h **** {
1641:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1642:Drivers/CMSIS/Include/core_cm3.h ****   {
1643:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1644:Drivers/CMSIS/Include/core_cm3.h ****   }
1645:Drivers/CMSIS/Include/core_cm3.h ****   else
1646:Drivers/CMSIS/Include/core_cm3.h ****   {
1647:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1648:Drivers/CMSIS/Include/core_cm3.h ****   }
1649:Drivers/CMSIS/Include/core_cm3.h **** }
1650:Drivers/CMSIS/Include/core_cm3.h **** 
1651:Drivers/CMSIS/Include/core_cm3.h **** 
1652:Drivers/CMSIS/Include/core_cm3.h **** /**
1653:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1654:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1655:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1656:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1657:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1658:Drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1659:Drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1660:Drivers/CMSIS/Include/core_cm3.h ****  */
1661:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1662:Drivers/CMSIS/Include/core_cm3.h **** {
1663:Drivers/CMSIS/Include/core_cm3.h **** 
1664:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1665:Drivers/CMSIS/Include/core_cm3.h ****   {
1666:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1667:Drivers/CMSIS/Include/core_cm3.h ****   }
1668:Drivers/CMSIS/Include/core_cm3.h ****   else
1669:Drivers/CMSIS/Include/core_cm3.h ****   {
1670:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1671:Drivers/CMSIS/Include/core_cm3.h ****   }
1672:Drivers/CMSIS/Include/core_cm3.h **** }
1673:Drivers/CMSIS/Include/core_cm3.h **** 
1674:Drivers/CMSIS/Include/core_cm3.h **** 
1675:Drivers/CMSIS/Include/core_cm3.h **** /**
ARM GAS  /tmp/ccgn3NGF.s 			page 107


1676:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1677:Drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1678:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1679:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1680:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1681:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1682:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1683:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1684:Drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1685:Drivers/CMSIS/Include/core_cm3.h ****  */
1686:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 313              		.loc 4 1686 26 is_stmt 1 view .LVU82
 314              	.LBB127:
1687:Drivers/CMSIS/Include/core_cm3.h **** {
1688:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 315              		.loc 4 1688 3 view .LVU83
1689:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
 316              		.loc 4 1689 3 view .LVU84
1690:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
 317              		.loc 4 1690 3 view .LVU85
1691:Drivers/CMSIS/Include/core_cm3.h **** 
1692:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 318              		.loc 4 1692 3 view .LVU86
 319              		.loc 4 1692 31 is_stmt 0 view .LVU87
 320 006a C2F10703 		rsb	r3, r2, #7
 321              		.loc 4 1692 23 view .LVU88
 322 006e 042B     		cmp	r3, #4
 323 0070 28BF     		it	cs
 324 0072 0423     		movcs	r3, #4
 325 0074 1946     		mov	r1, r3
 326              	.LVL17:
1693:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 327              		.loc 4 1693 3 is_stmt 1 view .LVU89
 328              		.loc 4 1693 44 is_stmt 0 view .LVU90
 329 0076 131D     		adds	r3, r2, #4
 330              		.loc 4 1693 109 view .LVU91
 331 0078 062B     		cmp	r3, #6
 332 007a 16D9     		bls	.L16
 333 007c 033A     		subs	r2, r2, #3
 334              	.LVL18:
 335              	.L15:
1694:Drivers/CMSIS/Include/core_cm3.h **** 
1695:Drivers/CMSIS/Include/core_cm3.h ****   return (
 336              		.loc 4 1695 3 is_stmt 1 view .LVU92
1696:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 337              		.loc 4 1696 30 is_stmt 0 view .LVU93
 338 007e 4FF0FF33 		mov	r3, #-1
 339              	.LVL19:
 340              		.loc 4 1696 30 view .LVU94
 341 0082 8B40     		lsls	r3, r3, r1
 342 0084 DB43     		mvns	r3, r3
 343 0086 03F00203 		and	r3, r3, #2
 344              		.loc 4 1696 82 view .LVU95
 345 008a 9340     		lsls	r3, r3, r2
 346              	.LVL20:
 347              		.loc 4 1696 82 view .LVU96
 348              	.LBE127:
ARM GAS  /tmp/ccgn3NGF.s 			page 108


 349              	.LBE126:
 350              	.LBB129:
 351              	.LBI129:
1639:Drivers/CMSIS/Include/core_cm3.h **** {
 352              		.loc 4 1639 22 is_stmt 1 view .LVU97
 353              	.LBB130:
1641:Drivers/CMSIS/Include/core_cm3.h ****   {
 354              		.loc 4 1641 3 view .LVU98
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 355              		.loc 4 1643 5 view .LVU99
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 356              		.loc 4 1643 48 is_stmt 0 view .LVU100
 357 008c 1B01     		lsls	r3, r3, #4
 358              	.LVL21:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 359              		.loc 4 1643 48 view .LVU101
 360 008e DBB2     		uxtb	r3, r3
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 361              		.loc 4 1643 46 view .LVU102
 362 0090 0A4A     		ldr	r2, .L18+12
 363              	.LVL22:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 364              		.loc 4 1643 46 view .LVU103
 365 0092 82F81A33 		strb	r3, [r2, #794]
 366              	.LVL23:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 367              		.loc 4 1643 46 view .LVU104
 368              	.LBE130:
 369              	.LBE129:
 119:Core/Src/tim.c ****   	LL_TIM_EnableCounter(TimerMsDelay); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞	
 370              		.loc 1 119 4 is_stmt 1 view .LVU105
 371              	.LBB131:
 372              	.LBI131:
1511:Drivers/CMSIS/Include/core_cm3.h **** {
 373              		.loc 4 1511 22 view .LVU106
 374              	.LBB132:
1513:Drivers/CMSIS/Include/core_cm3.h ****   {
 375              		.loc 4 1513 3 view .LVU107
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 376              		.loc 4 1515 5 view .LVU108
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 377              		.loc 4 1515 43 is_stmt 0 view .LVU109
 378 0096 4FF08063 		mov	r3, #67108864
 379 009a 1360     		str	r3, [r2]
 380              	.LVL24:
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 381              		.loc 4 1515 43 view .LVU110
 382              	.LBE132:
 383              	.LBE131:
 120:Core/Src/tim.c **** }
 384              		.loc 1 120 4 is_stmt 1 view .LVU111
 385              	.LBB133:
 386              	.LBI133:
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 387              		.loc 3 883 22 view .LVU112
 388              	.LBB134:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
ARM GAS  /tmp/ccgn3NGF.s 			page 109


 389              		.loc 3 885 3 view .LVU113
 390 009c 054A     		ldr	r2, .L18+4
 391 009e 1368     		ldr	r3, [r2]
 392 00a0 43F00103 		orr	r3, r3, #1
 393 00a4 1360     		str	r3, [r2]
 394              	.LVL25:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 395              		.loc 3 885 3 is_stmt 0 view .LVU114
 396              	.LBE134:
 397              	.LBE133:
 121:Core/Src/tim.c **** 
 398              		.loc 1 121 1 view .LVU115
 399 00a6 07B0     		add	sp, sp, #28
 400              	.LCFI3:
 401              		.cfi_remember_state
 402              		.cfi_def_cfa_offset 12
 403              		@ sp needed
 404 00a8 30BD     		pop	{r4, r5, pc}
 405              	.LVL26:
 406              	.L16:
 407              	.LCFI4:
 408              		.cfi_restore_state
 409              	.LBB135:
 410              	.LBB128:
1693:Drivers/CMSIS/Include/core_cm3.h **** 
 411              		.loc 4 1693 109 view .LVU116
 412 00aa 0022     		movs	r2, #0
 413              	.LVL27:
1693:Drivers/CMSIS/Include/core_cm3.h **** 
 414              		.loc 4 1693 109 view .LVU117
 415 00ac E7E7     		b	.L15
 416              	.L19:
 417 00ae 00BF     		.align	2
 418              	.L18:
 419 00b0 00380240 		.word	1073887232
 420 00b4 000C0140 		.word	1073810432
 421 00b8 00ED00E0 		.word	-536810240
 422 00bc 00E100E0 		.word	-536813312
 423              	.LBE128:
 424              	.LBE135:
 425              		.cfi_endproc
 426              	.LFE816:
 428              		.section	.text.vSysTimerCallback,"ax",%progbits
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	vSysTimerCallback:
 435              	.LVL28:
 436              	.LFB827:
 275:Core/Src/tim.c ****   SysTimerCallback ();
 437              		.loc 1 275 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 275:Core/Src/tim.c ****   SysTimerCallback ();
 441              		.loc 1 275 1 is_stmt 0 view .LVU119
ARM GAS  /tmp/ccgn3NGF.s 			page 110


 442 0000 08B5     		push	{r3, lr}
 443              	.LCFI5:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 3, -8
 446              		.cfi_offset 14, -4
 276:Core/Src/tim.c **** }
 447              		.loc 1 276 3 is_stmt 1 view .LVU120
 448 0002 FFF7FEFF 		bl	SysTimerCallback
 449              	.LVL29:
 277:Core/Src/tim.c **** 
 450              		.loc 1 277 1 is_stmt 0 view .LVU121
 451 0006 08BD     		pop	{r3, pc}
 452              		.cfi_endproc
 453              	.LFE827:
 455              		.section	.text.SysTimer_init,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	SysTimer_init:
 462              	.LFB819:
 146:Core/Src/tim.c **** 	LL_TIM_InitTypeDef TIM_InitStruct = {0};
 463              		.loc 1 146 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 24
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467 0000 30B5     		push	{r4, r5, lr}
 468              	.LCFI6:
 469              		.cfi_def_cfa_offset 12
 470              		.cfi_offset 4, -12
 471              		.cfi_offset 5, -8
 472              		.cfi_offset 14, -4
 473 0002 87B0     		sub	sp, sp, #28
 474              	.LCFI7:
 475              		.cfi_def_cfa_offset 40
 147:Core/Src/tim.c **** 	
 476              		.loc 1 147 2 view .LVU123
 147:Core/Src/tim.c **** 	
 477              		.loc 1 147 21 is_stmt 0 view .LVU124
 478 0004 0025     		movs	r5, #0
 479 0006 0295     		str	r5, [sp, #8]
 480 0008 0395     		str	r5, [sp, #12]
 481 000a 0495     		str	r5, [sp, #16]
 482 000c 0595     		str	r5, [sp, #20]
 149:Core/Src/tim.c ****   	TIM_InitStruct.Prescaler = 31;
 483              		.loc 1 149 4 is_stmt 1 view .LVU125
 484              	.LVL30:
 485              	.LBB160:
 486              	.LBI160:
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 487              		.loc 2 529 22 view .LVU126
 488              	.LBB161:
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 489              		.loc 2 531 3 view .LVU127
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 490              		.loc 2 532 3 view .LVU128
 491 000e 1B4B     		ldr	r3, .L24
ARM GAS  /tmp/ccgn3NGF.s 			page 111


 492 0010 5A6A     		ldr	r2, [r3, #36]
 493 0012 42F01002 		orr	r2, r2, #16
 494 0016 5A62     		str	r2, [r3, #36]
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 495              		.loc 2 534 3 view .LVU129
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 496              		.loc 2 534 12 is_stmt 0 view .LVU130
 497 0018 5B6A     		ldr	r3, [r3, #36]
 498 001a 03F01003 		and	r3, r3, #16
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 499              		.loc 2 534 10 view .LVU131
 500 001e 0193     		str	r3, [sp, #4]
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 501              		.loc 2 535 3 is_stmt 1 view .LVU132
 502 0020 019B     		ldr	r3, [sp, #4]
 503              	.LVL31:
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 504              		.loc 2 535 3 is_stmt 0 view .LVU133
 505              	.LBE161:
 506              	.LBE160:
 150:Core/Src/tim.c ****   	TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 507              		.loc 1 150 4 is_stmt 1 view .LVU134
 150:Core/Src/tim.c ****   	TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 508              		.loc 1 150 29 is_stmt 0 view .LVU135
 509 0022 1F23     		movs	r3, #31
 510 0024 ADF80830 		strh	r3, [sp, #8]	@ movhi
 151:Core/Src/tim.c ****   	TIM_InitStruct.Autoreload = 1000-1;
 511              		.loc 1 151 4 is_stmt 1 view .LVU136
 152:Core/Src/tim.c ****   	LL_TIM_Init(SysTimer, &TIM_InitStruct);
 512              		.loc 1 152 4 view .LVU137
 152:Core/Src/tim.c ****   	LL_TIM_Init(SysTimer, &TIM_InitStruct);
 513              		.loc 1 152 30 is_stmt 0 view .LVU138
 514 0028 40F2E733 		movw	r3, #999
 515 002c 0493     		str	r3, [sp, #16]
 153:Core/Src/tim.c ****   	LL_TIM_DisableARRPreload(SysTimer);
 516              		.loc 1 153 4 is_stmt 1 view .LVU139
 517 002e 144C     		ldr	r4, .L24+4
 518 0030 02A9     		add	r1, sp, #8
 519 0032 2046     		mov	r0, r4
 520 0034 FFF7FEFF 		bl	LL_TIM_Init
 521              	.LVL32:
 154:Core/Src/tim.c ****   	LL_TIM_SetTriggerOutput(SysTimer, LL_TIM_TRGO_RESET);
 522              		.loc 1 154 4 view .LVU140
 523              	.LBB162:
 524              	.LBI162:
1074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 525              		.loc 3 1074 22 view .LVU141
 526              	.LBB163:
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 527              		.loc 3 1076 3 view .LVU142
 528 0038 2368     		ldr	r3, [r4]
 529 003a 23F08003 		bic	r3, r3, #128
 530 003e 2360     		str	r3, [r4]
 531              	.LVL33:
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 532              		.loc 3 1076 3 is_stmt 0 view .LVU143
 533              	.LBE163:
ARM GAS  /tmp/ccgn3NGF.s 			page 112


 534              	.LBE162:
 155:Core/Src/tim.c ****   	LL_TIM_DisableMasterSlaveMode(SysTimer);
 535              		.loc 1 155 4 is_stmt 1 view .LVU144
 536              	.LBB164:
 537              	.LBI164:
2291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 538              		.loc 3 2291 22 view .LVU145
 539              	.LBB165:
2293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 540              		.loc 3 2293 3 view .LVU146
 541 0040 6368     		ldr	r3, [r4, #4]
 542 0042 23F07003 		bic	r3, r3, #112
 543 0046 6360     		str	r3, [r4, #4]
 544              	.LVL34:
2293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 545              		.loc 3 2293 3 is_stmt 0 view .LVU147
 546              	.LBE165:
 547              	.LBE164:
 156:Core/Src/tim.c **** 
 548              		.loc 1 156 4 is_stmt 1 view .LVU148
 549              	.LBB166:
 550              	.LBI166:
2357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 551              		.loc 3 2357 22 view .LVU149
 552              	.LBB167:
2359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 553              		.loc 3 2359 3 view .LVU150
 554 0048 A368     		ldr	r3, [r4, #8]
 555 004a 23F08003 		bic	r3, r3, #128
 556 004e A360     		str	r3, [r4, #8]
 557              	.LVL35:
2359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 558              		.loc 3 2359 3 is_stmt 0 view .LVU151
 559              	.LBE167:
 560              	.LBE166:
 158:Core/Src/tim.c **** 	LL_TIM_EnableIT_UPDATE(SysTimer); //—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –æ—Ç —Ç–∞–π–º–µ—Ä–∞
 561              		.loc 1 158 2 is_stmt 1 view .LVU152
 562              	.LBB168:
 563              	.LBI168:
2600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 564              		.loc 3 2600 22 view .LVU153
 565              	.LBB169:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 566              		.loc 3 2602 3 view .LVU154
 567 0050 6FF00103 		mvn	r3, #1
 568 0054 2361     		str	r3, [r4, #16]
 569              	.LVL36:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 570              		.loc 3 2602 3 is_stmt 0 view .LVU155
 571              	.LBE169:
 572              	.LBE168:
 159:Core/Src/tim.c **** 	LL_TIM_SetCounter(SysTimer, 0); //—Å–±—Ä–æ—Å —Å—á—ë—Ç–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
 573              		.loc 1 159 2 is_stmt 1 view .LVU156
 574              	.LBB170:
 575              	.LBI170:
2831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 576              		.loc 3 2831 22 view .LVU157
ARM GAS  /tmp/ccgn3NGF.s 			page 113


 577              	.LBB171:
 578              		.loc 3 2833 3 view .LVU158
 579 0056 E368     		ldr	r3, [r4, #12]
 580 0058 43F00103 		orr	r3, r3, #1
 581 005c E360     		str	r3, [r4, #12]
 582              	.LVL37:
 583              		.loc 3 2833 3 is_stmt 0 view .LVU159
 584              	.LBE171:
 585              	.LBE170:
 160:Core/Src/tim.c **** 
 586              		.loc 1 160 2 is_stmt 1 view .LVU160
 587              	.LBB172:
 588              	.LBI172:
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 589              		.loc 3 1136 22 view .LVU161
 590              	.LBB173:
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 591              		.loc 3 1138 3 view .LVU162
 592 005e 6562     		str	r5, [r4, #36]
 593              	.LVL38:
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 594              		.loc 3 1138 3 is_stmt 0 view .LVU163
 595              	.LBE173:
 596              	.LBE172:
 162:Core/Src/tim.c ****   	NVIC_EnableIRQ(SysTimer_IRQn); //–≤–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ—Ç —Ç–∞–π–º–µ—Ä–∞
 597              		.loc 1 162 4 is_stmt 1 view .LVU164
 598              	.LBB174:
 599              	.LBI174:
1499:Drivers/CMSIS/Include/core_cm3.h **** {
 600              		.loc 4 1499 26 view .LVU165
 601              	.LBB175:
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 602              		.loc 4 1501 3 view .LVU166
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 603              		.loc 4 1501 26 is_stmt 0 view .LVU167
 604 0060 084B     		ldr	r3, .L24+8
 605 0062 DB68     		ldr	r3, [r3, #12]
 606              	.LVL39:
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 607              		.loc 4 1501 26 view .LVU168
 608              	.LBE175:
 609              	.LBE174:
 610              	.LBB176:
 611              	.LBI176:
1686:Drivers/CMSIS/Include/core_cm3.h **** {
 612              		.loc 4 1686 26 is_stmt 1 view .LVU169
 613              	.LBB177:
1688:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
 614              		.loc 4 1688 3 view .LVU170
1689:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
 615              		.loc 4 1689 3 view .LVU171
1690:Drivers/CMSIS/Include/core_cm3.h **** 
 616              		.loc 4 1690 3 view .LVU172
1692:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 617              		.loc 4 1692 3 view .LVU173
1693:Drivers/CMSIS/Include/core_cm3.h **** 
 618              		.loc 4 1693 3 view .LVU174
ARM GAS  /tmp/ccgn3NGF.s 			page 114


1695:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 619              		.loc 4 1695 3 view .LVU175
1695:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 620              		.loc 4 1695 3 is_stmt 0 view .LVU176
 621              	.LBE177:
 622              	.LBE176:
 623              	.LBB178:
 624              	.LBI178:
1639:Drivers/CMSIS/Include/core_cm3.h **** {
 625              		.loc 4 1639 22 is_stmt 1 view .LVU177
 626              	.LBB179:
1641:Drivers/CMSIS/Include/core_cm3.h ****   {
 627              		.loc 4 1641 3 view .LVU178
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 628              		.loc 4 1643 5 view .LVU179
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 629              		.loc 4 1643 46 is_stmt 0 view .LVU180
 630 0064 084B     		ldr	r3, .L24+12
 631 0066 83F82B53 		strb	r5, [r3, #811]
 632              	.LVL40:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 633              		.loc 4 1643 46 view .LVU181
 634              	.LBE179:
 635              	.LBE178:
 163:Core/Src/tim.c ****   	LL_TIM_EnableCounter(SysTimer); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞	
 636              		.loc 1 163 4 is_stmt 1 view .LVU182
 637              	.LBB180:
 638              	.LBI180:
1511:Drivers/CMSIS/Include/core_cm3.h **** {
 639              		.loc 4 1511 22 view .LVU183
 640              	.LBB181:
1513:Drivers/CMSIS/Include/core_cm3.h ****   {
 641              		.loc 4 1513 3 view .LVU184
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 642              		.loc 4 1515 5 view .LVU185
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 643              		.loc 4 1515 43 is_stmt 0 view .LVU186
 644 006a 4FF40062 		mov	r2, #2048
 645 006e 5A60     		str	r2, [r3, #4]
 646              	.LVL41:
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 647              		.loc 4 1515 43 view .LVU187
 648              	.LBE181:
 649              	.LBE180:
 164:Core/Src/tim.c **** 
 650              		.loc 1 164 4 is_stmt 1 view .LVU188
 651              	.LBB182:
 652              	.LBI182:
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 653              		.loc 3 883 22 view .LVU189
 654              	.LBB183:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 655              		.loc 3 885 3 view .LVU190
 656 0070 2368     		ldr	r3, [r4]
 657 0072 43F00103 		orr	r3, r3, #1
 658 0076 2360     		str	r3, [r4]
 659              	.LVL42:
ARM GAS  /tmp/ccgn3NGF.s 			page 115


 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 660              		.loc 3 885 3 is_stmt 0 view .LVU191
 661              	.LBE183:
 662              	.LBE182:
 166:Core/Src/tim.c **** 
 663              		.loc 1 166 1 view .LVU192
 664 0078 07B0     		add	sp, sp, #28
 665              	.LCFI8:
 666              		.cfi_def_cfa_offset 12
 667              		@ sp needed
 668 007a 30BD     		pop	{r4, r5, pc}
 669              	.L25:
 670              		.align	2
 671              	.L24:
 672 007c 00380240 		.word	1073887232
 673 0080 00100040 		.word	1073745920
 674 0084 00ED00E0 		.word	-536810240
 675 0088 00E100E0 		.word	-536813312
 676              		.cfi_endproc
 677              	.LFE819:
 679              		.section	.text.MX_TIM7_Init,"ax",%progbits
 680              		.align	1
 681              		.global	MX_TIM7_Init
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 686              	MX_TIM7_Init:
 687              	.LFB814:
  61:Core/Src/tim.c **** 
 688              		.loc 1 61 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 24
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692 0000 10B5     		push	{r4, lr}
 693              	.LCFI9:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 4, -8
 696              		.cfi_offset 14, -4
 697 0002 86B0     		sub	sp, sp, #24
 698              	.LCFI10:
 699              		.cfi_def_cfa_offset 32
  67:Core/Src/tim.c **** 
 700              		.loc 1 67 3 view .LVU194
  67:Core/Src/tim.c **** 
 701              		.loc 1 67 22 is_stmt 0 view .LVU195
 702 0004 0023     		movs	r3, #0
 703 0006 0293     		str	r3, [sp, #8]
 704 0008 0393     		str	r3, [sp, #12]
 705 000a 0493     		str	r3, [sp, #16]
 706 000c 0593     		str	r3, [sp, #20]
  70:Core/Src/tim.c **** 
 707              		.loc 1 70 3 is_stmt 1 view .LVU196
 708              	.LVL43:
 709              	.LBB184:
 710              	.LBI184:
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** {
 711              		.loc 2 529 22 view .LVU197
ARM GAS  /tmp/ccgn3NGF.s 			page 116


 712              	.LBB185:
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 713              		.loc 2 531 3 view .LVU198
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 714              		.loc 2 532 3 view .LVU199
 715 000e 114B     		ldr	r3, .L28
 716 0010 5A6A     		ldr	r2, [r3, #36]
 717 0012 42F02002 		orr	r2, r2, #32
 718 0016 5A62     		str	r2, [r3, #36]
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 719              		.loc 2 534 3 view .LVU200
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 720              		.loc 2 534 12 is_stmt 0 view .LVU201
 721 0018 5B6A     		ldr	r3, [r3, #36]
 722 001a 03F02003 		and	r3, r3, #32
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h ****   (void)tmpreg;
 723              		.loc 2 534 10 view .LVU202
 724 001e 0193     		str	r3, [sp, #4]
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 725              		.loc 2 535 3 is_stmt 1 view .LVU203
 726 0020 019B     		ldr	r3, [sp, #4]
 727              	.LVL44:
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_bus.h **** }
 728              		.loc 2 535 3 is_stmt 0 view .LVU204
 729              	.LBE185:
 730              	.LBE184:
  75:Core/Src/tim.c ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 731              		.loc 1 75 3 is_stmt 1 view .LVU205
  75:Core/Src/tim.c ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 732              		.loc 1 75 28 is_stmt 0 view .LVU206
 733 0022 1F23     		movs	r3, #31
 734 0024 ADF80830 		strh	r3, [sp, #8]	@ movhi
  76:Core/Src/tim.c ****   TIM_InitStruct.Autoreload = 1000;
 735              		.loc 1 76 3 is_stmt 1 view .LVU207
  77:Core/Src/tim.c ****   LL_TIM_Init(TIM7, &TIM_InitStruct);
 736              		.loc 1 77 3 view .LVU208
  77:Core/Src/tim.c ****   LL_TIM_Init(TIM7, &TIM_InitStruct);
 737              		.loc 1 77 29 is_stmt 0 view .LVU209
 738 0028 4FF47A73 		mov	r3, #1000
 739 002c 0493     		str	r3, [sp, #16]
  78:Core/Src/tim.c ****   LL_TIM_DisableARRPreload(TIM7);
 740              		.loc 1 78 3 is_stmt 1 view .LVU210
 741 002e 0A4C     		ldr	r4, .L28+4
 742 0030 02A9     		add	r1, sp, #8
 743 0032 2046     		mov	r0, r4
 744 0034 FFF7FEFF 		bl	LL_TIM_Init
 745              	.LVL45:
  79:Core/Src/tim.c ****   LL_TIM_SetTriggerOutput(TIM7, LL_TIM_TRGO_RESET);
 746              		.loc 1 79 3 view .LVU211
 747              	.LBB186:
 748              	.LBI186:
1074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 749              		.loc 3 1074 22 view .LVU212
 750              	.LBB187:
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 751              		.loc 3 1076 3 view .LVU213
 752 0038 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccgn3NGF.s 			page 117


 753 003a 23F08003 		bic	r3, r3, #128
 754 003e 2360     		str	r3, [r4]
 755              	.LVL46:
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 756              		.loc 3 1076 3 is_stmt 0 view .LVU214
 757              	.LBE187:
 758              	.LBE186:
  80:Core/Src/tim.c ****   LL_TIM_DisableMasterSlaveMode(TIM7);
 759              		.loc 1 80 3 is_stmt 1 view .LVU215
 760              	.LBB188:
 761              	.LBI188:
2291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 762              		.loc 3 2291 22 view .LVU216
 763              	.LBB189:
2293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 764              		.loc 3 2293 3 view .LVU217
 765 0040 6368     		ldr	r3, [r4, #4]
 766 0042 23F07003 		bic	r3, r3, #112
 767 0046 6360     		str	r3, [r4, #4]
 768              	.LVL47:
2293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 769              		.loc 3 2293 3 is_stmt 0 view .LVU218
 770              	.LBE189:
 771              	.LBE188:
  81:Core/Src/tim.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 772              		.loc 1 81 3 is_stmt 1 view .LVU219
 773              	.LBB190:
 774              	.LBI190:
2357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 775              		.loc 3 2357 22 view .LVU220
 776              	.LBB191:
2359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 777              		.loc 3 2359 3 view .LVU221
 778 0048 A368     		ldr	r3, [r4, #8]
 779 004a 23F08003 		bic	r3, r3, #128
 780 004e A360     		str	r3, [r4, #8]
 781              	.LVL48:
2359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 782              		.loc 3 2359 3 is_stmt 0 view .LVU222
 783              	.LBE191:
 784              	.LBE190:
  86:Core/Src/tim.c **** 
 785              		.loc 1 86 1 view .LVU223
 786 0050 06B0     		add	sp, sp, #24
 787              	.LCFI11:
 788              		.cfi_def_cfa_offset 8
 789              		@ sp needed
 790 0052 10BD     		pop	{r4, pc}
 791              	.L29:
 792              		.align	2
 793              	.L28:
 794 0054 00380240 		.word	1073887232
 795 0058 00140040 		.word	1073746944
 796              		.cfi_endproc
 797              	.LFE814:
 799              		.section	.text.delay_us,"ax",%progbits
 800              		.align	1
ARM GAS  /tmp/ccgn3NGF.s 			page 118


 801              		.global	delay_us
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 806              	delay_us:
 807              	.LVL49:
 808              	.LFB815:
  91:Core/Src/tim.c ****   	LL_TIM_SetAutoReload(TIM_DELAY_us, delay); //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –º–∫—Å
 809              		.loc 1 91 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
  92:Core/Src/tim.c **** 	LL_TIM_ClearFlag_UPDATE(TIM_DELAY_us); //—Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
 814              		.loc 1 92 4 view .LVU225
 815              	.LBB192:
 816              	.LBI192:
1205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 817              		.loc 3 1205 22 view .LVU226
 818              	.LBB193:
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 819              		.loc 3 1207 3 view .LVU227
 820 0000 0A4B     		ldr	r3, .L32
 821 0002 D862     		str	r0, [r3, #44]
 822              	.LVL50:
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 823              		.loc 3 1207 3 is_stmt 0 view .LVU228
 824              	.LBE193:
 825              	.LBE192:
  93:Core/Src/tim.c **** 	LL_TIM_SetCounter(TIM_DELAY_us, 0); //—Å–±—Ä–æ—Å —Å—á—ë—Ç–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
 826              		.loc 1 93 2 is_stmt 1 view .LVU229
 827              	.LBB194:
 828              	.LBI194:
2600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 829              		.loc 3 2600 22 view .LVU230
 830              	.LBB195:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 831              		.loc 3 2602 3 view .LVU231
 832 0004 6FF00102 		mvn	r2, #1
 833 0008 1A61     		str	r2, [r3, #16]
 834              	.LVL51:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 835              		.loc 3 2602 3 is_stmt 0 view .LVU232
 836              	.LBE195:
 837              	.LBE194:
  94:Core/Src/tim.c **** 	LL_TIM_EnableCounter(TIM_DELAY_us); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
 838              		.loc 1 94 2 is_stmt 1 view .LVU233
 839              	.LBB196:
 840              	.LBI196:
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 841              		.loc 3 1136 22 view .LVU234
 842              	.LBB197:
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 843              		.loc 3 1138 3 view .LVU235
 844 000a 0022     		movs	r2, #0
 845 000c 5A62     		str	r2, [r3, #36]
 846              	.LVL52:
ARM GAS  /tmp/ccgn3NGF.s 			page 119


1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 847              		.loc 3 1138 3 is_stmt 0 view .LVU236
 848              	.LBE197:
 849              	.LBE196:
  95:Core/Src/tim.c **** 	while (LL_TIM_IsActiveFlag_UPDATE(TIM_DELAY_us) == 0) {} //–æ–∂–∏–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–
 850              		.loc 1 95 2 is_stmt 1 view .LVU237
 851              	.LBB198:
 852              	.LBI198:
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 853              		.loc 3 883 22 view .LVU238
 854              	.LBB199:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 855              		.loc 3 885 3 view .LVU239
 856 000e 1A68     		ldr	r2, [r3]
 857 0010 42F00102 		orr	r2, r2, #1
 858 0014 1A60     		str	r2, [r3]
 859              	.LVL53:
 860              	.L31:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 861              		.loc 3 885 3 is_stmt 0 view .LVU240
 862              	.LBE199:
 863              	.LBE198:
  96:Core/Src/tim.c **** 	LL_TIM_DisableCounter(TIM_DELAY_us); //–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞		
 864              		.loc 1 96 57 is_stmt 1 discriminator 1 view .LVU241
  96:Core/Src/tim.c **** 	LL_TIM_DisableCounter(TIM_DELAY_us); //–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞		
 865              		.loc 1 96 8 discriminator 1 view .LVU242
 866              	.LBB200:
 867              	.LBI200:
2611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 868              		.loc 3 2611 26 discriminator 1 view .LVU243
 869              	.LBB201:
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 870              		.loc 3 2613 3 discriminator 1 view .LVU244
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 871              		.loc 3 2613 12 is_stmt 0 discriminator 1 view .LVU245
 872 0016 054B     		ldr	r3, .L32
 873 0018 1B69     		ldr	r3, [r3, #16]
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 874              		.loc 3 2613 66 discriminator 1 view .LVU246
 875 001a 13F0010F 		tst	r3, #1
 876 001e FAD0     		beq	.L31
 877              	.LVL54:
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 878              		.loc 3 2613 66 discriminator 1 view .LVU247
 879              	.LBE201:
 880              	.LBE200:
  97:Core/Src/tim.c **** }
 881              		.loc 1 97 2 is_stmt 1 view .LVU248
 882              	.LBB202:
 883              	.LBI202:
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 884              		.loc 3 894 22 view .LVU249
 885              	.LBB203:
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 886              		.loc 3 896 3 view .LVU250
 887 0020 024A     		ldr	r2, .L32
 888 0022 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccgn3NGF.s 			page 120


 889 0024 23F00103 		bic	r3, r3, #1
 890 0028 1360     		str	r3, [r2]
 891              	.LVL55:
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 892              		.loc 3 896 3 is_stmt 0 view .LVU251
 893              	.LBE203:
 894              	.LBE202:
  98:Core/Src/tim.c **** 
 895              		.loc 1 98 1 view .LVU252
 896 002a 7047     		bx	lr
 897              	.L33:
 898              		.align	2
 899              	.L32:
 900 002c 00140040 		.word	1073746944
 901              		.cfi_endproc
 902              	.LFE815:
 904              		.section	.text.TIM10_IRQHandler,"ax",%progbits
 905              		.align	1
 906              		.global	TIM10_IRQHandler
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	TIM10_IRQHandler:
 912              	.LFB817:
 125:Core/Src/tim.c **** 	if (LL_TIM_IsActiveFlag_UPDATE(TimerMsDelay) == SET)
 913              		.loc 1 125 1 is_stmt 1 view -0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 126:Core/Src/tim.c **** 	{	
 918              		.loc 1 126 2 view .LVU254
 919              	.LVL56:
 920              	.LBB204:
 921              	.LBI204:
2611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 922              		.loc 3 2611 26 view .LVU255
 923              	.LBB205:
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 924              		.loc 3 2613 3 view .LVU256
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 925              		.loc 3 2613 12 is_stmt 0 view .LVU257
 926 0000 084B     		ldr	r3, .L36
 927 0002 1B69     		ldr	r3, [r3, #16]
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 928              		.loc 3 2613 66 view .LVU258
 929 0004 13F0010F 		tst	r3, #1
 930 0008 0AD0     		beq	.L34
 931              	.LVL57:
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 932              		.loc 3 2613 66 view .LVU259
 933              	.LBE205:
 934              	.LBE204:
 128:Core/Src/tim.c **** 		LL_TIM_DisableCounter(TimerMsDelay); 
 935              		.loc 1 128 3 is_stmt 1 view .LVU260
 936              	.LBB206:
 937              	.LBI206:
ARM GAS  /tmp/ccgn3NGF.s 			page 121


2600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 938              		.loc 3 2600 22 view .LVU261
 939              	.LBB207:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 940              		.loc 3 2602 3 view .LVU262
 941 000a 064B     		ldr	r3, .L36
 942 000c 6FF00102 		mvn	r2, #1
 943 0010 1A61     		str	r2, [r3, #16]
 944              	.LVL58:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 945              		.loc 3 2602 3 is_stmt 0 view .LVU263
 946              	.LBE207:
 947              	.LBE206:
 129:Core/Src/tim.c **** 		flag_end_delay = RESET;
 948              		.loc 1 129 3 is_stmt 1 view .LVU264
 949              	.LBB208:
 950              	.LBI208:
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 951              		.loc 3 894 22 view .LVU265
 952              	.LBB209:
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 953              		.loc 3 896 3 view .LVU266
 954 0012 1A68     		ldr	r2, [r3]
 955 0014 22F00102 		bic	r2, r2, #1
 956 0018 1A60     		str	r2, [r3]
 957              	.LVL59:
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 958              		.loc 3 896 3 is_stmt 0 view .LVU267
 959              	.LBE209:
 960              	.LBE208:
 130:Core/Src/tim.c **** 	}
 961              		.loc 1 130 3 is_stmt 1 view .LVU268
 130:Core/Src/tim.c **** 	}
 962              		.loc 1 130 18 is_stmt 0 view .LVU269
 963 001a 034B     		ldr	r3, .L36+4
 964 001c 0022     		movs	r2, #0
 965 001e 1A70     		strb	r2, [r3]
 966              	.L34:
 132:Core/Src/tim.c **** 
 967              		.loc 1 132 1 view .LVU270
 968 0020 7047     		bx	lr
 969              	.L37:
 970 0022 00BF     		.align	2
 971              	.L36:
 972 0024 000C0140 		.word	1073810432
 973 0028 00000000 		.word	.LANCHOR2
 974              		.cfi_endproc
 975              	.LFE817:
 977              		.section	.text.delay_ms,"ax",%progbits
 978              		.align	1
 979              		.global	delay_ms
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 984              	delay_ms:
 985              	.LVL60:
 986              	.LFB818:
ARM GAS  /tmp/ccgn3NGF.s 			page 122


 136:Core/Src/tim.c **** 	LL_TIM_SetAutoReload(TimerMsDelay, delay); 
 987              		.loc 1 136 1 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 137:Core/Src/tim.c **** 	LL_TIM_SetCounter(TimerMsDelay, 0); 
 992              		.loc 1 137 2 view .LVU272
 993              	.LBB210:
 994              	.LBI210:
1205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 995              		.loc 3 1205 22 view .LVU273
 996              	.LBB211:
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 997              		.loc 3 1207 3 view .LVU274
 998 0000 074B     		ldr	r3, .L39
 999 0002 D862     		str	r0, [r3, #44]
 1000              	.LVL61:
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1001              		.loc 3 1207 3 is_stmt 0 view .LVU275
 1002              	.LBE211:
 1003              	.LBE210:
 138:Core/Src/tim.c **** 	LL_TIM_ClearFlag_UPDATE(TimerMsDelay);
 1004              		.loc 1 138 2 is_stmt 1 view .LVU276
 1005              	.LBB212:
 1006              	.LBI212:
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1007              		.loc 3 1136 22 view .LVU277
 1008              	.LBB213:
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1009              		.loc 3 1138 3 view .LVU278
 1010 0004 0022     		movs	r2, #0
 1011 0006 5A62     		str	r2, [r3, #36]
 1012              	.LVL62:
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1013              		.loc 3 1138 3 is_stmt 0 view .LVU279
 1014              	.LBE213:
 1015              	.LBE212:
 139:Core/Src/tim.c **** 	LL_TIM_EnableCounter(TimerMsDelay); 
 1016              		.loc 1 139 2 is_stmt 1 view .LVU280
 1017              	.LBB214:
 1018              	.LBI214:
2600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1019              		.loc 3 2600 22 view .LVU281
 1020              	.LBB215:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1021              		.loc 3 2602 3 view .LVU282
 1022 0008 6FF00102 		mvn	r2, #1
 1023 000c 1A61     		str	r2, [r3, #16]
 1024              	.LVL63:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1025              		.loc 3 2602 3 is_stmt 0 view .LVU283
 1026              	.LBE215:
 1027              	.LBE214:
 140:Core/Src/tim.c ****   	flag_end_delay = 1;
 1028              		.loc 1 140 2 is_stmt 1 view .LVU284
 1029              	.LBB216:
ARM GAS  /tmp/ccgn3NGF.s 			page 123


 1030              	.LBI216:
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1031              		.loc 3 883 22 view .LVU285
 1032              	.LBB217:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1033              		.loc 3 885 3 view .LVU286
 1034 000e 1A68     		ldr	r2, [r3]
 1035 0010 42F00102 		orr	r2, r2, #1
 1036 0014 1A60     		str	r2, [r3]
 1037              	.LVL64:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1038              		.loc 3 885 3 is_stmt 0 view .LVU287
 1039              	.LBE217:
 1040              	.LBE216:
 141:Core/Src/tim.c **** }
 1041              		.loc 1 141 4 is_stmt 1 view .LVU288
 141:Core/Src/tim.c **** }
 1042              		.loc 1 141 19 is_stmt 0 view .LVU289
 1043 0016 034B     		ldr	r3, .L39+4
 1044 0018 0122     		movs	r2, #1
 1045 001a 1A70     		strb	r2, [r3]
 142:Core/Src/tim.c **** 
 1046              		.loc 1 142 1 view .LVU290
 1047 001c 7047     		bx	lr
 1048              	.L40:
 1049 001e 00BF     		.align	2
 1050              	.L39:
 1051 0020 000C0140 		.word	1073810432
 1052 0024 00000000 		.word	.LANCHOR2
 1053              		.cfi_endproc
 1054              	.LFE818:
 1056              		.section	.text.TIM6_IRQHandler,"ax",%progbits
 1057              		.align	1
 1058              		.global	TIM6_IRQHandler
 1059              		.syntax unified
 1060              		.thumb
 1061              		.thumb_func
 1063              	TIM6_IRQHandler:
 1064              	.LFB820:
 170:Core/Src/tim.c **** 	if (LL_TIM_IsActiveFlag_UPDATE(SysTimer) == SET)
 1065              		.loc 1 170 1 is_stmt 1 view -0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069 0000 38B5     		push	{r3, r4, r5, lr}
 1070              	.LCFI12:
 1071              		.cfi_def_cfa_offset 16
 1072              		.cfi_offset 3, -16
 1073              		.cfi_offset 4, -12
 1074              		.cfi_offset 5, -8
 1075              		.cfi_offset 14, -4
 171:Core/Src/tim.c **** 	{	
 1076              		.loc 1 171 2 view .LVU292
 1077              	.LVL65:
 1078              	.LBB218:
 1079              	.LBI218:
2611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
ARM GAS  /tmp/ccgn3NGF.s 			page 124


 1080              		.loc 3 2611 26 view .LVU293
 1081              	.LBB219:
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1082              		.loc 3 2613 3 view .LVU294
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1083              		.loc 3 2613 12 is_stmt 0 view .LVU295
 1084 0002 0D4B     		ldr	r3, .L44
 1085 0004 1B69     		ldr	r3, [r3, #16]
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1086              		.loc 3 2613 66 view .LVU296
 1087 0006 13F0010F 		tst	r3, #1
 1088 000a 14D0     		beq	.L41
 1089              	.LVL66:
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1090              		.loc 3 2613 66 view .LVU297
 1091              	.LBE219:
 1092              	.LBE218:
 173:Core/Src/tim.c ****     	TicksCounter++; 
 1093              		.loc 1 173 5 is_stmt 1 view .LVU298
 1094              	.LBB220:
 1095              	.LBI220:
2600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1096              		.loc 3 2600 22 view .LVU299
 1097              	.LBB221:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1098              		.loc 3 2602 3 view .LVU300
 1099 000c 0A49     		ldr	r1, .L44
 1100 000e 6FF00103 		mvn	r3, #1
 1101 0012 0B61     		str	r3, [r1, #16]
 1102              	.LVL67:
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1103              		.loc 3 2602 3 is_stmt 0 view .LVU301
 1104              	.LBE221:
 1105              	.LBE220:
 174:Core/Src/tim.c ****     	LL_TIM_EnableCounter(SysTimer); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞	
 1106              		.loc 1 174 6 is_stmt 1 view .LVU302
 174:Core/Src/tim.c ****     	LL_TIM_EnableCounter(SysTimer); //–≤–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞	
 1107              		.loc 1 174 18 is_stmt 0 view .LVU303
 1108 0014 0948     		ldr	r0, .L44+4
 1109 0016 D0E90023 		ldrd	r2, [r0]
 1110 001a 541C     		adds	r4, r2, #1
 1111 001c 43F10005 		adc	r5, r3, #0
 1112 0020 C0E90045 		strd	r4, [r0]
 175:Core/Src/tim.c **** 	  	if ( SysTick_CallbackFunction != 0 ) //–µ—Å–ª–∏ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∫–æ–ª–ª–±—ç–∫ xTimer_T
 1113              		.loc 1 175 6 is_stmt 1 view .LVU304
 1114              	.LVL68:
 1115              	.LBB222:
 1116              	.LBI222:
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1117              		.loc 3 883 22 view .LVU305
 1118              	.LBB223:
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1119              		.loc 3 885 3 view .LVU306
 1120 0024 0B68     		ldr	r3, [r1]
 1121 0026 43F00103 		orr	r3, r3, #1
 1122 002a 0B60     		str	r3, [r1]
 1123              	.LVL69:
ARM GAS  /tmp/ccgn3NGF.s 			page 125


 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1124              		.loc 3 885 3 is_stmt 0 view .LVU307
 1125              	.LBE223:
 1126              	.LBE222:
 176:Core/Src/tim.c **** 	  	{ SysTick_CallbackFunction(TicksCounter); } //–≤—ã–∑–æ–≤ –∫–æ–ª–ª–±—ç–∫–∞
 1127              		.loc 1 176 5 is_stmt 1 view .LVU308
 176:Core/Src/tim.c **** 	  	{ SysTick_CallbackFunction(TicksCounter); } //–≤—ã–∑–æ–≤ –∫–æ–ª–ª–±—ç–∫–∞
 1128              		.loc 1 176 35 is_stmt 0 view .LVU309
 1129 002c 044B     		ldr	r3, .L44+8
 1130 002e 1B68     		ldr	r3, [r3]
 176:Core/Src/tim.c **** 	  	{ SysTick_CallbackFunction(TicksCounter); } //–≤—ã–∑–æ–≤ –∫–æ–ª–ª–±—ç–∫–∞
 1131              		.loc 1 176 8 view .LVU310
 1132 0030 0BB1     		cbz	r3, .L41
 177:Core/Src/tim.c **** 	}
 1133              		.loc 1 177 7 is_stmt 1 view .LVU311
 1134 0032 03C8     		ldmia	r0, {r0-r1}
 1135 0034 9847     		blx	r3
 1136              	.LVL70:
 1137              	.L41:
 179:Core/Src/tim.c **** 
 1138              		.loc 1 179 1 is_stmt 0 view .LVU312
 1139 0036 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L45:
 1141              		.align	2
 1142              	.L44:
 1143 0038 00100040 		.word	1073745920
 1144 003c 00000000 		.word	.LANCHOR1
 1145 0040 00000000 		.word	.LANCHOR3
 1146              		.cfi_endproc
 1147              	.LFE820:
 1149              		.section	.text.xTimer_Create,"ax",%progbits
 1150              		.align	1
 1151              		.global	xTimer_Create
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1156              	xTimer_Create:
 1157              	.LVL71:
 1158              	.LFB822:
 194:Core/Src/tim.c **** 	xTimerHandle NewTimer = 0; //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
 1159              		.loc 1 194 1 is_stmt 1 view -0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Core/Src/tim.c **** 	xTimerHandle NewTimer = 0; //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
 1163              		.loc 1 194 1 is_stmt 0 view .LVU314
 1164 0000 70B5     		push	{r4, r5, r6, lr}
 1165              	.LCFI13:
 1166              		.cfi_def_cfa_offset 16
 1167              		.cfi_offset 4, -16
 1168              		.cfi_offset 5, -12
 1169              		.cfi_offset 6, -8
 1170              		.cfi_offset 14, -4
 1171 0002 0646     		mov	r6, r0
 195:Core/Src/tim.c **** 	
 1172              		.loc 1 195 2 is_stmt 1 view .LVU315
 1173              	.LVL72:
ARM GAS  /tmp/ccgn3NGF.s 			page 126


 197:Core/Src/tim.c **** 	{
 1174              		.loc 1 197 2 view .LVU316
 1175              	.LBB224:
 197:Core/Src/tim.c **** 	{
 1176              		.loc 1 197 7 view .LVU317
 197:Core/Src/tim.c **** 	{
 1177              		.loc 1 197 16 is_stmt 0 view .LVU318
 1178 0004 4FF0000C 		mov	ip, #0
 1179              	.LVL73:
 1180              	.L47:
 197:Core/Src/tim.c **** 	{
 1181              		.loc 1 197 27 is_stmt 1 discriminator 1 view .LVU319
 197:Core/Src/tim.c **** 	{
 1182              		.loc 1 197 2 is_stmt 0 discriminator 1 view .LVU320
 1183 0008 BCF1010F 		cmp	ip, #1
 1184 000c 25D8     		bhi	.L54
 199:Core/Src/tim.c **** 		{
 1185              		.loc 1 199 3 is_stmt 1 view .LVU321
 199:Core/Src/tim.c **** 		{
 1186              		.loc 1 199 24 is_stmt 0 view .LVU322
 1187 000e 6546     		mov	r5, ip
 1188 0010 134C     		ldr	r4, .L56
 1189 0012 04EB0C1E 		add	lr, r4, ip, lsl #4
 1190 0016 DEF80C40 		ldr	r4, [lr, #12]
 199:Core/Src/tim.c **** 		{
 1191              		.loc 1 199 6 view .LVU323
 1192 001a 24B1     		cbz	r4, .L55
 197:Core/Src/tim.c **** 	{
 1193              		.loc 1 197 48 is_stmt 1 discriminator 2 view .LVU324
 197:Core/Src/tim.c **** 	{
 1194              		.loc 1 197 53 is_stmt 0 discriminator 2 view .LVU325
 1195 001c 0CF1010C 		add	ip, ip, #1
 1196              	.LVL74:
 197:Core/Src/tim.c **** 	{
 1197              		.loc 1 197 53 discriminator 2 view .LVU326
 1198 0020 1FFA8CFC 		uxth	ip, ip
 1199              	.LVL75:
 197:Core/Src/tim.c **** 	{
 1200              		.loc 1 197 53 discriminator 2 view .LVU327
 1201 0024 F0E7     		b	.L47
 1202              	.L55:
 201:Core/Src/tim.c **** 			xTimerList[count].AutoReload = AutoReload;				//–ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–ª–∏ –
 1203              		.loc 1 201 4 is_stmt 1 view .LVU328
 201:Core/Src/tim.c **** 			xTimerList[count].AutoReload = AutoReload;				//–ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–ª–∏ –
 1204              		.loc 1 201 31 is_stmt 0 view .LVU329
 1205 0026 CEF80460 		str	r6, [lr, #4]
 202:Core/Src/tim.c **** 			xTimerList[count].CallbackFunction = CallbackFunction;	//—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—é –∫–æ–ª–ª–
 1206              		.loc 1 202 4 is_stmt 1 view .LVU330
 202:Core/Src/tim.c **** 			xTimerList[count].CallbackFunction = CallbackFunction;	//—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—é –∫–æ–ª–ª–
 1207              		.loc 1 202 33 is_stmt 0 view .LVU331
 1208 002a 8EF80910 		strb	r1, [lr, #9]
 203:Core/Src/tim.c **** 			
 1209              		.loc 1 203 4 is_stmt 1 view .LVU332
 203:Core/Src/tim.c **** 			
 1210              		.loc 1 203 39 is_stmt 0 view .LVU333
 1211 002e CEF80C20 		str	r2, [lr, #12]
 205:Core/Src/tim.c **** 			{
ARM GAS  /tmp/ccgn3NGF.s 			page 127


 1212              		.loc 1 205 4 is_stmt 1 view .LVU334
 205:Core/Src/tim.c **** 			{
 1213              		.loc 1 205 7 is_stmt 0 view .LVU335
 1214 0032 63B1     		cbz	r3, .L49
 207:Core/Src/tim.c **** 				xTimerList[count].State = __ACTIVE; //—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω
 1215              		.loc 1 207 5 is_stmt 1 view .LVU336
 207:Core/Src/tim.c **** 				xTimerList[count].State = __ACTIVE; //—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω
 1216              		.loc 1 207 32 is_stmt 0 view .LVU337
 1217 0034 0B4B     		ldr	r3, .L56+4
 1218              	.LVL76:
 207:Core/Src/tim.c **** 				xTimerList[count].State = __ACTIVE; //—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω
 1219              		.loc 1 207 32 view .LVU338
 1220 0036 1B68     		ldr	r3, [r3]
 1221 0038 9847     		blx	r3
 1222              	.LVL77:
 207:Core/Src/tim.c **** 				xTimerList[count].State = __ACTIVE; //—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω
 1223              		.loc 1 207 43 view .LVU339
 1224 003a 0644     		add	r6, r6, r0
 1225              	.LVL78:
 207:Core/Src/tim.c **** 				xTimerList[count].State = __ACTIVE; //—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω
 1226              		.loc 1 207 30 view .LVU340
 1227 003c 084A     		ldr	r2, .L56
 1228 003e 2B01     		lsls	r3, r5, #4
 1229 0040 02EB0511 		add	r1, r2, r5, lsl #4
 1230 0044 D650     		str	r6, [r2, r3]
 208:Core/Src/tim.c **** 			} 
 1231              		.loc 1 208 5 is_stmt 1 view .LVU341
 208:Core/Src/tim.c **** 			} 
 1232              		.loc 1 208 29 is_stmt 0 view .LVU342
 1233 0046 0123     		movs	r3, #1
 1234 0048 0B72     		strb	r3, [r1, #8]
 1235              	.L50:
 212:Core/Src/tim.c **** 			break;
 1236              		.loc 1 212 4 is_stmt 1 view .LVU343
 212:Core/Src/tim.c **** 			break;
 1237              		.loc 1 212 35 is_stmt 0 view .LVU344
 1238 004a 681C     		adds	r0, r5, #1
 1239              	.LVL79:
 213:Core/Src/tim.c ****     }
 1240              		.loc 1 213 4 is_stmt 1 view .LVU345
 1241 004c 06E0     		b	.L46
 1242              	.LVL80:
 1243              	.L49:
 211:Core/Src/tim.c **** 			NewTimer = (xTimerHandle)(count+1); //–≤–æ–∑–≤—Ä–∞—Ç –Ω–æ–º–µ—Ä–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä
 1244              		.loc 1 211 6 view .LVU346
 211:Core/Src/tim.c **** 			NewTimer = (xTimerHandle)(count+1); //–≤–æ–∑–≤—Ä–∞—Ç –Ω–æ–º–µ—Ä–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä
 1245              		.loc 1 211 30 is_stmt 0 view .LVU347
 1246 004e 044B     		ldr	r3, .L56
 1247              	.LVL81:
 211:Core/Src/tim.c **** 			NewTimer = (xTimerHandle)(count+1); //–≤–æ–∑–≤—Ä–∞—Ç –Ω–æ–º–µ—Ä–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä
 1248              		.loc 1 211 30 view .LVU348
 1249 0050 03EB0C13 		add	r3, r3, ip, lsl #4
 1250 0054 0022     		movs	r2, #0
 1251              	.LVL82:
 211:Core/Src/tim.c **** 			NewTimer = (xTimerHandle)(count+1); //–≤–æ–∑–≤—Ä–∞—Ç –Ω–æ–º–µ—Ä–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä
 1252              		.loc 1 211 30 view .LVU349
 1253 0056 1A72     		strb	r2, [r3, #8]
ARM GAS  /tmp/ccgn3NGF.s 			page 128


 1254 0058 F7E7     		b	.L50
 1255              	.LVL83:
 1256              	.L54:
 211:Core/Src/tim.c **** 			NewTimer = (xTimerHandle)(count+1); //–≤–æ–∑–≤—Ä–∞—Ç –Ω–æ–º–µ—Ä–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä
 1257              		.loc 1 211 30 view .LVU350
 1258              	.LBE224:
 195:Core/Src/tim.c **** 	
 1259              		.loc 1 195 15 view .LVU351
 1260 005a 0020     		movs	r0, #0
 1261              	.LVL84:
 216:Core/Src/tim.c **** }
 1262              		.loc 1 216 2 is_stmt 1 view .LVU352
 1263              	.L46:
 217:Core/Src/tim.c **** 
 1264              		.loc 1 217 1 is_stmt 0 view .LVU353
 1265 005c 70BD     		pop	{r4, r5, r6, pc}
 1266              	.L57:
 1267 005e 00BF     		.align	2
 1268              	.L56:
 1269 0060 00000000 		.word	.LANCHOR0
 1270 0064 00000000 		.word	.LANCHOR4
 1271              		.cfi_endproc
 1272              	.LFE822:
 1274              		.section	.text.timers_ini,"ax",%progbits
 1275              		.align	1
 1276              		.global	timers_ini
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1281              	timers_ini:
 1282              	.LFB821:
 183:Core/Src/tim.c **** 	TimerMs_init();
 1283              		.loc 1 183 1 is_stmt 1 view -0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287 0000 08B5     		push	{r3, lr}
 1288              	.LCFI14:
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 3, -8
 1291              		.cfi_offset 14, -4
 184:Core/Src/tim.c ****   	SysTimer_init(); 		//–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TIM6 –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ xTimer
 1292              		.loc 1 184 2 view .LVU355
 1293 0002 FFF7FEFF 		bl	TimerMs_init
 1294              	.LVL85:
 185:Core/Src/tim.c ****   	SysTick_CallbackFunction = xTimer_Task; //–ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—é –∑–Ω–∞—á–µ–Ω–∏
 1295              		.loc 1 185 4 view .LVU356
 1296 0006 FFF7FEFF 		bl	SysTimer_init
 1297              	.LVL86:
 186:Core/Src/tim.c ****   	xTimeNow = Get_SysTick; //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Ñ-—é –ø–æ–ª—É—á–µ–
 1298              		.loc 1 186 4 view .LVU357
 186:Core/Src/tim.c ****   	xTimeNow = Get_SysTick; //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Ñ-—é –ø–æ–ª—É—á–µ–
 1299              		.loc 1 186 29 is_stmt 0 view .LVU358
 1300 000a 084B     		ldr	r3, .L60
 1301 000c 084A     		ldr	r2, .L60+4
 1302 000e 1A60     		str	r2, [r3]
 187:Core/Src/tim.c ****   	xSysTimer = xTimer_Create(1000, PERIODIC, &vSysTimerCallback, ENABLE);
ARM GAS  /tmp/ccgn3NGF.s 			page 129


 1303              		.loc 1 187 4 is_stmt 1 view .LVU359
 187:Core/Src/tim.c ****   	xSysTimer = xTimer_Create(1000, PERIODIC, &vSysTimerCallback, ENABLE);
 1304              		.loc 1 187 13 is_stmt 0 view .LVU360
 1305 0010 084B     		ldr	r3, .L60+8
 1306 0012 094A     		ldr	r2, .L60+12
 1307 0014 1A60     		str	r2, [r3]
 188:Core/Src/tim.c **** }
 1308              		.loc 1 188 4 is_stmt 1 view .LVU361
 188:Core/Src/tim.c **** }
 1309              		.loc 1 188 16 is_stmt 0 view .LVU362
 1310 0016 0123     		movs	r3, #1
 1311 0018 084A     		ldr	r2, .L60+16
 1312 001a 1946     		mov	r1, r3
 1313 001c 4FF47A70 		mov	r0, #1000
 1314 0020 FFF7FEFF 		bl	xTimer_Create
 1315              	.LVL87:
 188:Core/Src/tim.c **** }
 1316              		.loc 1 188 14 view .LVU363
 1317 0024 064B     		ldr	r3, .L60+20
 1318 0026 1860     		str	r0, [r3]
 189:Core/Src/tim.c **** 
 1319              		.loc 1 189 1 view .LVU364
 1320 0028 08BD     		pop	{r3, pc}
 1321              	.L61:
 1322 002a 00BF     		.align	2
 1323              	.L60:
 1324 002c 00000000 		.word	.LANCHOR3
 1325 0030 00000000 		.word	xTimer_Task
 1326 0034 00000000 		.word	.LANCHOR4
 1327 0038 00000000 		.word	Get_SysTick
 1328 003c 00000000 		.word	vSysTimerCallback
 1329 0040 00000000 		.word	.LANCHOR5
 1330              		.cfi_endproc
 1331              	.LFE821:
 1333              		.section	.text.xTimer_SetPeriod,"ax",%progbits
 1334              		.align	1
 1335              		.global	xTimer_SetPeriod
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1340              	xTimer_SetPeriod:
 1341              	.LVL88:
 1342              	.LFB823:
 221:Core/Src/tim.c **** 	if ( xTimer != 0 )  
 1343              		.loc 1 221 1 is_stmt 1 view -0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              		@ link register save eliminated.
 222:Core/Src/tim.c **** 	{	xTimerList[(uint32_t)xTimer-1].periodic = xTimerPeriodInTicks;	} //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥
 1348              		.loc 1 222 2 view .LVU366
 222:Core/Src/tim.c **** 	{	xTimerList[(uint32_t)xTimer-1].periodic = xTimerPeriodInTicks;	} //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥
 1349              		.loc 1 222 5 is_stmt 0 view .LVU367
 1350 0000 20B1     		cbz	r0, .L62
 223:Core/Src/tim.c **** }
 1351              		.loc 1 223 4 is_stmt 1 view .LVU368
 223:Core/Src/tim.c **** }
ARM GAS  /tmp/ccgn3NGF.s 			page 130


 1352              		.loc 1 223 31 is_stmt 0 view .LVU369
 1353 0002 431E     		subs	r3, r0, #1
 223:Core/Src/tim.c **** }
 1354              		.loc 1 223 44 view .LVU370
 1355 0004 024A     		ldr	r2, .L64
 1356 0006 02EB0313 		add	r3, r2, r3, lsl #4
 1357 000a 5960     		str	r1, [r3, #4]
 1358              	.L62:
 224:Core/Src/tim.c **** 
 1359              		.loc 1 224 1 view .LVU371
 1360 000c 7047     		bx	lr
 1361              	.L65:
 1362 000e 00BF     		.align	2
 1363              	.L64:
 1364 0010 00000000 		.word	.LANCHOR0
 1365              		.cfi_endproc
 1366              	.LFE823:
 1368              		.section	.text.xTimer_Reload,"ax",%progbits
 1369              		.align	1
 1370              		.global	xTimer_Reload
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1375              	xTimer_Reload:
 1376              	.LVL89:
 1377              	.LFB824:
 228:Core/Src/tim.c **** 	if ( xTimer != 0 ) 
 1378              		.loc 1 228 1 is_stmt 1 view -0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 229:Core/Src/tim.c **** 	{
 1382              		.loc 1 229 2 view .LVU373
 229:Core/Src/tim.c **** 	{
 1383              		.loc 1 229 5 is_stmt 0 view .LVU374
 1384 0000 78B1     		cbz	r0, .L69
 228:Core/Src/tim.c **** 	if ( xTimer != 0 ) 
 1385              		.loc 1 228 1 view .LVU375
 1386 0002 10B5     		push	{r4, lr}
 1387              	.LCFI15:
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 4, -8
 1390              		.cfi_offset 14, -4
 1391 0004 0446     		mov	r4, r0
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1392              		.loc 1 231 3 is_stmt 1 view .LVU376
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1393              		.loc 1 231 43 is_stmt 0 view .LVU377
 1394 0006 074B     		ldr	r3, .L72
 1395 0008 1B68     		ldr	r3, [r3]
 1396 000a 9847     		blx	r3
 1397              	.LVL90:
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1398              		.loc 1 231 83 view .LVU378
 1399 000c 631E     		subs	r3, r4, #1
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1400              		.loc 1 231 86 view .LVU379
ARM GAS  /tmp/ccgn3NGF.s 			page 131


 1401 000e 0649     		ldr	r1, .L72+4
 1402 0010 1C01     		lsls	r4, r3, #4
 1403              	.LVL91:
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1404              		.loc 1 231 86 view .LVU380
 1405 0012 01EB0313 		add	r3, r1, r3, lsl #4
 1406              	.LVL92:
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1407              		.loc 1 231 86 view .LVU381
 1408 0016 5A68     		ldr	r2, [r3, #4]
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1409              		.loc 1 231 54 view .LVU382
 1410 0018 0244     		add	r2, r2, r0
 231:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __ACTIVE; //–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
 1411              		.loc 1 231 41 view .LVU383
 1412 001a 0A51     		str	r2, [r1, r4]
 232:Core/Src/tim.c **** 	}
 1413              		.loc 1 232 3 is_stmt 1 view .LVU384
 232:Core/Src/tim.c **** 	}
 1414              		.loc 1 232 40 is_stmt 0 view .LVU385
 1415 001c 0122     		movs	r2, #1
 1416 001e 1A72     		strb	r2, [r3, #8]
 234:Core/Src/tim.c **** 
 1417              		.loc 1 234 1 view .LVU386
 1418 0020 10BD     		pop	{r4, pc}
 1419              	.LVL93:
 1420              	.L69:
 1421              	.LCFI16:
 1422              		.cfi_def_cfa_offset 0
 1423              		.cfi_restore 4
 1424              		.cfi_restore 14
 234:Core/Src/tim.c **** 
 1425              		.loc 1 234 1 view .LVU387
 1426 0022 7047     		bx	lr
 1427              	.L73:
 1428              		.align	2
 1429              	.L72:
 1430 0024 00000000 		.word	.LANCHOR4
 1431 0028 00000000 		.word	.LANCHOR0
 1432              		.cfi_endproc
 1433              	.LFE824:
 1435              		.section	.text.xTimer_Delete,"ax",%progbits
 1436              		.align	1
 1437              		.global	xTimer_Delete
 1438              		.syntax unified
 1439              		.thumb
 1440              		.thumb_func
 1442              	xTimer_Delete:
 1443              	.LVL94:
 1444              	.LFB825:
 238:Core/Src/tim.c **** 	if ( xTimer != 0 ) 
 1445              		.loc 1 238 1 is_stmt 1 view -0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 1449              		@ link register save eliminated.
 239:Core/Src/tim.c **** 	{
ARM GAS  /tmp/ccgn3NGF.s 			page 132


 1450              		.loc 1 239 2 view .LVU389
 239:Core/Src/tim.c **** 	{
 1451              		.loc 1 239 5 is_stmt 0 view .LVU390
 1452 0000 30B1     		cbz	r0, .L74
 241:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __IDLE;
 1453              		.loc 1 241 3 is_stmt 1 view .LVU391
 241:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __IDLE;
 1454              		.loc 1 241 30 is_stmt 0 view .LVU392
 1455 0002 421E     		subs	r2, r0, #1
 241:Core/Src/tim.c **** 		xTimerList[(uint32_t)xTimer-1].State = __IDLE;
 1456              		.loc 1 241 51 view .LVU393
 1457 0004 034B     		ldr	r3, .L76
 1458 0006 03EB0213 		add	r3, r3, r2, lsl #4
 1459 000a 0022     		movs	r2, #0
 1460 000c DA60     		str	r2, [r3, #12]
 242:Core/Src/tim.c **** 		xTimer = 0;
 1461              		.loc 1 242 3 is_stmt 1 view .LVU394
 242:Core/Src/tim.c **** 		xTimer = 0;
 1462              		.loc 1 242 40 is_stmt 0 view .LVU395
 1463 000e 1A72     		strb	r2, [r3, #8]
 243:Core/Src/tim.c **** 	}		
 1464              		.loc 1 243 3 is_stmt 1 view .LVU396
 1465              	.LVL95:
 1466              	.L74:
 245:Core/Src/tim.c **** 
 1467              		.loc 1 245 1 is_stmt 0 view .LVU397
 1468 0010 7047     		bx	lr
 1469              	.L77:
 1470 0012 00BF     		.align	2
 1471              	.L76:
 1472 0014 00000000 		.word	.LANCHOR0
 1473              		.cfi_endproc
 1474              	.LFE825:
 1476              		.section	.text.xSysTimer_Reload,"ax",%progbits
 1477              		.align	1
 1478              		.global	xSysTimer_Reload
 1479              		.syntax unified
 1480              		.thumb
 1481              		.thumb_func
 1483              	xSysTimer_Reload:
 1484              	.LVL96:
 1485              	.LFB828:
 281:Core/Src/tim.c **** 	xTimer_SetPeriod(xSysTimer, delay_ms);
 1486              		.loc 1 281 1 is_stmt 1 view -0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 281:Core/Src/tim.c **** 	xTimer_SetPeriod(xSysTimer, delay_ms);
 1490              		.loc 1 281 1 is_stmt 0 view .LVU399
 1491 0000 10B5     		push	{r4, lr}
 1492              	.LCFI17:
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 4, -8
 1495              		.cfi_offset 14, -4
 1496 0002 0146     		mov	r1, r0
 282:Core/Src/tim.c **** 	xTimer_Reload(xSysTimer);	
 1497              		.loc 1 282 2 is_stmt 1 view .LVU400
ARM GAS  /tmp/ccgn3NGF.s 			page 133


 1498 0004 034C     		ldr	r4, .L80
 1499 0006 2068     		ldr	r0, [r4]
 1500              	.LVL97:
 282:Core/Src/tim.c **** 	xTimer_Reload(xSysTimer);	
 1501              		.loc 1 282 2 is_stmt 0 view .LVU401
 1502 0008 FFF7FEFF 		bl	xTimer_SetPeriod
 1503              	.LVL98:
 283:Core/Src/tim.c **** }
 1504              		.loc 1 283 2 is_stmt 1 view .LVU402
 1505 000c 2068     		ldr	r0, [r4]
 1506 000e FFF7FEFF 		bl	xTimer_Reload
 1507              	.LVL99:
 284:Core/Src/tim.c **** 
 1508              		.loc 1 284 1 is_stmt 0 view .LVU403
 1509 0012 10BD     		pop	{r4, pc}
 1510              	.L81:
 1511              		.align	2
 1512              	.L80:
 1513 0014 00000000 		.word	.LANCHOR5
 1514              		.cfi_endproc
 1515              	.LFE828:
 1517              		.section	.text.systick_delay,"ax",%progbits
 1518              		.align	1
 1519              		.global	systick_delay
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1524              	systick_delay:
 1525              	.LVL100:
 1526              	.LFB830:
 291:Core/Src/tim.c **** 
 292:Core/Src/tim.c **** //-----------------------------------------------------------------------------------//
 293:Core/Src/tim.c **** uint8_t systick_delay (uint64_t delay)
 294:Core/Src/tim.c **** {
 1527              		.loc 1 294 1 is_stmt 1 view -0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
 295:Core/Src/tim.c ****   uint8_t timeout_flag = 0;
 1532              		.loc 1 295 3 view .LVU405
 296:Core/Src/tim.c ****   if (TicksCounter < delay)
 1533              		.loc 1 296 3 view .LVU406
 1534              		.loc 1 296 20 is_stmt 0 view .LVU407
 1535 0000 044B     		ldr	r3, .L85
 1536 0002 D3E90023 		ldrd	r2, [r3]
 1537              		.loc 1 296 6 view .LVU408
 1538 0006 8242     		cmp	r2, r0
 1539 0008 8B41     		sbcs	r3, r3, r1
 1540 000a 01D2     		bcs	.L84
 297:Core/Src/tim.c ****   { timeout_flag = 0;	}
 1541              		.loc 1 297 18 view .LVU409
 1542 000c 0020     		movs	r0, #0
 1543              	.LVL101:
 1544              		.loc 1 297 18 view .LVU410
 1545 000e 7047     		bx	lr
 1546              	.LVL102:
ARM GAS  /tmp/ccgn3NGF.s 			page 134


 1547              	.L84:
 298:Core/Src/tim.c ****   else
 299:Core/Src/tim.c ****   { timeout_flag = 1;	}
 1548              		.loc 1 299 18 view .LVU411
 1549 0010 0120     		movs	r0, #1
 1550              	.LVL103:
 300:Core/Src/tim.c ****   return timeout_flag;
 1551              		.loc 1 300 3 is_stmt 1 view .LVU412
 301:Core/Src/tim.c **** }
 1552              		.loc 1 301 1 is_stmt 0 view .LVU413
 1553 0012 7047     		bx	lr
 1554              	.L86:
 1555              		.align	2
 1556              	.L85:
 1557 0014 00000000 		.word	.LANCHOR1
 1558              		.cfi_endproc
 1559              	.LFE830:
 1561              		.global	flag_end_delay
 1562              		.section	.bss.SysTick_CallbackFunction,"aw",%nobits
 1563              		.align	2
 1564              		.set	.LANCHOR3,. + 0
 1567              	SysTick_CallbackFunction:
 1568 0000 00000000 		.space	4
 1569              		.section	.bss.TicksCounter,"aw",%nobits
 1570              		.align	3
 1571              		.set	.LANCHOR1,. + 0
 1574              	TicksCounter:
 1575 0000 00000000 		.space	8
 1575      00000000 
 1576              		.section	.bss.flag_end_delay,"aw",%nobits
 1577              		.set	.LANCHOR2,. + 0
 1580              	flag_end_delay:
 1581 0000 00       		.space	1
 1582              		.section	.bss.xSysTimer,"aw",%nobits
 1583              		.align	2
 1584              		.set	.LANCHOR5,. + 0
 1587              	xSysTimer:
 1588 0000 00000000 		.space	4
 1589              		.section	.bss.xTimeNow,"aw",%nobits
 1590              		.align	2
 1591              		.set	.LANCHOR4,. + 0
 1594              	xTimeNow:
 1595 0000 00000000 		.space	4
 1596              		.section	.bss.xTimerList,"aw",%nobits
 1597              		.align	2
 1598              		.set	.LANCHOR0,. + 0
 1601              	xTimerList:
 1602 0000 00000000 		.space	32
 1602      00000000 
 1602      00000000 
 1602      00000000 
 1602      00000000 
 1603              		.text
 1604              	.Letext0:
 1605              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xb.h"
 1606              		.file 6 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/m
 1607              		.file 7 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
ARM GAS  /tmp/ccgn3NGF.s 			page 135


 1608              		.file 8 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 1609              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_dma.h"
 1610              		.file 10 "Core/Inc/tim.h"
 1611              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccgn3NGF.s 			page 136


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccgn3NGF.s:18     .text.xTimer_Task:0000000000000000 $t
     /tmp/ccgn3NGF.s:24     .text.xTimer_Task:0000000000000000 xTimer_Task
     /tmp/ccgn3NGF.s:121    .text.xTimer_Task:0000000000000058 $d
     /tmp/ccgn3NGF.s:126    .text.Get_SysTick:0000000000000000 $t
     /tmp/ccgn3NGF.s:132    .text.Get_SysTick:0000000000000000 Get_SysTick
     /tmp/ccgn3NGF.s:147    .text.Get_SysTick:0000000000000008 $d
     /tmp/ccgn3NGF.s:152    .text.TimerMs_init:0000000000000000 $t
     /tmp/ccgn3NGF.s:157    .text.TimerMs_init:0000000000000000 TimerMs_init
     /tmp/ccgn3NGF.s:419    .text.TimerMs_init:00000000000000b0 $d
     /tmp/ccgn3NGF.s:429    .text.vSysTimerCallback:0000000000000000 $t
     /tmp/ccgn3NGF.s:434    .text.vSysTimerCallback:0000000000000000 vSysTimerCallback
     /tmp/ccgn3NGF.s:456    .text.SysTimer_init:0000000000000000 $t
     /tmp/ccgn3NGF.s:461    .text.SysTimer_init:0000000000000000 SysTimer_init
     /tmp/ccgn3NGF.s:672    .text.SysTimer_init:000000000000007c $d
     /tmp/ccgn3NGF.s:680    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccgn3NGF.s:686    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccgn3NGF.s:794    .text.MX_TIM7_Init:0000000000000054 $d
     /tmp/ccgn3NGF.s:800    .text.delay_us:0000000000000000 $t
     /tmp/ccgn3NGF.s:806    .text.delay_us:0000000000000000 delay_us
     /tmp/ccgn3NGF.s:900    .text.delay_us:000000000000002c $d
     /tmp/ccgn3NGF.s:905    .text.TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccgn3NGF.s:911    .text.TIM10_IRQHandler:0000000000000000 TIM10_IRQHandler
     /tmp/ccgn3NGF.s:972    .text.TIM10_IRQHandler:0000000000000024 $d
     /tmp/ccgn3NGF.s:978    .text.delay_ms:0000000000000000 $t
     /tmp/ccgn3NGF.s:984    .text.delay_ms:0000000000000000 delay_ms
     /tmp/ccgn3NGF.s:1051   .text.delay_ms:0000000000000020 $d
     /tmp/ccgn3NGF.s:1057   .text.TIM6_IRQHandler:0000000000000000 $t
     /tmp/ccgn3NGF.s:1063   .text.TIM6_IRQHandler:0000000000000000 TIM6_IRQHandler
     /tmp/ccgn3NGF.s:1143   .text.TIM6_IRQHandler:0000000000000038 $d
     /tmp/ccgn3NGF.s:1150   .text.xTimer_Create:0000000000000000 $t
     /tmp/ccgn3NGF.s:1156   .text.xTimer_Create:0000000000000000 xTimer_Create
     /tmp/ccgn3NGF.s:1269   .text.xTimer_Create:0000000000000060 $d
     /tmp/ccgn3NGF.s:1275   .text.timers_ini:0000000000000000 $t
     /tmp/ccgn3NGF.s:1281   .text.timers_ini:0000000000000000 timers_ini
     /tmp/ccgn3NGF.s:1324   .text.timers_ini:000000000000002c $d
     /tmp/ccgn3NGF.s:1334   .text.xTimer_SetPeriod:0000000000000000 $t
     /tmp/ccgn3NGF.s:1340   .text.xTimer_SetPeriod:0000000000000000 xTimer_SetPeriod
     /tmp/ccgn3NGF.s:1364   .text.xTimer_SetPeriod:0000000000000010 $d
     /tmp/ccgn3NGF.s:1369   .text.xTimer_Reload:0000000000000000 $t
     /tmp/ccgn3NGF.s:1375   .text.xTimer_Reload:0000000000000000 xTimer_Reload
     /tmp/ccgn3NGF.s:1430   .text.xTimer_Reload:0000000000000024 $d
     /tmp/ccgn3NGF.s:1436   .text.xTimer_Delete:0000000000000000 $t
     /tmp/ccgn3NGF.s:1442   .text.xTimer_Delete:0000000000000000 xTimer_Delete
     /tmp/ccgn3NGF.s:1472   .text.xTimer_Delete:0000000000000014 $d
     /tmp/ccgn3NGF.s:1477   .text.xSysTimer_Reload:0000000000000000 $t
     /tmp/ccgn3NGF.s:1483   .text.xSysTimer_Reload:0000000000000000 xSysTimer_Reload
     /tmp/ccgn3NGF.s:1513   .text.xSysTimer_Reload:0000000000000014 $d
     /tmp/ccgn3NGF.s:1518   .text.systick_delay:0000000000000000 $t
     /tmp/ccgn3NGF.s:1524   .text.systick_delay:0000000000000000 systick_delay
     /tmp/ccgn3NGF.s:1557   .text.systick_delay:0000000000000014 $d
     /tmp/ccgn3NGF.s:1580   .bss.flag_end_delay:0000000000000000 flag_end_delay
     /tmp/ccgn3NGF.s:1563   .bss.SysTick_CallbackFunction:0000000000000000 $d
     /tmp/ccgn3NGF.s:1567   .bss.SysTick_CallbackFunction:0000000000000000 SysTick_CallbackFunction
     /tmp/ccgn3NGF.s:1570   .bss.TicksCounter:0000000000000000 $d
     /tmp/ccgn3NGF.s:1574   .bss.TicksCounter:0000000000000000 TicksCounter
ARM GAS  /tmp/ccgn3NGF.s 			page 137


     /tmp/ccgn3NGF.s:1581   .bss.flag_end_delay:0000000000000000 $d
     /tmp/ccgn3NGF.s:1583   .bss.xSysTimer:0000000000000000 $d
     /tmp/ccgn3NGF.s:1587   .bss.xSysTimer:0000000000000000 xSysTimer
     /tmp/ccgn3NGF.s:1590   .bss.xTimeNow:0000000000000000 $d
     /tmp/ccgn3NGF.s:1594   .bss.xTimeNow:0000000000000000 xTimeNow
     /tmp/ccgn3NGF.s:1597   .bss.xTimerList:0000000000000000 $d
     /tmp/ccgn3NGF.s:1601   .bss.xTimerList:0000000000000000 xTimerList

UNDEFINED SYMBOLS
LL_TIM_Init
SysTimerCallback
